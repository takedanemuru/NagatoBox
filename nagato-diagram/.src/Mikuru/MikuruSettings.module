' Gambas module file

Property Layout As Integer[]
Property ZoomType As Integer
Property ZoomRate As Float

Public _$settings As New Settings

Public Enum ZoomFit, ZoomNormal, ZoomRating

Public Sub LoadFormSettings(argForm As Form)
    
    With argForm
        .X = Me._$settings["form/x", .X]
        .Y = Me._$settings["form/y", .Y]
        .W = Me._$settings["form/w", .W]
        .H = Me._$settings["form/h", .H]
    End With
    
End

Public Sub SaveFormSettings(argForm As Form)
    
    With argForm
        Me._$settings["form/x"] = .X
        Me._$settings["form/y"] = .Y
        Me._$settings["form/w"] = .W
        Me._$settings["form/h"] = .H
    End With
    
    Me._$settings.Save()
    
End

Public Function LoadRecentPaths() As String[]
    
    Return MikuruPath.Sanitize(Me._$settings["file/recent", [""]])
    
End

Public Sub SaveRecntPath(argPath As String)
    
    Me._$settings["file/recent"] = MikuruPath.Push(argPath, Me._$settings["file/recent", [""]])
    Me._$settings.Save()
    
End

Public Sub ClearRecntPaths()
    
    Me._$settings["file/recent"] = [""]
    Me._$settings.Save()
    
End

Private Function Layout_Read() As Integer[]

    Return Me._$settings["layout/width", [1, 1]]

End

Private Sub Layout_Write(Value As Integer[])

    Me._$settings["layout/width"] = Value
    Me._$settings.Save()

End

Private Function ZoomType_Read() As Integer

    Return Me._$settings["zoom/type", ZoomNormal]

End

Private Sub ZoomType_Write(Value As Integer)

    Me._$settings["zoom/type"] = Value
    Me._$settings.Save()

End

Private Function ZoomRate_Read() As Float

    Return Me._$settings["zoom/rate", 1] 

End

Private Sub ZoomRate_Write(Value As Float)

    Me._$settings["zoom/rate"] = Value
    Me._$settings.Save()
    

End
