' Gambas class file

Inherits NagatoObject

Private $treeView As TreeView

Private Sub addBookmarkItem(argResult As Result, argCategory As String)
    
    Dim yukiUrl As String = argResult[NagatoDB.Column.Url]
    Dim yukiUserDefienedPageName As String = argResult[NagatoDB.Column.UserDefinedPageName]
    Dim yukiFavicon As Picture = Null
    
    If NagatoSettings.ShowFavicon Then yukiFavicon = NagatoDBFavicon.Get(yukiUrl)
    $treeView.Add(yukiUrl, yukiUserDefienedPageName, yukiFavicon, argCategory)
    
End

Private Sub setBookmark(argCategory As String)
    
    Dim yukiResult As Result = NagatoDBBookmark.GetBookmarkResultByCategoryName(argCategory)
    
    For Each yukiResult
        If $treeView.Exist(yukiResult[NagatoDB.Column.Url]) Then Continue
        addBookmarkItem(yukiResult, argCategory)
    Next
    
End

Private Sub setCategory(argCategory As String)
    
    Dim yukiSubCategory As String
    Dim yukiTuple As New NagatoTupleString
    
    For Each yukiSubCategory In Split(argCategory, "/", "", True)
        yukiTuple.Push(IIf(yukiTuple.Current = "", yukiSubCategory, yukiTuple.Current &/ yukiSubCategory))
        If $treeView.Exist(yukiTuple.Current) Then Continue
        $treeView.Add(argCategory, yukiSubCategory, MikuruIcon.Get("folder"), yukiTuple.Previous)
    Next
    
End

Private Sub setCategories()
    
    Dim yukiCategory As String
    
    For Each yukiCategory In NagatoDBBookmark.CategoryNames
        setCategory(yukiCategory)
        setBookmark(yukiCategory)
    Next
    
End

Private Sub setTrashBin()
    
    $treeView.Add("NagatoTrashBin", "Delete", MikuruIcon.Get("bin"))
    
End

Public Sub Reload()
    
    $treeView.Clear()
    setCategories()
    setTrashBin()
    
End

Public Sub RemoveBookmark(argUrl As String)
    
    Try $treeView.Remove(argUrl)
    If Not Error Then NagatoDBBookmark.DeleteBookmark(argUrl)
    
End

Public Sub _new(argTreeView As TreeView)
    
    $treeView = argTreeView
    Me.Reload()
    
End
