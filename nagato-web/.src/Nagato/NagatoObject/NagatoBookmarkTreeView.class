' Gambas class file

Inherits NagatoObject

Private $treeView As TreeView
Private $title As String

Private Sub setBookmark(argCategory As String)
    
    Dim yukiResult As Result = NagatoDBWeb.GetBookmarkResultByCategoryName(argCategory)
    Dim yukiFavicon As Picture
    
    For Each yukiResult
        With NagatoDBWeb
            If $treeView.Exist(yukiResult[.ColumnUrl]) Then Continue
            yukiFavicon = NagatoDBWeb.GetFavicon(yukiResult[.ColumnUrl])
            $treeView.Add(yukiResult[.ColumnUrl], yukiResult[.ColumnUserDefinedPageName], yukiFavicon, argCategory)
        End With
    Next
    
End

Private Sub setCategory(argCategory As String)
    
    Dim yukiSubCategory As String
    Dim yukiTuple As New NagatoTupleString
    
    For Each yukiSubCategory In Split(argCategory, "/", "", True)
        yukiTuple.Push(IIf(yukiTuple.Current = "", yukiSubCategory, yukiTuple.Current &/ yukiSubCategory))
        If $treeView.Exist(yukiTuple.Current) Then Continue
        $treeView.Add(argCategory, yukiSubCategory, MikuruIcon.Get("folder"), yukiTuple.Previous)
    Next
    
End

Private Sub setCategories()
    
    Dim yukiCategory As String
    
    For Each yukiCategory In NagatoDBWeb.CategoryNames
        setCategory(yukiCategory)
        setBookmark(yukiCategory)
    Next
    
End

Private Sub setTrashBin()
    
    $treeView.Add("NagatoTrashBin", "Delete", MikuruIcon.Get("bin"))
    
End

Private Sub reload()
    
    $treeView.Clear()
    setCategories()
    setTrashBin()
    
End

Private Sub removeBookmark(argUrl As String)
    
    Try $treeView.Remove(argUrl)
    If Not Error Then NagatoDBWeb.DeleteBookmark(argUrl)
    
End

Public Sub _new(argContainer As Container)
    
    $treeView = New TreeView(argContainer) As "TreeView"
    $treeView.Foreground = Color.DarkCyan
    $treeView.Drop = True
    
    reload()
    
End

Public Sub TreeView_Activate()
    
    If $treeView.Key Begins "http" Then Raise MenuEventWithArg(MikuruSignal.WebNew, $treeView.Key) 
    
End

Public Sub TreeView_MouseDrag()
    
    If MikuruUrl.IsWebPage($treeView.Key) Then
        $title = $treeView.Current.Text
        Drag.Icon = Stock["medium/file"]
        $treeView.Drag($treeView.Key, "text/plain")
    End If
    
End

Public Sub TreeView_DragMove()
    
    If Not $treeView.FindAt(Drag.X, Drag.Y) Then
        $treeView[$treeView.Item.Key].Selected = True
    Else
        Return
    End If
    
End

Public Sub TreeView_Drop()
    
    Dim yukiCategory As String
    
    If $title = "" Then Return
    If Not MikuruUrl.IsWebPage(Drag.Data) Then Return
    
    If $treeView.Item.Key = "NagatoTrashBin" Then
        removeBookmark(Drag.Data)
    Else
        yukiCategory = IIf(MikuruUrl.IsWebPage($treeView.Item.Key), $treeView.Item.ParentKey, $treeView.Item.Key)
        Try $treeView.Remove(Drag.Data)
        Try $treeView.Add(Drag.Data, $title,, yukiCategory)
        If Not Error Then NagatoDBWeb.ChangeBookmarkCategory(Drag.Data, yukiCategory)
        $title = ""
    End If
    
End

Public Sub TreeView_Menu()
    
    Dim yukiMenu As Object
    Dim yukiCategory As String
    Dim yukiKey As String = $treeView.Key
    
    If MikuruUrl.IsWebPage(yukiKey) Then
        yukiCategory = $treeView[yukiKey].ParentKey
        yukiMenu = New NagatoContextMenuBookmark(HaruhiMain, yukiCategory, yukiKey) As "ContextMenuBookmark"
    Else
        yukiMenu = New NagatoContextMenuBookmarkCategory(HaruhiMain, yukiKey) As "ContextMenuBookmarkCategory"
    Endif
    
    yukiMenu.Popup()
    
End

Public Sub ContextMenuBookmark_MenuEventWithArgs(argEvent As Integer, argValues As Variant[])
    
    Select Case argEvent
        Case NagatoContextMenuBookmark.ContextDelete
            removeBookmark(argValues[1])
        Case NagatoContextMenuBookmark.ContextEdit
            HaruhiEditWebBookmark.SetUrl($treeView.Key, $treeView[$treeView.Key].ParentKey) 
            If HaruhiEditWebBookmark.ShowDialog() = 1 Then reload()
        Case NagatoContextMenuBookmark.ContextReload
            reload()
        Case NagatoContextMenuBookmark.ContextOpen
            Raise MenuEventWithArg(MikuruSignal.WebNew, argValues[1])
    End Select
    
End

Public Sub ContextMenuBookmarkCategory_MenuEventWithArgs(argEvent As Integer, argValues As Variant[])
    
    Select Case argEvent
        Case NagatoContextMenuBookmarkCategory.ContextNewCategory
            If HaruhiNewCategory.ShowDialog() = 0 Then reload()
        Case NagatoContextMenuBookmarkCategory.ContextDelete
            NagatoDBWeb.DeleteCategory(argValues[0])
            reload()
        Case NagatoContextMenuBookmarkCategory.ContextRename
            
        Case NagatoContextMenuBookmarkCategory.ContextReload
            reload()
    End Select
    
End
