' Gambas class file

Inherits NagatoObject

Property Read Titles As String[]
Property Read ActiveIndex As Integer

Private $menubar As NagatoMenuBar
Private $webs As NagatoWebs
Private $inPageSearch As NagatoInPageSearch

Private Sub addWeb(Optional argUrl As String = NagatoSettings.HomePage)
    
    $webs.Tabs.Add(argUrl)
    $menubar.SetUrl(argUrl)
    
End

Private Sub insertWeb(argIndex As Integer, Optional argUrl As String = NagatoSettings.HomePage)
    
    $webs.Tabs.Insert(argIndex, argUrl)
    $menubar.SetUrl(argUrl)
    
End

Public Sub Start()
    
    addWeb()
    
End

Public Sub AddUrl(argUrl As String)
    
    addWeb(argUrl)
    $webs.Tabs.ShowLast()
    
End

Public Sub SetUrl(argUrl As String)
    
    $webs.SetActive.TabUrl(argUrl)
    
End

Public Sub HeaderCall(argEvent As Integer, argArguments As Variant[])
    
    Select Case argEvent
        Case MikuruSignal.PersonaNew
            addWeb()
            $webs.Tabs.ShowLast()
         Case MikuruSignal.PersonaSelect
            $webs.Tabs.ShowByIndex(argArguments[0])
            $menubar.SetNavigationButton($webs.Active.Web.HistoryIndex, $webs.Active.Web.HistoryMax)
        Case MikuruSignal.PersonaDelete
            NagatoDBWeb.PushHistory($webs.Active.TabUrl, $webs.Active.TabTitle)
            $webs.Tabs.Remove(argArguments[0])
        Case MikuruSignal.PersonaDeleteWithoutRecord
            $webs.Tabs.Remove(argArguments[0])
         Case MikuruSignal.SearchApiCall
            addWeb(argArguments[0])
            $webs.Tabs.ShowLast()
        Case MikuruSignal.PersonaReorder
            If argArguments[0] = argArguments[1] Then Return
            $webs.Tabs.Reorder(argArguments[0], argArguments[1])
        Case MikuruSignal.WebProgress
            If argArguments[0] <> $webs.Active.Web.UniqueIndex Then Return
            $webs.Tabs.ShowByIndex($webs.Active.Index)
            $menubar.SetUrl(argArguments[1])
            $menubar.SetNavigationButton($webs.Active.Web.HistoryIndex, $webs.Active.Web.HistoryMax)
    End Select
    
    $menubar.SetUrl($webs.Active.TabUrl)
    
End

Public Sub _new(argMenubarContainer As Container, argWebsContainer As Container, argSearchContainer As Container)
    
    $menubar = New NagatoMenuBar(argMenubarContainer) As "MenuBar"
    $webs = New NagatoWebs(argWebsContainer) As "Webs"
    $inPageSearch = New NagatoInPageSearch(argSearchContainer) As "InPageSearch"
    
End

Public Sub MenuBar_MenuEvent(argEvent As Integer)
    
    Select Case argEvent
        Case MikuruSignal.WebBack
            $webs.Active.Back()
        Case MikuruSignal.WebForward
            $webs.Active.Forward()
        Case MikuruSignal.UrlAddBookmark
            With HaruhiAddWebBookmark
                .SetTitle($webs.Active.TabTitle)
                .SetList(NagatoDBWeb.CategoryNames)
                If .ShowDialog() <> 1 Then Return
                NagatoDBWeb.PushBookmark($webs.Active.TabUrl, $webs.Active.TabTitle, .UserTitle, .Category)
            End With
        Default
            Raise MenuEvent(argEvent)
    End Select
    
End

Public Sub MenuBar_MenuEventWithArg(argEvent As Integer, argArgument As Variant)
    
    Select Case argEvent
        Case MikuruSignal.UrlNew
            $webs.Active.SetUrl(argArgument)
        Case MikuruSignal.WebNew
            addWeb(argArgument)
            $webs.Tabs.ShowLast()
        Default
            Raise MenuEventWithArg(argEvent, argArgument)
    End Select
    
End

Public Sub Webs_MenuEvent(argEvent As Integer)
    
    Select Case argEvent
        Case MikuruSignal.InPageSearchToggle
            $inPageSearch.SetFocus()
        Default
            Raise MenuEvent(argEvent)
    End Select
    
End

Public Sub Webs_MenuEventWithArg(argEvent As Integer, argArgument As Variant)
    
    Select Case argEvent
        Case MikuruSignal.WebNew
            addWeb(argArgument)
            $webs.Tabs.ShowLast()
        Case MikuruSignal.WebNewInsert
            insertWeb($webs.Active.Index + 1, argArgument) ' insert new web tab next to active tab
            $webs.Active.Show()
        Default
            Raise MenuEventWithArg(argEvent, argArgument)
    End Select
    
End

Public Sub Webs_MenuEventWithArgs(argEvent As Integer, argArguments As Variant[])
    
    Raise MenuEventWithArgs(argEvent, argArguments)
    
End

Public Sub InPageSearch_MenuEventWithArg(argEvent As Integer, argArgument As Variant)
    
    Select Case argEvent
        Case MikuruSignal.InPageSearchQuery
            $webs.Active.InPageSearch(argArgument)
    End Select
    
End

Private Function Titles_Read() As String[]

    Return $webs.Tabs.Titles

End

Private Function ActiveIndex_Read() As Integer

    Return $webs.Active.Index

End
