' Gambas class file

Inherits NagatoObject

Property Read Titles As String[]
Property Read ActiveIndex As Integer

Private $menubar As NagatoMenuBar
Private $webs As NagatoWebs
Private $inPageSearch As NagatoInPageSearch

Private Sub addWeb(argUrl As String)
    
    $webs.Tabs.Add(argUrl)
    $menubar.SetUrl(argUrl)
    $webs.Tabs.ShowLast()

End

Private Sub insertWeb(argIndex As Integer, argUrl As String)
    
    $webs.Tabs.Insert(argIndex, argUrl)
    $menubar.SetUrl(argUrl)
    $webs.Active.Show()

End

Public Sub AddUrl(Optional argUrl As String = NagatoSettings.HomePage)
    
    addWeb(argUrl)
    
End

Public Sub SetUrl(argUrl As String)
    
    $webs.Active.SetUrl(argUrl)
    
End

Public Sub HeaderCall(argEvent As Integer, argArguments As Variant[])
    
    Select Case argEvent
        Case MikuruSignal.PersonaNew
            addWeb(NagatoSettings.HomePage)
         Case MikuruSignal.PersonaSelect
            $webs.Tabs.ShowByIndex(argArguments[0])
            $menubar.SetNavigationButton($webs.Active.History)
        Case MikuruSignal.PersonaDelete, MikuruSignal.PersonaDeleteWithoutRecord
            If argEvent = MikuruSignal.PersonaDelete Then NagatoDBHistory.Push($webs.Active.TabUrl, $webs.Active.TabTitle)
            $webs.Tabs.Remove(argArguments[0])
         Case MikuruSignal.SearchApiCall
            addWeb(argArguments[0])
        Case MikuruSignal.PersonaReorder
            If argArguments[0] = argArguments[1] Then Return
            $webs.Tabs.Reorder(argArguments[0], argArguments[1])
        Case MikuruSignal.WebProgress
            If argArguments[0] <> $webs.Active.Index Then Return
            $webs.Tabs.ShowByIndex($webs.Active.Index)
            $menubar.SetUrl(argArguments[1])
            $menubar.SetNavigationButton($webs.Active.History)
    End Select
    
    $menubar.SetUrl($webs.Active.TabUrl)
    
End

Public Sub _new(argMenubarContainer As Container, argWebsContainer As Container, argSearchContainer As Container)
    
    $menubar = New NagatoMenuBar(argMenubarContainer) As "MenuBar"
    $webs = New NagatoWebs(argWebsContainer) As "Webs"
    $inPageSearch = New NagatoInPageSearch(argSearchContainer) As "InPageSearch"
    
End

Public Sub MenuBar_Signal(argEvent As Integer, argValues As Variant[])
    
    Select Case argEvent
        Case MikuruSignal.WebBack
            $webs.Active.Back()
        Case MikuruSignal.WebForward
            $webs.Active.Forward()
        Case MikuruSignal.UrlAddBookmark
            MikuruDialogPortalAddBookmark($webs.Active.TabTitle, $webs.Active.TabUrl)
        Case MikuruSignal.UrlNew
            $webs.Active.SetUrl(argValues[0])
        Case MikuruSignal.WebNew
            addWeb(argValues[0])
        Default
            Raise Signal(argEvent, argValues)
    End Select
    
End

Public Sub Webs_Signal(argEvent As Integer, argValues As Variant[])
    
    Select Case argEvent
        Case MikuruSignal.InPageSearchToggle
            $inPageSearch.SetFocus()
        Case MikuruSignal.WebNew
            addWeb(argValues[0])
        Case MikuruSignal.WebNewInsert
            insertWeb($webs.Active.Index + 1, argValues[0]) ' insert new web tab next to active tab
        Default
            Raise Signal(argEvent, argValues)
    End Select
    
End
Public Sub InPageSearch_Signal(argEvent As Integer, argValues As Variant[])
    
    If argEvent = MikuruSignal.InPageSearchQuery Then $webs.Active.InPageSearch(argValues[0])
    
End

Private Function Titles_Read() As String[]

    Return $webs.Tabs.Titles

End

Private Function ActiveIndex_Read() As Integer

    Return $webs.Active.Index

End
