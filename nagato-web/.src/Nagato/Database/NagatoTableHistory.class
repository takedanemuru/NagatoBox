' Gambas class file

Inherits NagatoTable

Public Sub _EnsureTable()
    
    Dim yukiTable As Table
    
    If Not Me._$connection.Opened Then Me._$connection.Open()
    
    With NagatoDB
        If Not Me._$connection.Tables.Exist(.Table.History) Then
            yukiTable = Me._$connection.Tables.Add(.Table.History)
            yukiTable.Fields.Add(.Column.Id, db.Serial)
            yukiTable.Fields.Add(.Column.TimeStamp, db.Date)
            yukiTable.Fields.Add(.Column.Url, db.String)
            yukiTable.Fields.Add(.Column.PageName, db.String)
            yukiTable.PrimaryKey = [.Column.Id]
            yukiTable.Update()
        Endif
    End With

End

Public Sub GetAll() As Result
    
    Return Me._$connection.Find(NagatoDB.Table.History, "order by time_stamp desc limit 200")
    
End

Public Sub DeleteHistory(argUrl As String)
    
    Me._$connection.Delete(NagatoDB.Table.History, "url = &1", argUrl)
    
End

Public Sub DeleteRelatedHistories(argUrl As String)
    
    Dim yukiPattern As String = MikuruUrl.GetTopPage(argUrl) & "%"
    
    Me._$connection.Delete(NagatoDB.Table.History, "url LIKE &1", yukiPattern)
    
End

Public Sub ClearAll()
    
    Me._$connection.Delete(NagatoDB.Table.History)
    
End

Public Sub PushHistory(argUrl As String, argTitle As String)
    
    Dim yukiResult As Result
    
    Me._$connection.Begin()
        yukiResult = Me._$connection.Create(NagatoDB.Table.History)
        yukiResult[NagatoDB.Column.TimeStamp] = Now()
        yukiResult[NagatoDB.Column.Url] = argUrl
        yukiResult[NagatoDB.Column.PageName] = argTitle
        yukiResult.Update()
    Me._$connection.Commit()
    
Catch
    Me._$connection.Rollback()
    
End
