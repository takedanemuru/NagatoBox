' Gambas class file

Inherits NagatoMenuPipe

Private $observer As Observer
Private $drawingArea As DrawingArea
Private $tabs As NagatoTabs
Private $painter As NagatoTabPainter
Private $message As New NagatoMessage As "Message"
Private $lock As Boolean = False

Private Sub drawMessage()
    
    If $message.Text = "" Then Return
    
    Paint.Brush = Paint.Color(Color.Orange)
    Paint.Text($message.Text, 24, 24)
    Paint.Fill()
    
End

Private Sub drawPlusButton()
    
    Dim yukiRect As Rect = $tabs.PlusButtonRect
    
    $painter.DrawNonActiveTab(yukiRect, $tabs.OnMouse($tabs.Max))
    $painter.DrawTitle("+", yukiRect, False)
    
End

Private Sub drawTab(argIndex As Integer)
    
    If argIndex = HaruhiMain.ActiveIndex Then
        $painter.DrawActiveTab($tabs.Rects[argIndex], $tabs.OnMouse(argIndex))
    Else
        $painter.DrawNonActiveTab($tabs.Rects[argIndex], $tabs.OnMouse(argIndex))
    End If

    $painter.DrawTitle(HaruhiMain.Titles[argIndex], $tabs.Rects[argIndex])
    
End

Private Sub drawTabs()
    
    Dim yukiCount As Integer
    
    For yukiCount = 0 To $tabs.Max - 1  'last tab of $tabs is plus button
        drawTab(yukiCount)
    Next
    
End

Public Sub Refresh()
    
    Try $drawingArea.Refresh()
    
End

Public Sub SetText(argText As String)
    
    $message.SetText(argText)
    Try $drawingArea.Refresh()
    
End

Public Sub _new(argDrawingArea As DrawingArea)
    
    $drawingArea = argDrawingArea
    $painter = New NagatoTabPainter(argDrawingArea)
    $observer = New Observer($drawingArea) As "Asakura"
    $tabs = New NagatoTabs(argDrawingArea)
    
End

Public Sub Message_Stopped()
    
    Try $drawingArea.Refresh()
    
End

Public Sub Asakura_Draw()
    
    If $lock Then Return
    
    $lock = True
    
    Paint.Begin($drawingArea)
        Paint.DrawImage(MikuruPersonaImage(), 0, NagatoSettings.PersonaY)
        drawMessage()
        $tabs.Refresh()
        drawTabs()
        drawPlusButton()
    Paint.End()
    
    $lock = False
    
End

Public Sub Asakura_MouseDown()
    
    Select Case $tabs.GetTabType(Mouse.X, Mouse.Y)
        Case NagatoTabs.TypeWebView
            If Mouse.Left Then 
                Raise MenuEventWithArg(NagatoMenuPipe.PersonaSelect, $tabs.GetTabIndex(Mouse.X, Mouse.Y))
            Else If Mouse.Right Then
                Raise MenuEventWithArg(NagatoMenuPipe.PersonaDelete, $tabs.GetTabIndex(Mouse.X, Mouse.Y))
            Endif
        Case NagatoTabs.TypePlusButton
            If Mouse.Left Then Raise MenuEvent(NagatoMenuPipe.PersonaNew)
    End Select
    
End

Public Sub Asakura_MouseMove()
    
    $tabs.SetOnMouseIndex(Mouse.X, Mouse.Y)
    $drawingArea.Refresh()
    
End

Public Sub Asakura_Leave()
    
    $tabs.ClearOnMouseIndex()
    $drawingArea.Refresh()
    
End

Public Sub Asakura_MouseDrag()
    
    If $tabs.GetTabOrder(Mouse.StartX) = ($tabs.Max + 1) Then Return
    
   If $tabs.GetTabType(Mouse.StartX, Mouse.StartY) = NagatoTabs.TypeWebView Then
        Drag.Icon = Stock["large/down"]
        $drawingArea.Drag(CStr(Mouse.StartX), "text/nagato-web")
    Endif
    
End

Public Sub Asakura_KeyPress()
    
    Select Case Key.Code
        Case Key.Up
            NagatoSettings.PersonaY = NagatoSettings.PersonaY + Mouse.Delta * 16
            $drawingArea.Refresh()
        Case Key.Down
            NagatoSettings.PersonaY = NagatoSettings.PersonaY - Mouse.Delta * 16
            $drawingArea.Refresh()
    End Select
    
End

Public Sub Asakura_MouseWheel()
    
    NagatoSettings.PersonaY = NagatoSettings.PersonaY + Mouse.Delta * 8
    
    $drawingArea.Refresh()
    
End

Public Sub Asakura_Drop()
    
    Dim yukiOriginX As Integer
    Dim yukiDropX As Integer
    
    If Drag.Format <> "text/nagato-web" Then Return
    If $tabs.Max = 1 Then Return
    
    yukiOriginX = $tabs.GetTabOrder(Mouse.StartX)
    yukiDropX = $tabs.GetTabOrder(Drag.X)
    
    Drag.Hide()
    
    Raise MenuEventWithArgs(NagatoMenuPipe.PersonaReorder, [yukiOriginX, yukiDropX])
    
End
