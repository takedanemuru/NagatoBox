' Gambas class file

Inherits NagatoMenuPipe

Property Read Titles As String[]
Property Read ActiveIndex As Integer

Private $menubar As NagatoMenuBar
Private $webs As NagatoWebs
Private $inPageSearch As NagatoInPageSearch

Private Sub addWeb(Optional argUrl As String = NagatoSettings.HomePage)
    
    $webs.AddWeb(argUrl)
    $menubar.SetUrl(argUrl)
    
End

Private Sub insertWeb(argIndex As Integer, Optional argUrl As String = NagatoSettings.HomePage)
    
    $webs.InsertWeb(argIndex, argUrl)
    $menubar.SetUrl(argUrl)
    
End

Public Sub Start()
    
    addWeb()
    
End

Public Sub AddUrl(argUrl As String)
    
    addWeb(argUrl)
    $webs.ShowLastTab()
    
End

Public Sub SetUrl(argUrl As String)
    
    $webs.SetActiveTabUrl(argUrl)
    
End

Public Sub HeaderCall(argEvent As Integer, argArguments As Variant[])
    
    Select Case argEvent
        Case NagatoMenuPipe.PersonaNew
            addWeb()
            $webs.ShowLastTab()
         Case NagatoMenuPipe.PersonaSelect
            $webs.ShowTab(argArguments[0])
            $menubar.SetNavigationButton($webs.ActiveWeb.HistoryIndex, $webs.ActiveWeb.HistoryMax)
        Case NagatoMenuPipe.PersonaDelete
            $webs.RemoveTab(argArguments[0])
         Case NagatoMenuPipe.SearchApiCall
            addWeb(argArguments[0])
            $webs.ShowLastTab()
        Case NagatoMenuPipe.PersonaReorder
            If argArguments[0] = argArguments[1] Then Return
            $webs.Reorder(argArguments[0], argArguments[1])
        Case NagatoMenuPipe.WebProgress
            If argArguments[0] <> $webs.ActiveWeb.UniqueIndex Then Return
            $webs.ShowTab($webs.ActiveIndex)
            $menubar.SetUrl(argArguments[1])
            $menubar.SetNavigationButton($webs.ActiveWeb.HistoryIndex, $webs.ActiveWeb.HistoryMax)
    End Select
    
    $menubar.SetUrl($webs.ActiveTabUrl)
    
End

Public Sub _new(argMenubarContainer As Container, argWebsContainer As Container, argSearchContainer As Container)
    
    $menubar = New NagatoMenuBar(argMenubarContainer) As "MenuBar"
    $webs = New NagatoWebs(argWebsContainer) As "Webs"
    $inPageSearch = New NagatoInPageSearch(argSearchContainer) As "InPageSearch"
    
End

Public Sub MenuBar_MenuEvent(argEvent As Integer)
    
    Select Case argEvent
        Case NagatoMenuPipe.WebBack
            $webs.Back()
        Case NagatoMenuPipe.WebForward
            $webs.Forward()
        Case NagatoMenuPipe.UrlAddBookmark
            With HaruhiAddWebBookmark
                .SetTitle($webs.ActiveTabTitle)
                .SetList(NagatoDBWeb.CategoryNames)
                If .ShowDialog() <> 1 Then Return
                NagatoDBWeb.PushBookmark($webs.ActiveTabUrl, $webs.ActiveTabTitle, .UserTitle, .Category)
            End With
        Default
            Raise MenuEvent(argEvent)
    End Select
    
End

Public Sub MenuBar_MenuEventWithArg(argEvent As Integer, argArgument As Variant)
    
    Select Case argEvent
        Case NagatoMenuPipe.UrlNew
            $webs.SetActiveTabUrl(argArgument)
        Case NagatoMenuPipe.WebNew
            addWeb(argArgument)
            $webs.ShowLastTab()
        Default
            Raise MenuEventWithArg(argEvent, argArgument)
    End Select
    
End

Public Sub Webs_MenuEvent(argEvent As Integer)
    
    Select Case argEvent
        Case NagatoMenuPipe.InPageSearchToggle
            $inPageSearch.SetFocus()
        Default
            Raise MenuEvent(argEvent)
    End Select
    
End

Public Sub Webs_MenuEventWithArg(argEvent As Integer, argArgument As Variant)
    
    Select Case argEvent
        Case NagatoMenuPipe.WebNew
            addWeb(argArgument)
            $webs.ShowLastTab()
        Case NagatoMenuPipe.WebNewInsert
            insertWeb($webs.ActiveIndex + 1, argArgument) ' insert new web tab next to active tab
            $webs.ShowActiveTab()
        Default
            Raise MenuEventWithArg(argEvent, argArgument)
    End Select
    
End

Public Sub Webs_MenuEventWithArgs(argEvent As Integer, argArguments As Variant[])
    
    Raise MenuEventWithArgs(argEvent, argArguments)
    
End

Public Sub InPageSearch_MenuEvent(argEvent As Integer)
    
    Select Case argEvent
        Case NagatoMenuPipe.InPageSearchClose
            $inPageSearch.Hide()
    End Select
    
End

Public Sub InPageSearch_MenuEventWithArg(argEvent As Integer, argArgument As Variant)
    
    Select Case argEvent
        Case NagatoMenuPipe.InPageSearchQuery
            $webs.InPageSearch(argArgument)
    End Select
    
End

Private Function Titles_Read() As String[]

    Return $webs.Titles

End

Private Function ActiveIndex_Read() As Integer

    Return $webs.ActiveIndex

End
