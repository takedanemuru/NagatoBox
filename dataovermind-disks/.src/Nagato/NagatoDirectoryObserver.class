' Gambas class file

Property Directory As String
Property IntervalSecond As Integer

Private $directory As String
Private $timer As New Timer As "Timer"
Private $lastObserved As Date
Private $previousPaths As String[]

Event Deleted(argFileName As String)
Event Modefied(argFileName As String)
Event Lost

Private Sub checkDeletedPath(argCurrentPaths As String[])
    
    Dim yukiPath As String
    
    If Not Object.IsValid($previousPaths) Then Return
    
    For Each yukiPath In $previousPaths
         If Not argCurrentPaths.Exist(yukiPath) Then Raise Deleted(yukiPath)
    Next

End

Private Sub checkModefiedPath(argCurrentPaths As String[])
    
    Dim yukiPath As String
    
    For Each yukiPath In argCurrentPaths
        If Not Exist($directory &/ yukiPath) Then Continue
        If DateDiff(Stat($directory &/ yukiPath).LastChange, $lastObserved, gb.Second) > Me.IntervalSecond Then Continue
        Raise Modefied(yukiPath)
    Next
    
End

Public Sub _new()

    $directory = User.Home
    $lastObserved = Now
    $timer.Delay = 5000
    $timer.Start()

End

Public Sub Timer_Timer()
    
    Dim yukiCurrentPaths As String[] 
    
    If Not Exist($directory) Then
        Raise Lost
    Else
        yukiCurrentPaths = Dir($directory)
        checkDeletedPath(yukiCurrentPaths)
        checkModefiedPath(yukiCurrentPaths)
        $lastObserved = Now
        $previousPaths = yukiCurrentPaths
    Endif
    
End

Private Function Directory_Read() As String

    Return $directory

End

Private Sub Directory_Write(Value As String)

    $directory = Value

End

Private Function IntervalSecond_Read() As Integer

    Return $timer.Delay / 1000

End

Private Sub IntervalSecond_Write(Value As Integer)

    $timer.Delay = Value * 1000

End
