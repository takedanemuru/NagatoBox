' Gambas class file

Inherits NagatoTabContent

Private $toolbar As NagatoImageViewerToolBar
Private $scrollView As NagatoImageViewerScrollView

Private $targetPath As String 
Private $originalImage As Image
Private $observer As Observer

Private Sub initializeParentTab(argPath As String)
    
    If argPath <> "" Then
        Me._RefreshParentTab(File.Name(argPath), Stock["small/image"])
    Else
        Me._RefreshParentTab(("no image"), Stock["small/image"])
    Endif
    
End

Private Sub openFile()
    
    Dialog.Title = ("Select a file")
    Dialog.Path = NagatoXdgUserDirs.Pictures
    Dialog.Filter = MikuruDialogFilter.PictureFiles
    
    If Not Dialog.OpenFile(False) Then
        $originalImage.Save($targetPath)
        $scrollView.SetImage(Dialog.Path)
        initializeParentTab(Dialog.Path)
        $targetPath = Dialog.Path
    Endif
    
End

Private Sub save()
    
    If $targetPath = "" Then 
        saveAs()
    Else
        Debug $targetPath
        $scrollView.CurrentImage.Save($targetPath)
    Endif
    
End

Private Sub saveAs()
    
    Dim yukiImage As Image
    
    Dialog.Title = ("Save File")
    Dialog.Filter = MikuruDialogFilter.PictureFiles
    
    If Not Dialog.SaveFile() Then
        If Not Object.IsValid($originalImage) Then $originalImage.Save($targetPath)
        $targetPath = Dialog.Path
        $scrollView.CurrentImage.Save($targetPath)
        $scrollView.SetImage($targetPath)
        initializeParentTab(Dialog.Path)
    Endif
    
End

Private Sub revert()
    
    If Not Object.IsValid($originalImage) Then Return
    
    $originalImage.Save($targetPath)
    $scrollView.SetImage($targetPath)
    
End

Private Sub fileEvent(argEvent As Integer)
    
    Select Case argEvent
        Case MikuruMenuEventFile.New
            NagatoTabHandler.NewTab(MikuruFunctionType.ImageViewer)
        Case MikuruMenuEventFile.Open
            openFile()
        Case MikuruMenuEventFile.Save
            save()
        Case MikuruMenuEventFile.SaveAs
            saveAs()
        Case MikuruMenuEventFile.Revert
            revert()
    End Select
    
End

Private Sub imageEffectEvent(argEvent As Integer)
    
    Debug argEvent
    
    If $targetPath = "" Then Return
    
    Select Case argEvent
        Case MikuruMenuEventImageEffect.RotateLeft
            $scrollView.RotateLeft()
        Case MikuruMenuEventImageEffect.RotateRight
            $scrollView.RotateRight()
        Case MikuruMenuEventImageEffect.Execute
            $scrollView.ExecuteEffect($toolbar.EffectIndex)
        Case MikuruMenuEventImageEffect.ZoomFit
            $scrollView.SetFit()
        Case MikuruMenuEventImageEffect.ZoomNormal
            $scrollView.ZoomNormal()
        Case MikuruMenuEventImageEffect.ZoomIn
            $scrollView.ZoomIn()
        Case MikuruMenuEventImageEffect.ZoomOut
            $scrollView.ZoomOut()
        Case MikuruMenuEventImageEffect.Resize
            HaruhiResizeImage.Show()
            HaruhiResizeImage.SetImage($scrollView.CurrentImage)
            $observer = New Observer(HaruhiResizeImage) As "Asakura"
    End Select
    
End

Public Sub _new(argParent As TabStrip, Optional argPath As String = "")
    
    Me._Initialize(argParent)
    $toolbar = New NagatoImageViewerToolBar(Me._$hBox) As "Toolbar"
    $scrollView = New NagatoImageViewerScrollView(Me._$vBox, argPath) As "ScrollView"
    initializeParentTab(argPath)
    $targetPath = argPath
    If argPath <> "" Then $originalImage = Image.Load(argPath)
    
End

Public Sub Toolbar_MenuEvent(argEvent As Integer)
    
    With MikuruSeriesHeader
        Select Case argEvent
            Case .File To .File + 999 
                fileEvent(argEvent)
            Case .ImageEffect To .ImageEffect + 999
                imageEffectEvent(argEvent)
        End Select
    End With
    
End

Public Sub Toolbar_SetWallpaper(argType As Integer)
    
    If $targetPath = "" Then Return
    
    MikuruWallpaper.Set($targetPath, argType)
    
End

Public Sub Asakura_NewSize(argHeight As Integer, argWidth As Integer)
    
    $scrollView.Resize(argHeight, argWidth)
    
End
