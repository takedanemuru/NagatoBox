' Gambas class file

Inherits NagatoMainPane

Private $treeView As TreeView

Private Sub addTreeView()
    
    $treeView = New TreeView(Me._$parent) As "TreeView"
    
    With $treeView
        .Expand = True
        .Background = Color.Background
        .Mode = Select.Single
        .Editable = True
        .Drop = True
    End With
    
End

Private Sub setCategory()
    
    Dim yukiCategory As String
    
    $treeView.Clear()
    
    For Each yukiCategory In NagatoWebbookmarkCache.Categories
        $treeView.Add(yukiCategory, yukiCategory, Stock["medium/directory"])
        setBookmark(yukiCategory)
    Next
    
End

Private Sub setBookmark(argCategory As String)
    
    Dim yukiCache As NagatoWebBookmarkObject[] = NagatoWebbookmarkCache.GetCache(argCategory)
    Dim yukiObject As NagatoWebBookmarkObject
    
    If yukiCache = Null Then Return
    
    For Each yukiObject In yukiCache
        $treeView.Add(yukiObject.Url, yukiObject.UserDefinedTitle, yukiObject.Icon, argCategory)
    Next
    
End

Public Sub _Initialize(argPath As String) ' override NagatoMainPane Method
    
    Debug argPath ' to avoid unused argument error.
    
    addTreeView()
    setCategory()
    
End

Public Sub TreeView_Activate()
    
    If $treeView.Current.Picture = Stock["medium/directory"] Then Return
    
    NagatoTabHandler.NewTabWithPath(MikuruFunctionType.WebBrowser, $treeView.Current.Key)
    
End

Public Sub TreeView_Rename()
    
    NagatoDBWeb.RenameBookmark($treeView.Key, $treeView.Current.Text)
    NagatoWebbookmarkCache.Activate()
    
End

Public Sub TreeView_Menu()
    
    Dim yukiContextMenu As New NagatoWebBookmarkEditorContextMenu(Kyon) As "ContextMenu"
    
    If $treeView[$treeView.Key].Picture = Stock["medium/directory"] Then Return
    
    yukiContextMenu.PopUp()
    
End

Public Sub TreeView_MouseDrag()
    
    If Not $treeView.Key Then Return
    If $treeView[$treeView.Key].Picture = Stock["medium/directory"] Then Return
    
    Drag.Icon = $treeView[$treeView.Key].Picture
    $treeView.Drag($treeView.Key, "text/plain")
    
End

Public Sub TreeView_DragMove()
    
    If Not $treeView.FindAt(Drag.X, Drag.Y) Then
        $treeView[$treeView.Item.Key].Selected = True
    Else
        Return
    End If
    
End

Public Sub TreeView_Drop()
    
    Dim yukiCategory As String
    Dim yukiItemName As String
    
    With $treeView
        yukiItemName = .Current.Text
        $treeView[Drag.Data].Delete()
        yukiCategory = IIf(.Item.Picture = Stock["medium/directory"], .Item.Key, .Item.ParentKey)
        .Add(Drag.Data, yukiItemName, Drag.Icon, yukiCategory)
        .Refresh()
    End With
    
    NagatoDBWeb.ChangeBookmarkCategory(Drag.Data, yukiCategory)
    NagatoWebbookmarkCache.Activate()
    
Catch
    Return
    
End

Public Sub ContextMenu_Open()
    
    TreeView_Activate()
    
End

Public Sub ContextMenu_Delete()
    
    If Message.Delete(("Are you sure to delete this bookmark ?"), ("Cancel"), ("Delete")) = 2 Then
        NagatoDBWeb.DeleteBookmark($treeView.Key)
        $treeView[$treeView.Key].Delete()
    Endif
    
End

Public Sub ContextMenu_Rename()
    
    $treeView[$treeView.Key].Rename()
    
End
