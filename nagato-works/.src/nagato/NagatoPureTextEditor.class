' Gambas class file

Inherits NagatoTabContent

Private $toolBar As NagatoPureTextEditorToolBar
Private $textArea As TextArea
Private $targetPath As String = ""
Private $edited As Boolean = False
Private $source As NagatoWriteOnceVariable

Private Sub addTextArea()
    
    $textArea = New TextArea(Me._$vBox) As "TextArea"
    
    With $textArea
        .Expand = True
    End With

    refreshTextAreaSettings()
    
End

Private Sub refreshTextAreaSettings()
    
    With $textArea
        .Background = NagatoSettingsPureTextEditor.BackgroundColor
        .Foreground = NagatoSettingsPureTextEditor.FontColor
        .Font.Size = NagatoSettingsPureTextEditor.FontSize
        .Font.Name = NagatoSettingsPureTextEditor.FontName
        .Wrap = NagatoSettingsPureTextEditor.Wrap
    End With
    
End

Private Sub loadFile(argPath As String)
    
    $textArea.Text = File.Load(argPath)
    $targetPath = argPath
    $source = New NagatoWriteOnceVariable($textArea.Text)
    
End

Private Sub saveSequence()
    
    If $targetPath = "" Then
        SaveAs()
    Else If Not $edited Then
        Return
    Else
        File.Save($targetPath, $textArea.Text)
        $edited = False
    End If 
    
End

Private Sub saveAs()
    
    Dialog.Title = ("Save As ...")
    Dialog.Filte = ["*txt", "text file"]
    
    If Not Dialog.SaveFile() Then
        File.Save(Dialog.Path, $textArea.Text)
        $targetPath = Dialog.Path
        $edited = False
    Endif
    
End

Private Sub revertToSource()
    
    If Not Object.IsValid($source) Then Return
    
    $textArea.Text = $source.Read()
    $edited = False
    
End

Private Sub openFile()
    
    Dim yukiPath As String
    
    Dialog.Title = ("Select Text File")
    Dialog.Path = User.Home
    
    If Not Dialog.OpenFile() Then
        yukiPath = Dialog.Path
        NagatoTabHandler.NewTabWithPath(MikuruFunctionType.PureTextEditor, yukiPath)
    Endif
    
End

Private Function getPositionNextToCurrentSelection() As Integer
    
    If $textArea.Selected Then
        Return $textArea.Selection.Start + String.Len($textArea.Selection.Text)
    Else
        Return 0
    End If
    
End

Public Sub _new(argTabStrip As TabStrip, Optional argPath As String)
    
    Me._Initialize(argTabStrip)
    $toolBar = New NagatoPureTextEditorToolBar(Me._$hBox) As "ToolBar"
    addTextArea()
    If argPath Then
        loadFile(argPath)
        Me._RefreshParentTab(File.Name(argPath), Stock["small/pen"])
    Else
        Me._RefreshParentTab(("untitled"), Stock["small/pen"])
    End If
    NagatoMessaging.setMessage(("...pure text editor mode."))
    
End

Public Sub ToolBar_SearchQuery(argText As String)
    
    Dim yukiPosition As Integer 
    
    yukiPosition = String.InStr($textArea.Text, argText, getPositionNextToCurrentSelection(), gb.IgnoreCase) 
    
    ' see Gambas3 reference to learn more about "-1"
    If yukiPosition <> 0 Then $textArea.Select(yukiPosition - 1, String.Len(argText))
    
End

Public Sub ToolBar_MenuEvent(argEvent As Integer)
    
    Select Case argEvent
        Case MikuruMenuEventFile.New
            Debug "File->New"
            NagatoTabHandler.NewTab(MikuruFunctionType.PureTextEditor)
        Case MikuruMenuEventFile.Open
            Debug "File->Open"
            openFile()
        Case MikuruMenuEventFile.Save
            Debug "File->Save"
            saveSequence()
        Case MikuruMenuEventFile.SaveAs
            Debug "File->SaveAs"
            saveAs()
        Case MikuruMenuEventFile.Revert
            Debug "File->Revert"
            revertToSource()
        Case MikuruMenuEventView.Changed
            Debug "View->Changed"
            refreshTextAreaSettings()
    End Select
    
End

Public Sub TextArea_Change()
    
    If Not $edited Then $edited = True
    
End
