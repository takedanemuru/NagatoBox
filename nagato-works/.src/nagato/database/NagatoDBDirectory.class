' Gambas class file

Inherits NagatoDB 'NagatoDB is STATIC.

Public Const TableBookmark As String = "bookmark"
Public Const ColumnId As String = "id"
Public Const ColumnPath As String = "path"
Public Const TableSymbol As String = "symbol"
Public Const ColumnPicture As String = "picture"

Public _$uniqueName As String = "Directory"

Event Changed

Private Sub ensureBookmarkTable()
    
    Dim yukiTable As Table
    
    If Not Me._$connection.Tables.Exist(TableBookmark) Then
        yukiTable = Me._$connection.Tables.Add(TableBookmark)
        yukiTable.Fields.Add(ColumnId, db.Serial)
        yukiTable.Fields.Add(ColumnPath, db.String)
        yukiTable.PrimaryKey = [ColumnId]
        yukiTable.Update()
    Endif
    
End

Private Sub ensureSymbolTable()
    
    Dim yukiTable As Table
    
    If Not Me._$connection.Tables.Exist(TableSymbol) Then
        yukiTable = Me._$connection.Tables.Add(TableSymbol)
        yukiTable.Fields.Add(ColumnId, db.Serial)
        yukiTable.Fields.Add(ColumnPath, db.String)
        yukiTable.Fields.Add(ColumnPicture, db.Blob)
        yukiTable.PrimaryKey = [ColumnId]
        yukiTable.Update()
    Endif
    
End

Public Function HasSymbol(argFullPath As String) As Boolean
    
    Dim yukiResult As Result = Me._$connection.Find(TableSymbol, "path = &1", argFullPath)
    
    Return (yukiResult.Count > 0)
    
End

Public Sub DeleteSymbol(argFullPath As String)
    
    Me._$connection.Delete(TableSymbol, "path = &1", argFullPath)
    
End

Public Function GetSymbol(argFullPath As String) As Picture
    
    Dim yukiResult As Result = Me._$connection.Find(TableSymbol, "path = &1", argFullPath)
    
    Return MikuruBlob.GetPictureFromBlob(yukiResult[ColumnPicture].Data)
    
End

Public Sub SetSymbol(argFullPath As String, argPicture As Picture)
    
    Dim yukiResult As Result
    
    Me._$connection.Delete(TableSymbol, "path = &1", argFullPath)
    
    Me._$connection.Begin()
        yukiResult = Me._$connection.Create(TableSymbol)
        yukiResult[ColumnPath] = argFullPath
        yukiResult[ColumnPicture] = MikuruBlob.GetBlobFromPicture(argPicture)
        yukiResult.Update()
    Me._$connection.Commit()
    
Catch
    Debug Error.Text
    Me._$connection.Rollback()
    
End

Public Sub GetAllBookmarks() As String[]
    
    Dim yukiResult As Result = Me._$connection.Find(TableBookmark)
    Dim yukiPaths As New String[]
    
    For Each yukiResult
        yukiPaths.Add(yukiResult[ColumnPath])
    Next
    
    Return yukiPaths
    
End

Public Sub SetBookmark(argFullPath As String)
    
    Dim yukiResult As Result
    
    Me._$connection.Delete(TableBookmark, "path = &1", argFullPath)
    
    Me._$connection.Begin()
        yukiResult = Me._$connection.Create(TableBookmark)
        yukiResult[ColumnPath] = argFullPath
        yukiResult.Update()
    Me._$connection.Commit()
    
    Raise Changed
    
Catch
    Debug Error.Text
    Me._$connection.Rollback()
    
End

Public Sub DeleteBookmark(argFullPath As String)
    
    Me._$connection.Delete(TableBookmark, "path = &1", argFullPath)
    
End

Public Sub _new() 'override.
    
    Me._SetConnection()
    ensureBookmarkTable()
    ensureSymbolTable()
    
End
