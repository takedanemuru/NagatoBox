' Gambas class file

Inherits NagatoTabContainerWithSidePane

Private $sidePane As NagatoFileSelectorSidePane
Private $iconView As NagatoFileSelectorIconView
Private $toolbar As NagatoFileSelectorToolBar
Private $searchBar As NagatoInfobarFileSearch

Private Sub refreshTab(argPath As String)
    
    With NagatoXdgUserDirs
        
    Select Case argPath
        Case User.Home
            Me._RefreshParentTab(("Home"), Stock["medium/home"])
        Case .Desktop
            Me._RefreshParentTab(File.BaseName(argPath), Stock["medium/desktop"])
        Case .Documents
            Me._RefreshParentTab(File.BaseName(argPath), Stock["medium/edit"])
        Case .Download
            Me._RefreshParentTab(File.BaseName(argPath), Stock["medium/save"])
        Case .Music
            Me._RefreshParentTab(File.BaseName(argPath), Stock["medium/audio"])
        Case .Pictures
            Me._RefreshParentTab(File.BaseName(argPath), Stock["medium/image"])
        Case .PublicShare
            Me._RefreshParentTab(File.BaseName(argPath), Stock["medium/people"])
        Case .Templetes
            Me._RefreshParentTab(File.BaseName(argPath), Stock["medium/new"])
        Case .Videos
            Me._RefreshParentTab(File.BaseName(argPath), Stock["medium/video"])
        Default
            Me._RefreshParentTab(File.BaseName(argPath), Stock["medium/directory"])
    End Select
        
    End With
    
    $toolbar.SetPathString(argPath)
    
End

Private Sub openFileWithExtensiton(argPath As String)
    
   Select Case File.Ext(argPath)
        Case "txt", "ntx"
            NagatoTabHandler.NewTabWithPath(MikuruFunctionType.TextEditor, argPath)
        Case "html"
            NagatoTabHandler.NewTabWithPath(MikuruFunctionType.WebBrowser, argPath)  
        Case "jpg", "jpeg", "png", "gif", "bmp", "ico", "tiff"
            NagatoTabHandler.NewTabWithPath(MikuruFunctionType.ImageViewer, argPath)
        Case "pdf"
            NagatoTabHandler.NewTabWithPath(MikuruFunctionType.PdfViewer, argPath)
        Case "desktop"
            NagatoDesktopFile.Run(argPath)
    End Select  
    
End

Private Sub openTerminal()
    
    If Desktop.Type = "XFCE" Then
        MikuruXfce4Exo.OpenTerminalWithWorkingDirectory($iconView.GetCurrentFullPath())
    Else
        Desktop.OpenTerminal($iconView.GetCurrentFullPath())
    Endif
    
End

Private Sub openFile(argPath As String) 
    
    Dim yukiMimeType As String = NagatoMimeType.GetMineType(argPath)
    
   If yukiMimeType Begins "audio" Or If yukiMimeType Begins "video" Then
       NagatoTabHandler.NewTabWithPath(MikuruFunctionType.MediaPlayer, argPath)
   Else If yukiMimeType Begins "image" Then
       NagatoTabHandler.NewTabWithPath(MikuruFunctionType.ImageViewer, argPath)
   Else If yukiMimeType = "application/xml" Then
       NagatoTabHandler.NewTabWithPath(MikuruFunctionType.HighlightEditor, argPath)
   Else If yukiMimeType = "application/javascript" Then
       NagatoTabHandler.NewTabWithPath(MikuruFunctionType.HighlightEditor, argPath)
   Else If yukiMimeType = "text/plain" Then
       If File.Ext(argPath) = "nagatotext" Then
           NagatoTabHandler.NewTabWithPath(MikuruFunctionType.TextEditor, argPath)
       Else
            NagatoTabHandler.NewTabWithPath(MikuruFunctionType.PureTextEditor, argPath)
       End If 
   Else
        openFileWithExtensiton(argPath)
   Endif
    
End

Public Sub _new(argParent As TabStrip, Optional argPath As String = User.Home)
    
    Me._Initialize(argParent)
    $toolbar = New NagatoFileSelectorToolBar(Me._$hBox) As "ToolBar"
    $sidePane = New NagatoFileSelectorSidePane(Me._$sidePanel) As "SidePane"
    $iconView = New NagatoFileSelectorIconView(Me._$paneHBox, argPath) As "IconView"
    $searchBar = New NagatoInfobarFileSearch(Me._$vBox) As "SearchBar"
    $searchBar.Hide()
    refreshTab(argPath)
    
End

Public Sub ToolBar_MenuEvent(argEvent As Integer)
    
    Select Case argEvent
        Case MikuruMenuEventMove.Home
            $iconView.Home()
        Case MikuruMenuEventMove.Back
            $iconView.Back()
        Case MikuruMenuEventMove.Forward
            $iconView.Forward()
        Case MikuruMenuEventMove.Up
            $iconView.Up()
        Case MikuruMenuEventMove.Reload
            $iconView.Reload()
        Case MikuruMenuEventFile.MakeNewDirectory
            $iconView.MakeDir()
        Case MikuruMenuEventFile.OpenTerminalHere
            openTerminal()
        Case MikuruMenuEventFile.Search
            $searchBar.Show()
        Case MikuruMenuEventView.Changed
            Debug "View->Changed"
            $iconView.Reload()
    End Select
    
End

Public Sub ToolBar_AddressBoxClick(argPath As String)
    
    If argPath Not Begins User.Home Or If Not IsDir(argPath) Then
        $toolbar.SetPathString($iconView.GetCurrentFullPath())
    Else
        $iconView.OpenDir(argPath)
    Endif
    
End

Public Sub ToolBar_OpenDir(argPath As String)
    
    $iconView.OpenDir(argPath)
    
End

Public Sub ToolBar_ChangeIconSize(argIndex As Integer)
    
    $iconView.ChangeIconSize(argIndex)
    
End

Public Sub SidePane_Dropped()
    
    $iconView.Reload()
    
End

Public Sub IconView_NewPath(argPath As String)
    
    refreshTab(argPath)
    
End

Public Sub IconView_OpenFile(argPath As String)
    
    openFile(argPath)
    
End

' Public Sub IconView_OpenInNewTab(argPath As String)
'     
'     NagatoTabHandler.NewTabWithPath(argPath)
'     
' End

Public Sub IconView_Bookmark(argKey As String)
    
    Dim yukiObserver As New Observer(NagatoDBDirectory) As "Asakura"
    
    NagatoDBDirectory.SetBookmark(argKey)
    
End

Public Sub IconView_Search()
    
    $searchBar.Show()
    
End

Public Sub Asakura_Changed()
    
    $sidePane.Refresh()
    
End

Public Sub SearchBar_SearchQuery(argQuery As String)
    
    Debug argQuery
    
    $iconView.RefreshIconViewWithSearchQuery(argQuery)
    
End

Public Sub SidePane_OpenDirectory(argPath As String)
    
    $iconView.OpenDir(argPath)
    
End
