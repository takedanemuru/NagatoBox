' Gambas class file

Inherits NagatoToolButtons

Private $progressLabel As Label
Private $progressBar As ProgressBar
Private $volumeButton As ToolButton
Private $volumeSlider As Slider

Event OpenFile
Event Play
Event Pause
Event Stop
Event PositionChanged(argPosition As Float)
Event VolumeSliderShown
Event VolumeChanged(argVolume As Float)

Private Sub addOpenFileButton()
    
    Dim yukiButton As New ToolButton(Me._$parent) As "OpenFile"
    
    With yukiButton
        .Width = Me.$size
        .Picture = Stock["medium/open"]
        .Tooltip = ("open file")
    End With
    
End

Private Sub addPlayButton()
    
    Dim yukiButton As New ToolButton(Me._$parent) As "Play"
    
    With yukiButton
        .Width = Me.$size
        .Picture = Stock["16/play"]
        .Tooltip = ("play")
    End With
    
End

Private Sub addPauseButton()
    
    Dim yukiButton As New ToolButton(Me._$parent) As "Pause"
    
    With yukiButton
        .Width = Me.$size
        .Picture = Stock["16/pause"]
        .Tooltip = ("pause")
    End With
    
End

Private Sub addStopButton()
    
    Dim yukiButton As New ToolButton(Me._$parent) As "Stop"
    
    With yukiButton
        .Width = Me.$size
        .Picture = Stock["16/stop"]
        .Tooltip = ("stop")
    End With
    
End

Private Sub addProgressLabel()
    
    $progressLabel = New Label(Me._$parent) As "Label"
    
    With $progressLabel
        .AutoResize = True
        .Padding = 7
        .Text = "0:00 / 0:00"
    End With
    
End

Private Sub addProgressBar()
    
    Dim yukiVBox As New VBox(Me._$parent)
    
    $progressBar = New ProgressBar(yukiVBox) As "ProgressBar"
    
    With yukiVBox
        .Expand = True
        .Padding = 7
    End With
    
    With $progressBar
        .Expand = True
        .Value = 0
        .Label = False
    End With
    
End

Private Sub addVolumeButton()
  
    $volumeButton = New ToolButton(Me._$parent) As "Volume"
    
    With $volumeButton
        .Width = Me.$size
        .Picture = Stock["16/volume"]
        .Toggle = True
    End With
    
End

Private Sub addVolumeSlider()
    
    $volumeSlider = New Slider(Me._$parent) As "Slider"
    
    With $volumeSlider
        .MinValue = 0
        .MaxValue = 200
        .Step = 1
        .Width = 100
        .Visible = False
    End With
    
End

Private Sub constructWidgets()
    
    addOpenFileButton()
    addPlayButton()
    addPauseButton()
    addStopButton()
    addProgressLabel()
    addProgressBar()
    addVolumeButton()
    addVolumeSlider()
    
End

Public Sub _new(argContainer As Container)
    
    Me.initialize(argContainer)
    constructWidgets()
    
End

Public Sub SetProgress(argPosition As Float, argDuration As Float)
    
    $progressLabel.Text = Subst$(" &1 / &2 ", NagatoTimeFormat.Convert(argPosition), NagatoTimeFormat.Convert(argDuration))
    $progressBar.Value = argPosition / argDuration 

Catch
    Return

End

Public Sub SetVolume(argVolume As Integer)
    
    $volumeSlider.Value = argVolume
    
End

Public Sub OpenFile_Click()
    
    Raise OpenFile
    
End

Public Sub Play_Click()
    
    Raise Play
    
End

Public Sub Pause_Click()
    
    Raise Pause
    
End

Public Sub Stop_Click()
    
    Raise Stop
    
End

Public Sub ProgressBar_MouseDown()
    
    Dim yukiPosition As Integer = Mouse.X - $progressBar.X
    Dim yukiDuration As Integer = $progressBar.Width
    
    Raise PositionChanged(yukiPosition / yukiDuration)
    
End

Public Sub Volume_Click()
    
    $volumeSlider.Visible = Not $volumeSlider.Visible
    If $volumeSlider.Visible Then Raise VolumeSliderShown
    
End

Public Sub Slider_Change()
    
    Raise VolumeChanged($volumeSlider.Value / 100)
    
End
