' Gambas class file

Inherits NagatoDynamicSubMenu

Private Sub addFontNameMenu()
    
    Dim yukiMenu As New Menu(Me._$rootMenu) As "FontMenu"
    
    With yukiMenu
        .Text = Subst$(("Font Name: &1"), NagatoSettingsPureTextEditor.FontName)
    End With
    
End

Private Sub addFontSizeMenu()
    
    Dim yukiMenu As New Menu(Me._$rootMenu) As "FontMenu"
    
    With yukiMenu
        .Text = Subst$(("Font Size: &1"), NagatoSettingsPureTextEditor.FontSize)
    End With
    
End

Private Sub addFontColorMenu()
    
    Dim yukiMenu As New Menu(Me._$rootMenu) As "FontColorMenu"
    
    With yukiMenu
        .Text = ("Font Color")
        .Picture = MikuruColorTipIcon.Get(NagatoSettingsPureTextEditor.FontColor, 16)
    End With
    
End

Private Sub addBackgroundColorMenu()
    
    Dim yukiMenu As New Menu(Me._$rootMenu) As "BackgroundColorMenu"
    
    With yukiMenu
        .Text = ("Background Color")
        .Picture = MikuruColorTipIcon.Get(NagatoSettingsPureTextEditor.BackgroundColor, 16)
    End With
    
End

Private Sub addWrapMenu()
    
    Dim yukiMenu As New Menu(Me._$rootMenu) As "WrapMenu"
    
    With yukiMenu
        .Text = ("Wrap")
        .Toggle = True
        .Checked = NagatoSettingsPureTextEditor.Wrap
    End With
    
End

Public Sub _RefreshMenu() ' Override
    
    addFontNameMenu()
    addFontSizeMenu()
    addFontColorMenu()
        MikuruMenuSeparator.Set(Me._$rootMenu)
    addBackgroundColorMenu()
        MikuruMenuSeparator.Set(Me._$rootMenu)
    addWrapMenu()
    
End

Public Sub FontMenu_Click()
    
    Dialog.Title = ("SelectFont")
    
    If Not Dialog.SelectFont() Then
        NagatoSettingsPureTextEditor.FontName = Dialog.Font.Name
        NagatoSettingsPureTextEditor.FontSize = Dialog.Font.Size
        Raise MenuEvent(MikuruMenuEventView.Changed)
    Endif
    
End

Public Sub FontColorMenu_Click()
    
    
    
End

Public Sub BackgroundColorMenu_Click()
    
    
    
End

Public Sub WrapMenu_Click()
    
    
    
End
