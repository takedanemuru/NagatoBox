' Gambas class file

Create Static

Property Read Ready As Boolean
Property Read AllApplications As Object[]
Property Read NagatoSoftwareCompilationApplications As Object[] 
Property Read Settings As Object[]
Property Read Graphics As Object[]
Property Read Medias As Object[]
Property Read Educations As Object[]
Property Read Networks As Object[]
Property Read Developments As Object[]
Property Read Offices As Object[]
Property Read Games As Object[]
Property Read Utilities As Object[]
Property Read Systems As Object[]

Private Const APPLICATIONS_DIR As String = "/usr/share/applications"
Private $ready As Boolean = False
Private $allApllications As New Object[]
Private $nagatoSoftwareCompilationApplications As New Object[]
Private $settings As New Object[]
Private $graphics As New Object[]
Private $medias As New Object[]
Private $educations As New Object[]
Private $networks As New Object[]
Private $developments As New Object[]
Private $offices As New Object[]
Private $games As New Object[]
Private $utilities As New Object[]
Private $systems As New Object[]

Event Ready

Private Sub addDesktopFiles(argPath As String)
    
    Dim yukiDesktopFile As New NagatoDesktopFile(argPath)
    
    With yukiDesktopFile
        $allApllications.Add(yukiDesktopFile)
        If .HasCategory("Nagato") Then $nagatoSoftwareCompilationApplications.Add(yukiDesktopFile)
        If .HasCategory("Settings") Then $settings.Add(yukiDesktopFile)
        If .HasCategory("Graphics") Then $graphics.Add(yukiDesktopFile)
        If .HasCategory("Audio") Or If .HasCategory("video") Or If .HasCategory("AudioVideo") Then $medias.Add(yukiDesktopFile)
        If .HasCategory("Education") Then $educations.Add(yukiDesktopFile)
        If .HasCategory("Development") Then $developments.Add(yukiDesktopFile)
        If .HasCategory("Network") Or If .HasCategory("Internet") Then $networks.Add(yukiDesktopFile)
        If .HasCategory("Office") Then $offices.Add(yukiDesktopFile)
        If .HasCategory("Game") Then $games.Add(yukiDesktopFile)
        If .HasCategory("Utility") Then $utilities.Add(yukiDesktopFile)
        If .HasCategory("System") Then $systems.Add(yukiDesktopFile)
    End With
    
End

Private Sub clearAllArray()
    
    $allApllications.Clear()
    $nagatoSoftwareCompilationApplications.Clear()
    $settings.Clear()
    $graphics.Clear()
    $medias.Clear()
    $educations.Clear()
    $networks.Clear()
    $developments.Clear()
    $offices.Clear()
    $games.Clear()
    $utilities.Clear()
    $systems.Clear()
    
End

Public Sub Activate()
    
    Dim yukiPath As String
    
    $ready = False
    
    For Each yukiPath In Dir(APPLICATIONS_DIR).Sort()
        If File.Ext(APPLICATIONS_DIR &/ yukiPath) = "desktop" Then
            addDesktopFiles(APPLICATIONS_DIR &/ yukiPath)
        Endif
    Next
    
    $ready = True
    
    Debug "appmenu is ready"
    
End

Public Sub Refresh()
    
    clearAllArray()
    Activate()
    
    Raise Ready
    
End

Private Function Ready_Read() As Boolean

    Return $ready

End

Private Function Games_Read() As Object[]

    Return $games

End

Private Function Utilities_Read() As Object[]

    Return $utilities

End

Private Function Offices_Read() As Object[]

    Return $offices

End

Private Function Networks_Read() As Object[]

    Return $networks

End

Private Function Settings_Read() As Object[]

    Return $settings

End

Private Function Graphics_Read() As Object[]

    Return $graphics

End

Private Function Educations_Read() As Object[]

    Return $educations

End

Private Function Systems_Read() As Object[]

    Return $systems

End

Private Function Medias_Read() As Object[]

    Return $medias

End

Private Function Developments_Read() As Object[]

    Return $developments

End

Private Function NagatoSoftwareCompilationApplications_Read() As Object[]

    Return $nagatoSoftwareCompilationApplications

End

Private Function AllApplications_Read() As Object[]

    Return $allApllications

End
