' Gambas class file

Inherits NagatoSuperMenu

Private $types As String[]

Event SetWallPaper(argType As Integer)

Private Sub addFileMenu()
    
    Dim yukiMenu As New Menu(Me._$rootMenu)
    Dim yukiSubMenu As NagatoSubMenuFile
    
    With yukiMenu
        .Text = ("File")
        .Picture = Stock["medium/directory"]
    End With
    
    yukiSubMenu = New NagatoSubMenuFile(yukiMenu) As "Menu"
    
End

Private Sub addWallpaperTypeMenu(argParentMenu As Menu)
    
    Dim yukiMenu As Menu
    Dim yukiCount As Integer
    
    For yukiCount = 0 To $types.Max
        yukiMenu = New Menu(argParentMenu) As "WallPaperTypeMenu"
        yukiMenu.Text = $types[yukiCount]
        yukiMenu.Tag = yukiCount
    Next
    
End

Private Sub addSetAsWallPaperMenu()
    
    Dim yukiMenu As Menu
    
    Select Case Desktop.Type
        Case "XFCE"
            yukiMenu = New Menu(Me._$rootMenu)
            yukiMenu.Text = ("set as wallpaper (Xfce4)")
            $types = MikuruWallpaper.TypeXfce4
        Case "?"
            yukiMenu = New Menu(Me._$rootMenu)
            yukiMenu.Text = ("set as wallpaper (with feh)")
            $types = MikuruWallpaper.TypeFeh
        Default
            Return
    End Select
    
    yukiMenu.Picture = Stock["medium/desktop"]
    addWallpaperTypeMenu(yukiMenu)
    
End

Private Sub addResizeMenu()
    
    Dim yukiMenu As New Menu(Me._$rootMenu) As "ResizeMenu"
    
    With yukiMenu
        .Text = ("Resize")
        .Tag = MikuruMenuEventImageEffect.Resize
    End With
    
End

Public Sub _AddOtherMenu()
    
    addFileMenu()
    If Desktop.Type = "XFCE" Or If "?" Then addSetAsWallPaperMenu()
    addResizeMenu()
    
End

Public Sub WallPaperTypeMenu_Click()
    
    Raise SetWallPaper(Last.Tag)
    
End

Public Sub ResizeMenu_Click()
    
    Raise MenuEvent(Last.Tag)
    
End
