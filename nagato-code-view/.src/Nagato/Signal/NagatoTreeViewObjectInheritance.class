' Gambas class file

Inherits NagatoObject

Private $projectDirectory As String
Private $treeView As TreeView

Private Sub ensureParentObject(argParentObject As String)
    
    If Not argParentObject Then Return
    If $treeView.Exist(argParentObject) Then Return
    addClass(MikuruClassFile.GetParentObjectPath($projectDirectory, argParentObject))
    
End

Private Sub addClass(argPath As String)
    
    Dim yukiParentObject As String = MikuruClassFile.GetParentName(argPath)
    
    ensureParentObject(yukiParentObject)
    Try $treeView.Add(File.BaseName(argPath), File.BaseName(argPath), Null, yukiParentObject)
    
End

Private Sub addClasses()
    
    Dim yukiPath As String
    
    For Each yukiPath In RDir($projectDirectory).Sort(gb.Natural)
        If File.Ext($projectDirectory &/ yukiPath) <> "class" Then Continue
        addClass($projectDirectory &/ yukiPath)
    Next
    
End

Private Sub removeIndependentClass(argKey As String)
    
    If Not $treeView.Exist(argKey) Then Return
    If $treeView[argKey].Children > 0 Then Return
    If $treeView[argKey].ParentKey Then Return
    $treeView[argKey].Delete()
    
End

Private Sub removeIndependentClasses()
    
    Dim yukiKey As String
    
    For Each yukiKey In RDir($projectDirectory)
        If File.Ext(yukiKey) <> "class" Then Continue
        removeIndependentClass(File.BaseName(yukiKey))
    Next
    
End

Public Sub Refresh(argDirectory As String)
    
    $treeView.Clear()
    $projectDirectory = argDirectory
    addClasses()
    removeIndependentClasses()
    
End

Public Sub _new(argContainer As Container)
    
    $treeView = New TreeView(argContainer) As "TreeView"
    $treeView.Expand = True
    
End

Public Sub TreeView_Activate()
    
    Dim yukiPath As String = MikuruClassFile.GetParentObjectPath($projectDirectory, $treeView.Key)
    
    If Exist(yukiPath) Then
        HaruhiCodeViewer.SetCode(yukiPath)
    Else
        Message.Info(("YUKI.N > This class is defiend by Gambas3 itself."), ("OK"))
    Endif
    
End
