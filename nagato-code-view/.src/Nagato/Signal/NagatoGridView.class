' Gambas class file

Inherits NagatoUxContainer

Private $data As New NagatoData 
Private $grids As GridView
Private $gridsHandler As NagatoGridViewHandler

Private Sub sortGrids()
    
    $gridsHandler.Clear()
    $data.Refresh()
    $gridsHandler.Fill($data.GridData)
    $gridsHandler.SetSumRow($data.GetLinesOfCode(False), $data.GetLinesOfCode(True))
    
End

Private Sub openDirectory(argDirectory As String)
    
    $data.Clear(argDirectory)
    sortGrids()
    Raise Signal(MikuruSignal.ViewRefresh, [Subst$($data.Message, File.Name(argDirectory))])
    NagatoSettings.PushDirectory(argDirectory)
    
End

Private Function getTargetDirectory() As String
    
    Dialog.Title = ("Select Directory")
    Dialog.Path = NagatoSettings.LastDirectory
    Dialog.ShowHidden = True
    
    If Dialog.SelectDirectory() Then
        Return ""
    Else If Not Dir(Dialog.Path).Exist(".project") Then
        Message.Warning(("YUKI.N > .project file not found."), ("OK"))
        Return ""
    Else
        Return Dialog.Path
    Endif
    
End

Public Sub Open(Optional argDirectory As String = "")
    
    Dim yukiTargetDirectory As String = argDirectory
    
    If yukiTargetDirectory = "" Then yukiTargetDirectory = getTargetDirectory()
    If Exist(yukiTargetDirectory) Then openDirectory(yukiTargetDirectory)
    
End

Public Sub Filter(argQuery As String)
    
    Dim yukiRow As Integer
    
    For yukiRow = 0 To $grids.Rows.Max
        If $grids[yukiRow, 1].Text Not Like Subst$("*&1*", argQuery) Then
            $grids.Rows[yukiRow].H = 0
        Else
            $grids.Rows[yukiRow].H = 21
        Endif
    Next
    
End

Public Sub Reload()
    
    If NagatoSettings.LastDirectory = "" Then Return
    
    sortGrids()
    
End

Public Sub _initialize() ' override
    
    $grids = New GridView(Me._$parentContainer) As "Grids"
    $gridsHandler = New NagatoGridViewHandler($grids)
    
End

Public Sub Grids_Activate()
    
    Dim yukiRow As Integer = $grids.RowAt(Mouse.Y)
    
    If yukiRow <> $grids.Rows.Max Then 
        Raise Signal(MikuruSignal.ViewShowCodeView, [$data.GetPath($grids[yukiRow, 1].Text)])
    End If
    
End

Public Sub Grids_ColumnClick(argIndex As Integer)
    
    If $data.Count > 0 Then
        $data.SetTargetIndex(argIndex)
        sortGrids()
    End If
    
End
