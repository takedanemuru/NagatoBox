' Gambas class file

Inherits NagatoGridView

Public Sub _AbstractOnInitializeGridView()
    
    With Me._$grids
        .Header = GridView.Horizontal
        .Resizable = True
        .Expand = True
        .Columns.Count = 7
        Me._SetColumns(0, ("Type"), 100, Align.Left)
        Me._SetColumns(1, ("Name"), 250, Align.Left)
        Me._SetColumns(2, ("Physical LOC"), 100, Align.Left)
        Me._SetColumns(3, ("Logical LOC"), 100, Align.Left)
        Me._SetColumns(4, ("Properties"), 100, Align.Left)
        Me._SetColumns(5, ("Methods"), 100, Align.Left)
        Me._SetColumns(6, "", 16, Align.Left)
        .Rows.Count = 0
    End With
    
End

Public Sub Filter(argQuery As String)
    
    Dim yukiRow As Integer
    
    For yukiRow = 0 To Me._$grids.Rows.Max
        If Me._$grids[yukiRow, 1].Text Not Like Subst$("*&1*", argQuery) Then
            Me._$grids.Rows[yukiRow].H = 0
        Else
            Me._$grids.Rows[yukiRow].H = 21
        Endif
    Next
    
End

Public Sub Fill(argGridData As Variant[])
    
    Dim yukiCount As Integer
    
    For yukiCount = 0 To argGridData.Max
        Inc Me._$grids.Rows.Count
        With argGridData[yukiCount]
            Me._$grids[Me._$grids.Rows.Max, 0].Text = argGridData[yukiCount]["type"]
            Me._$grids[Me._$grids.Rows.Max, 1].Text = argGridData[yukiCount]["name"]
            Me._SetRow(2, Format$(.["lines"], "#,###,###,###"))
            If .["type"] <> "Form" Then Me._SetRow(3, Format$(.["withoutvoid"], "#,###,###,###"))
            Me._SetRow(4, Format$(.["properties"], "#,###,###,###"))
            Me._SetRow(5, Format$(.["methods"], "#,###,###,###"))
            If .["lines"] >= 100 Then Me._SetBackgroundColor(Color.Pink)
            If .["withoutvoid"] >= 100 Then Me._SetBackgroundColor(Color.Red)
        End With
    Next
    
End

Public Sub SetSumRow(argData As NagatoGambas3Project)
    
    Inc Me._$grids.Rows.Count
    
    With Me._$grids
        .[.Rows.Max, 1].Text = ("TOTAL")
        Me._SetRow(2, Format$(argData.GetLinesOfCode(False), "#,###,###"))
        Me._SetRow(3, Format$(argData.GetLinesOfCode(True), "#,###,###"))
        Me._SetRow(4, Format$(argData.PropertyCount, "#,###,###"))
        Me._SetRow(5, Format$(argData.MethodCount, "#,###,###"))
    End With
    
End
