' Gambas class file

Create Static

Property LastDirectory As String
Property Read RecentDirectories As String[]

Private $settings As New Settings

Public Sub LoadFormSettings(argForm As Form)
    
    With argForm
        .X = $settings[Subst$("&1/x", .Name), .X]
        .Y = $settings[Subst$("&1/y", .Name), .Y]
        .Width = $settings[Subst$("&1/width", .Name), .Width]
        .Height = $settings[Subst$("&1/height", .Name), .Height]
    End With
    
End

Public Sub SaveFormSettings(argForm As Form)
    
    With argForm
        $settings[Subst$("&1/x", .Name)] = .X
        $settings[Subst$("&1/y", .Name)] = .Y
        $settings[Subst$("&1/width", .Name)] = .Width
        $settings[Subst$("&1/height", .Name)] = .Height
    End With
    
    $settings.Save()
    
End

Public Sub PushDirectory(argDirectory As String)
    
    If Not MikuruProjectDirectory.IsValid(argDirectory) Then Return
    
    NagatoSettings.LastDirectory = File.Dir(argDirectory)
    
    If Not Object.IsValid(Me.RecentDirectories) Then 
        $settings["directory/recent"] = [argDirectory]
    Else
        $settings["directory/recent"] = MikuruPath.GetRecents(Me.RecentDirectories, argDirectory)
    Endif

    $settings.Save()
    
End

Private Function LastDirectory_Read() As String

    Return $settings["directory/last", User.Home]
    
End

Private Sub LastDirectory_Write(Value As String)

    $settings["directory/last"] = Value
    $settings.Save()

End

Private Function RecentDirectories_Read() As String[]

    $settings["directory/recent"] = MikuruPath.Sanitize($settings["directory/recent", Null])
    $settings.Save()
    
    Return $settings["directory/recent"]

End
