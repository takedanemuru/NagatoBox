' Gambas class file

Inherits NagatoGrids

Property Read LastSelectedId As String
Property Read LastSelectedName As String

Private $lastSelectedId As String = ""
Private $lastSelectedName As String = ""
Private $lock As Boolean = False

Event Kill

Public Sub _InitializeGridView()
    
    Me._$gridView.Rows.Count = 0
    
    With Me._$gridView
        .Columns.Count = 6
        .Columns[0].Text = ("Process ID")
        .Columns[1].Text = ("Status")
        .Columns[2].Text = ("Process Name")
        .Columns[3].Text = ("Processor")
        .Columns[4].Text = ("Memory (RSS)")
        .Columns[5].Text = ("Memory (Virtual)")
        .ScrollBar = Scroll.Both
    End With
    
    NagatoSettings.LoadGridsSettings(Me._$gridView)
    
End

Private Sub setRowData(argRowData As Collection)
    
    With Me._$gridView
        Inc .Rows.Count
        Me._SetText(0, CStr(argRowData["id"]))
        Me._SetText(1, argRowData["status"])
        Me._SetText(2, argRowData["name"])
        Me._SetText(3, MikuruUnitConversion.UsageToString(argRowData["cpu"]), True)
        Me._SetText(4, MikuruUnitConversion.PageToMiB(CStr(argRowData["rss"])), True)
        Me._SetText(5, MikuruUnitConversion.KiloByteToMiB(CStr(argRowData["virtual"])), True)
        If Odd(.Rows.Max) Then Me._SetBackGroundColor()
        If .[.Rows.Max, 0].Text = $lastSelectedId Then .Select(.Rows.Max, 1)
    End With
    
End

Private Sub setGridView()
    
    Dim yukiGridData As Variant[] = MikuruGrids.GetData()
    Dim yukiCount As Integer
    
    Me._Clear()
        For yukiCount = 0 To yukiGridData.Max
            setRowData(yukiGridData[yukiCount])
        Next
    Me._Restore()
    
End

Private Sub popUpKillMenu()
    
    Dim yukiMenu As New Menu(HaruhiMain) 
    Dim yukiKillMenu As New Menu(yukiMenu) As "KillMenu"
    
    yukiMenu.Visible = False
    yukiKillMenu.Text = "KILL"
    
    yukiMenu.Popup()
    
End

Private Sub forceRefresh()
    
    MikuruUnitConversion.SetCpuTimes()
    setGridView()
    
End

Public Sub Refresh()
    
    MikuruUnitConversion.SetCpuTimes()
    If Not $lock Then setGridView()
    
End

Public Sub Unselect()
    
    $lastSelectedId = ""
    
End

Public Sub Asakura_ColumnClick(argColumnIndex As Integer)

    MikuruGrids.SwitchSort(argColumnIndex)
    
    forceRefresh()
    
End

Public Sub Asakura_MouseDown()
    
    If Me._$gridView.RowAt(Mouse.Y) = -1 Then Return
    $lastSelectedId = Me._$gridView[Me._$gridView.Row, 0].Text
    $lastSelectedName = "x"
    
    If Mouse.Right Then popUpKillMenu()

End

Public Sub Asakura_Enter()
    
    $lock = True
    
End

Public Sub Asakura_Leave()
    
    $lock = False
    
End

Public Sub Asakura_ColumnResize(argColumnIndex As Integer)
    
    Debug argColumnIndex
    
    NagatoSettings.SaveGridsSettings(Me._$gridView)
    
End

Public Sub KillMenu_Click()
    
    Raise Kill
    
End

Private Function LastSelectedId_Read() As String

    Return $lastSelectedId

End

Private Function LastSelectedName_Read() As String

    Return $lastSelectedName

End
