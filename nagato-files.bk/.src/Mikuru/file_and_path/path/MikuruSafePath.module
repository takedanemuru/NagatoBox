' Gambas module file

Private Function getSubnumber(argPath As String) As Integer
    
    Dim yukiPath As New NagatoFilePathHandler(argPath)
    Dim yukiPosition As Integer
    Dim yukiLetter As String
    Dim yukiNumber As String
    
    If yukiPath.BaseName Not Ends ")" Then Return 0
    
    For yukiPosition = yukiPath.BaseNameLength - 1 DownTo 1
        yukiLetter = String.Mid$(yukiPath.BaseName, yukiPosition, 1)
        If yukiNumber <> "" And If yukiLetter = "(" Then Return CInteger(yukiNumber)
        If yukiLetter Not Like "[0-9]" Then Return 0
        yukiNumber = yukiLetter & yukiNumber
    Next
    
    Return 0
    
End

Private Function getNewPath(argPath As String, argCount As Integer) As String
    
    Dim yukiBaseName As String = File.BaseName(argPath)
    
    With File
        Return Subst$("&1/&2(&3).&4", .Dir(argPath), yukiBaseName, argCount, .Ext(argPath))
    End With
    
End

Public Function getSubnumberedPath(argPath As String, argCount As Integer) As String
    
    Dim yukiCount As Integer = argCount
    Dim yukiPath As String
    Dim yukiDirectory As String = File.Dir(argPath)
    Dim yukiBaseName As String = Replace$(File.BaseName(argPath), "(" & argCount & ")", "")
    Dim yukiExtention As String = File.Ext(argPath)
    
    Do
         Inc yukiCount
         yukiPath = yukiDirectory &/ yukiBaseName & Subst$("(&1).", yukiCount) & yukiExtention 
         If Not Exist(yukiPath) Then Return yukiPath
    Loop
    
End

Public Sub _call(argPath As String) As String
    
    Dim yukiCount As Integer 
    Dim yukiPath As String
    Dim yukiNumber As Integer
    
    If Not Exist(argPath) Then Return argPath
    
    yukiNumber = getSubnumber(argPath)
    
    If yukiNumber > 0 Then Return getSubnumberedPath(argPath, yukiNumber)
    
    Do
         Inc yukiCount
         yukiPath = getNewPath(argPath, yukiCount)
         If Not Exist(yukiPath) Then Return yukiPath
    Loop
    
End
