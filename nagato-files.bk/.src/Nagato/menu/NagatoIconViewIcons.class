' Gambas class file

Inherits NagatoIconViewHandler

Private Sub setNotFound()
    
    Me._$iconView.Add("NOTFOUND", "", NagatoIconTileWarningVoid.Get(""))
    
End

Private Sub ensureVisible(argPath As String)
    
    If Me._$iconView.Exist(argPath) Then Me._$iconView[argPath].EnsureVisible()
    
End

Private Sub setIcons(argPaths As String[], argSelection As String[], argDirectoryOnly As Boolean)
    
    Dim yukiPath As String
    
    For Each yukiPath In argPaths
        If Not IsDir(yukiPath) = argDirectoryOnly Then Continue
        If Not MikuruAccessible(yukiPath) Then Continue 
        Me._$iconView.Add(yukiPath, "", MikuruTile(yukiPath, argSelection.Exist(yukiPath)))
    Next
    
End

Public Sub RefreshIconView(argDirectory As String, argSelection As String[], argLastSelected As String)
    
    Me._$iconView.Clear()
    setIcons(NagatoSortFiler.Get(argDirectory, gb.Directory), argSelection, True)
    setIcons(NagatoSortFiler.Get(argDirectory, gb.File), argSelection, False)
    If Me._$iconView.Count = 0 Then setNotFound()
    NagatoDBThumbnailer.CleanUp(argDirectory)
    ensureVisible(IIf(MikuruLastRenamed.Path, MikuruLastRenamed.Path, argLastSelected))
    MikuruLastRenamed.Clear()
    
End

Public Sub RefreshWithSearchResult(argSearchResult As String[], argSelection As String[])
    
    Me._$iconView.Clear()
    setIcons(argSearchResult.Sort(gb.Natural + gb.IgnoreCase), argSelection, True)
    setIcons(argSearchResult.Sort(gb.Natural + gb.IgnoreCase), argSelection, False)
    If Me._$iconView.Count = 0 Then setNotFound()
        
End

Public Sub Ensure(argPath As String)
    
    ensureVisible(argPath)
    
End

Public Sub ClearSelection(argSelection As String[])
    
    Dim yukiPath As String
    
    For Each yukiPath In argSelection
        Me.ResetIcon(yukiPath, False)
    Next
    
End

Public Sub ResetIcon(argPath As String, argSelected As Boolean)
    
    Me._$iconView[argPath].Picture = MikuruTile(argPath, argSelected)
    
End

Public Sub ShowLostDirectory()
    
    Me._$iconView.Clear()
    Me._$iconView.Add("NOTFOUND", "", NagatoIconTileWarningVoid.Get(""))
    
Catch
    Debug Error.Text
    
End
