' Gambas class file

Inherits NagatoObject

Private $rootMenu As Menu
Private $menuConstructorClock As NagatoMenuConstructorDesktopClock
Private $menuConstructorTrashBin As NagatoMenuConstructorDesktopTrashBin
Private $menuConstructorFile As NagatoMenuConstructorFile
Private $menuConstructorDirectory As NagatoMenuConstructorDirectory
Private $menuConstructorApplication As NagatoMenuConstructorApplication
Private $menuConstructorRootDesktop As NagatoMenuConstructorRootDesktop

Public Sub _new()
    
    $rootMenu = New Menu(HaruhiDesktop) As "RootMenu"
    $menuConstructorClock = New NagatoMenuConstructorDesktopClock($rootMenu)
    $menuConstructorTrashBin = New NagatoMenuConstructorDesktopTrashBin($rootMenu)
    $menuConstructorFile = New NagatoMenuConstructorFile($rootMenu) As "TFEI"
    $menuConstructorDirectory = New NagatoMenuConstructorDirectory($rootMenu) As "TFEI"
    $menuConstructorApplication = New NagatoMenuConstructorApplication($rootMenu) As "TFEI"
    $menuConstructorRootDesktop = New NagatoMenuConstructorRootDesktop($rootMenu) As "TFEI"
    
End

Public Sub PopUp(argPath As String, argPointAtRoot As Boolean, argCount As Integer)
    
    If argPath = "NOTFOUND" Then Return

    $rootMenu.Children.Clear()

    If argPointAtRoot Then 
        $menuConstructorRootDesktop()
    Else If argPath = NagatoDesktopKey.Clock Then
        $menuConstructorClock()
    Else If argPath = NagatoDesktopKey.TrashBin Then
        $menuConstructorTrashBin()
    Else If NagatoDesktopKey.IsSpecialKey(argPath) Then
        ' pass
    Else If argPath = "" Or If argCount = 0 Then 
        ' pass
    Else If Not Exist(argPath) Then 
         ' pass
    Else If IsDir(argPath)
        $menuConstructorDirectory(argPath)
    Else If MikuruMimeType.IsDesktopEntry(argPath) Then
        $menuConstructorApplication(argPath)
    Else
        $menuConstructorFile(argPath)
    End If
    
    $rootMenu.Popup()

End

Public Sub RootMenu_Hide()
    
    'Debug "closed." & Now()
    
End
