' Gambas class file

Private $grids As GridView
Private $proxy As DBusProxy
Private $deviceType As Integer

Private Sub initializeGrids(argContainer As Container)
    
    $grids = New GridView(argContainer)
    
    With $grids
        .Columns.Count = 2
        .Columns[0].W = 100
    End With
    
End

Private Sub setData(argTitle As String, argValue As String)
    
    Dim yukiRow As Integer
    
    Inc $grids.Rows.Count
    
    yukiRow = $grids.Rows.Max
    
    Debug argValue
    
    $grids[yukiRow, 0].Text = argTitle
    $grids[yukiRow, 1].Text = argValue
    
End

Public Sub _new(argContainer As Container, argDeviceIndex As Integer)
    
    initializeGrids(argContainer)
    
    With NagatoUPower.Devices[argDeviceIndex]
        $deviceType = .Type
        setData("Type", MikuruDataTypes.GetDeviceType(.Type))
        ' setData("Vendor", .Vendor)
        'setData("Model", .Model)
        ' setData("Serial", .Serial)
        setData("Capacity", .Capacity)
        setData("Power Supply", IIf(.PowerSupply, "True", "False"))
        setData("Online", IIf(.Online, "True", "False"))
        If $deviceType = 2 Then setData("State", MikuruDataTypes.GetDeviceState(.State))
        If $deviceType = 2 Then setData("Percentage", Format$(.Percentage / 100, "##0%"))
        If $deviceType = 2 Then setData("Voltage", Format$(.Voltage, "##0V"))
    End With
    
End
