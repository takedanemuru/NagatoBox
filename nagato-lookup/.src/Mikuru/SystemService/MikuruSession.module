' Gambas module file

Public Enum TypeExit, TypeReboot, TypeShutdown

Private Const LogindBus As String = "system://org.freedesktop.login1"
Private Const LogindManagerObjectPath As String = "/org/freedesktop/login1"
Private Const LogindManagerInterface As String = "org.freedesktop.login1.Manager"

Private $logindManager As DBusProxy
Private $observer As Observer

Private Sub initializeLogindManager()
    
    $logindManager = DBus[LogindBus][LogindManagerObjectPath, LogindManagerInterface]
    
End

Private Function question(argText As String) As Boolean
    
    Dim yukiResponse As Integer = Message.Question(Subst$(("Are you sure to &1 ?"), argText), ("Cancel"), (argText))
    
    If yukiResponse = 2 Then
        Return True
    Else
        Return False
    End If
     
End

Public Function IsOpenbox() As Boolean
    
    Dim yukiOutput As String
    
    Shell "printenv | grep DESKTOP_SESSION" To yukiOutput
    
    If (yukiOutput Ends "openbox\n") Then
        Return True
    Else If (yukiOutput Ends "NagatoBox\n") Then
        Return True
    Else
        Return False
    Endif
    
End

Public Function IsNagatoBox() As Boolean
    
    Dim yukiOutput As String
    
    Shell "printenv | grep DESKTOP_SESSION" To yukiOutput
    
    If (yukiOutput Ends "NagatoBox\n") Then
        Return True
    Else
        Return False
    Endif
    
End

Public Sub Logout(argType As Integer)
    
    If Not Object.IsValid($logindManager) Then initializeLogindManager()
    
    $observer = New Observer(HaruhiQuit) As "Asakura"
    
    Select Case argType
        Case TypeExit
            If question(("EXIT")) Then HaruhiQuit.Start(argType)
        Case TypeReboot
            If question(("REBOOT")) Then HaruhiQuit.Start(argType)
        Case TypeShutdown
            If question(("SHUTDOWN")) Then HaruhiQuit.Start(argType)
    End Select
    
End

Public Sub Asakura_Finished(argType As Integer)
    
    Select Case argType
        Case TypeExit
            Try Shell "dm-tool switch-to-greeter"
        Case TypeReboot
            $logindManager.Reboot(True)
        Case TypeShutdown
            $logindManager.PowerOff(True)
    End Select

    
End
