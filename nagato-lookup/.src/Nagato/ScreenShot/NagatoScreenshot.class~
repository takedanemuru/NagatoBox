' Gambas class file

Property Read Picture As Picture
Property Read Thumbnail As Picture

Private Const ThumbnailSize As Integer = 200

Private $screenshot As Picture

Event Ready

Private Sub hasActiveWindow() As Boolean
    
    If Desktop.ActiveWindow > 0 Then Return True
    
    Message.Warning("YUKI.N > There's no active window...")
    
    Return False
    
End

Public Sub Get() 
    
    Dim yukiDesktopWindow As DesktopWindow
    
    If NagatoSettingsScreenShooter.OnlyActiveWindow Then
        yukiDesktopWindow = New DesktopWindow(Desktop.ActiveWindow)
        $screenshot = yukiDesktopWindow.GetScreenshot(False)
    Else
        $screenshot = Desktop.Screenshot()
    End If
    
' Finally
'     If Error Then $screenshot = Desktop.Screenshot()
'     Raise Ready
    
Raise Ready
    
End

Public Sub Save(argPath As String)
    
    $screenshot.Save(argPath)
    
End

Private Function Picture_Read() As Picture

    Return $screenshot

End

Private Function Thumbnail_Read() As Picture

    Dim yukiRate As Float = Min(ThumbnailSize / $screenshot.H, ThumbnailSize / $screenshot.W)
    
    With $screenshot
        Return .Image.Stretch(.W * yukiRate, .H * yukiRate).Picture
    End With

End
