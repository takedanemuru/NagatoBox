' Gambas class file

Inherits NagatoMenu

Private $menu As Menu

Private Sub setMoreMenu()
    
    Dim yukiMenu As New Menu($menu)
    
    With yukiMenu
        .Text = ("...more")
    End With
    
    Object.New("NagatoMenuDirectory", [yukiMenu, Me._$path, Me._$startPosition + 21])
    
End

Private Sub setOpenDirectoryMenu()
    
    Dim yukiMenu As New Menu($menu) As "OpenDirectoryMenu"
    
    With yukiMenu
        .Text = ("Open Folder")
        .Picture = MikuruIcons("outbox")
    End With
    
End

Private Sub setChildMenus()
    
    Dim yukiIndex As Integer
    Dim yukiPaths As String[] = MikuruDirectory[Me._$path]
    
    For yukiIndex = Me._$startPosition To Me._$startPosition + 20
        If yukiIndex > yukiPaths.Max Then Return
        If IsDir(yukiPaths[yukiIndex]) Then 
            Object.New("NagatoMenuDirectory", [$menu, yukiPaths[yukiIndex]])
        Else
            Object.New("NagatoMenuFile", [$menu, yukiPaths[yukiIndex]])
        Endif
    Next
    
    setMoreMenu()
    
End

Public Sub _SetMenu() 'override
    
    If Me._$startPosition = 0 Then
    $menu = New Menu(Me._$parentMenu) As "DirectoryMenu"
    
    With $menu
        .Text = MikuruCollapsedText(File.Name(Me._$path), HaruhiMain.Font, 240)
        .Picture = MikuruIcons("folder")
    End With
    
    Object.New("NagatoMenuItemDummy", [$menu])
    Else
        $menu = Me._$parentMenu
        DirectoryMenu_Show()
    End If
    
End
 
 Public Sub DirectoryMenu_Show()
    
    $menu.Children.Clear()
    
    setOpenDirectoryMenu()
        MikuruMenuDummy($menu)
    setChildMenus()
    
    If $menu.Children.Count = 2 Then Object.New("NagatoMenuItemNotFound", [$menu])
    
End

Public Sub OpenDirectoryMenu_Click()
    
    Try Exec ["nagato-files", Me._$path]
    
End
