' Gambas class file

Private $currentPlaylistGridHandler As NagatoMusicCurrentPlaylistGridHandler
Private $libraryGridHandler As NagatoMusicLibraryGridHandler
Private $albumIconViewHandler As NagatoMusicAlbumIconViewHandler

Public Sub Form_Show()

    Me.Center()
    NagatoSettingsCore.LoadFormSettings(Me)
    
    $currentPlaylistGridHandler = New NagatoMusicCurrentPlaylistGridHandler(CurrentPlaylistGrid)
    $libraryGridHandler = New NagatoMusicLibraryGridHandler(LibraryGridView)
    $albumIconViewHandler = New NagatoMusicAlbumIconViewHandler(AlbumIconView)

End

Public Sub Form_Close()
    
    NagatoSettingsCore.SaveFormSettings(Me)
    $currentPlaylistGridHandler.SaveSettings()
    $libraryGridHandler.SaveSettings()
    
End

Public Sub CurrentPlaylistRootMenu_Show()
    
    With NagatoSettingsMusic
        ShuffleMenu.Picture = IIf(.DoesShuffle, MikuruMonoIconBlue.Get("button-check"), Null)
        RepeatMenu.Picture = IIf(.DoesRepeat, MikuruMonoIconBlue.Get("button-check"), Null)
    End With
    
End

Public Sub CurrentPlaylistMenu_Click()
    
    Select Case Last.Tag
        Case "play"
            NagatoMusicPlayer.Play()
        Case "pause"
            NagatoMusicPlayer.Pause()
        Case "stop"
            NagatoMusicPlayer.Stop()
        Case "previous"
            NagatoMusicPlayer.Previous()
        Case "next"
            NagatoMusicPlayer.Next()
        Case "shuffle"
            NagatoSettingsMusic.DoesShuffle = Not NagatoSettingsMusic.DoesShuffle
        Case "repeat"
            NagatoSettingsMusic.DoesRepeat = Not NagatoSettingsMusic.DoesRepeat
        Case "addPaths"
            NagatoMusicMenuHandler.AddFiles()
        Case "addDirectory"
            NagatoMusicMenuHandler.AddDirectory()
        Case "clear"
            NagatoMusicMenuHandler.Clear()
        Case "saveAsPlaylist"
            'pass -- now under construction, it needs new db table.
    End Select
    
End

Public Sub LibraryMenu_Click()
    
    $libraryGridHandler.MenuHandler(Last.Tag)
    
End
