' Gambas class file

Inherits NagatoDynamicSubMenu

Private Sub addSystemInfoMenu(argTitle As String, argContent As String, Optional argIconName As String)
    
    Dim yukiMenu As New Menu(Me._$rootMenu)
    
    With yukiMenu
        .Text = Subst$("&1 : &2", argTitle, argContent)
        If argIconName Then .Picture = MikuruMonoIconBlue.Get(argIconName)
    End With
    
End

Private Function getDesktopType() As String
    
    Dim yukiOutput As String
    
    If Desktop.Type = "?" Then
        Shell "printenv grep DESKTOP_SESSION" To yukiOutput
        Return Subst$("&1(?)", yukiOutput)
    Else
        Return Desktop.Type
    Endif
    
End

Public Sub _RefreshMenu()
    
    addSystemInfoMenu("User name", User.Name, "user")
        MikuruMenuSeparator.Set(Me._$rootMenu)
    addSystemInfoMenu("CPU usage", Format$(NagatoSystemObserver.CpuUsage, "##0.00%"))
    addSystemInfoMenu("Memory usage", Format$(NagatoSystemObserver.MemoryUsage, "##0.00%"))
    addSystemInfoMenu("Swap usage", Format$(NagatoSystemObserver.SwapUsage, "##0.00%"))
        MikuruMenuSeparator.Set(Me._$rootMenu)
    addSystemInfoMenu("Desktop environment", getDesktopType())
    addSystemInfoMenu("Resolution(dpi)", Desktop.Resolution)
    addSystemInfoMenu("Kernel name", NagatoSystemInfo.GetKernelName())
    addSystemInfoMenu("Kernel release", NagatoSystemInfo.GetKernelRelease())
    addSystemInfoMenu("Node name", NagatoSystemInfo.GetNodeName())
    addSystemInfoMenu("Processor", NagatoSystemInfo.GetProcessorInfo())
    addSystemInfoMenu("Free space", NagatoSystemInfo.GetFreeSpace())
    addSystemInfoMenu("Memory total", NagatoSystemInfo.GetMemoryInfo())
    
End
