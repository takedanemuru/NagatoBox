' Gambas class file

Inherits NagatoMenu

Private Const MenuTitleLength As Integer = 30

Private Sub addSearchMenu()
    
    Dim yukiMenu As New Menu(Me._$rootMenu) As "SearchMenu"
    
    With yukiMenu
        .Picture = MikuruMonoIconBlue.Get("search")
        .Text = ("Search")
    End With
    
End

Private Sub addExecuteCommndLineMenu()
    
    Dim yukiMenu As New Menu(Me._$rootMenu) As "CommandLineMenu"
    
    With yukiMenu
        .Picture = MikuruMonoIconBlue.Get("magic-wand")
        .Text = ("Execute command")
    End With
    
End

Private Sub sortByName(argCategoryArray As Object[], ByRef refNames As String[], ByRef refCollection As Collection)
    
    Dim yukiDesktopFile As NagatoDesktopFile
    
    For Each yukiDesktopFile In argCategoryArray
        refNames.Add(yukiDesktopFile.Name)
        refCollection.Add(yukiDesktopFile, yukiDesktopFile.Name)
    Next
    
    refNames.Sort(gb.IgnoreCase)
    
End

Private Sub setEachDesktopFileMenu(argParentMenu As Menu, argDesktopFile As NagatoDesktopFile)
    
    Dim yukiMenu As New Menu(argParentMenu) As "DesktopFileMenu"
    
    With yukiMenu
        If Not Exist(argDesktopFile.Path) Then Return
        .Picture = argDesktopFile.GetIcon(2 * MikuruUX.Grid)
        .Text = argDesktopFile.Name
        .Tag = argDesktopFile.Path
    End With
    
End

Private Sub addDesktopFileMenu(argParentMenu As Menu, argCategoryArray As Object[])
    
    Dim yukiNames As New String[]
    Dim yukiCollection As New Collection
    Dim yukiCount As Integer
    
    sortByName(argCategoryArray, ByRef yukiNames, ByRef yukiCollection)
    
    For yukiCount = 0 To yukiNames.Max
        setEachDesktopFileMenu(argParentMenu, yukiCollection[yukiNames[yukiCount]])
    Next
    
End

Private Sub addCategoryMenu(argCategoryName As String, argCategoryArray As Object[], argIconName As String)
    
    Dim yukiMenu As Menu
    
    If argCategoryArray.Count = 0 Then Return
    
    yukiMenu = New Menu(Me._$rootMenu)
    
    With yukiMenu
        .Picture = MikuruMonoIconBlue.Get(argIconName)
        .Text = (argCategoryName)
    End With
    
    addDesktopFileMenu(yukiMenu, argCategoryArray)
    
End

Public Sub _InitializeMenu() 'override
    
    addSearchMenu()
    addExecuteCommndLineMenu()
        MikuruMenuSeparator.Set(Me._$rootMenu)
    
    With NagatoMenuCache
        addCategoryMenu(("Nagato"), .NagatoSoftwareCompilationApplications, "star")
            MikuruMenuSeparator.Set(Me._$rootMenu)
        addCategoryMenu(("Development"), .Developments, "wrench")
        addCategoryMenu(("Education"), .Educations, "bank")
        addCategoryMenu(("Game"), .Games, "game-controller")
        addCategoryMenu(("Graphics"), .Graphics, "image")
        addCategoryMenu(("Media"), .Medias, "video-music")
        addCategoryMenu(("Network"), .Networks, "web")
        addCategoryMenu(("Office"), .Offices, "document-edit")
        addCategoryMenu(("Settings"), .Settings, "equalizer")
        addCategoryMenu(("System"), .Systems, "computer")
        addCategoryMenu(("Utility"), .Utilities, "scissors")
            MikuruMenuSeparator.Set(Me._$rootMenu)
        addCategoryMenu(("KDE4"), .Kde4, "gear")
    End With
    
End

Public Sub SearchMenu_Click()
    
    HaruhiApplicationSearch.Center()
    HaruhiApplicationSearch.Show()
    
End

Public Sub CommandLineMenu_Click()
    
    Shell "nagato-commander"
    
    'HaruhiCommandlineBox.Show()
    
End

Public Sub DesktopFileMenu_Click()
    
    MikuruApplications.Launch(Last.Tag)
    
End
