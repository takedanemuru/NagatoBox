' Gambas class file

Inherits NagatoMusicGridHandler

Public _$columnIndexPath As Integer = 3

Private $gridViewObserver As Observer

Private Function isFound(argQuery As String, argResult As Result) As Boolean
    
    Dim yukiPattern As String = "*" & argQuery & "*"
    
    With NagatoDBMedia
        Debug argResult[.ColumnTitle]
        If (argResult[.ColumnTitle] Like yukiPattern) Then Return True
        If (argResult[.ColumnArtist] Like yukiPattern) Then Return True
        If (argResult[.ColumnAlbum] Like yukiPattern) Then Return True
    End With
    
    Return False
    
End

Private Sub setData(Optional argQuery As String)
    
    Dim yukiResult As Result = NagatoDBMedia.GetLibrary()
    
    If yukiResult.Count = 0 Then Return
    
    Me._$gridView.Clear()
    Me._$gridView.Rows.Count = 0
    
    For Each yukiResult
        If argQuery And If Not isFound(argQuery, yukiResult) Then Continue
        Inc Me._$gridView.Rows.Count
        Me._$gridView[Me._$gridView.Rows.Max, 0].Text = yukiResult[NagatoDBMedia.ColumnTitle]
        Me._$gridView[Me._$gridView.Rows.Max, 1].Text = yukiResult[NagatoDBMedia.ColumnArtist]
        Me._$gridView[Me._$gridView.Rows.Max, 2].Text = yukiResult[NagatoDBMedia.ColumnAlbum]
        Me._$gridView[Me._$gridView.Rows.Max, 3].Text = yukiResult[NagatoDBMedia.ColumnPath]
        If Odd(Me._$gridView.Rows.Max) Then Me._SetBackgroundColor()
    Next
    
End

Public Sub _RefreshGridView() 'overridden
    
    $gridViewObserver = New Observer(Me._$gridView) As "Asakura"
    Me._InitializeGridView()
    
End

Public Sub _InitializeGridView() 'overridden
    
    Me._$gridView.Clear()
    Me._$gridView.Rows.Count = 0
    
    With Me._$gridView
        .Columns.Count = 4
        .Columns[0].Text = ("Title")
        .Columns[1].Text = ("Artist")
        .Columns[2].Text = ("Album")
        .Columns[3].Text = ("Path")

        .Columns[0].Width = 200
        .Columns[1].Width = 200
        .Columns[2].Width = 200
        .Columns[3].Width = 0
    End With
    
    NagatoSettingsCore.LoadGridsSettings(Me._$gridView)
    
End

Public Sub MenuHandler(argTag As String)
    
    Select Case argTag
        Case "AddFiles"
            ContextMenu_Add()
        Case "EditTag"
            ContextMenu_EditTag()
        Default
            Debug ' do nothing
    End Select
    
End

Public Sub Search(argQuery As String)
    
    Debug argQuery
    
    setData(argQuery)
    
End

Public Sub _new(argGridView As GridView)
    
    Me._$gridView = argGridView
    Me._$backgroundColor = MikuruColor.GridStripeLightPink
    Me._RefreshGridView()
    setData()
    
End

Public Sub Asakura_Activate()
    
    Dim yukiPath As String = Me._$gridView[Me._$gridView.Row, Me._$columnIndexPath].Text
    
    NagatoMusicPlayer.SetUrlAndPlay(yukiPath)
    NagatoMusicQueue.AddFile([yukiPath])
    
End

Public Sub Asakura_Menu()
    
    Dim yukiRootMenu As New Menu(HaruhiMusicPlaylist)
    Dim yukiMenu As New NagatoMusicLibraryContextMenu(yukiRootMenu) As "ContextMenu"
    
    If Not Me._$gridView.Current Then Return
    
    yukiRootMenu.Popup()
    
End

Public Sub ContextMenu_EditTag()
    
    If Me._GetSelectionCount() > 0 Then
        HaruhiTagEditBulk.StartEdit(Me._GetSelectionText(Me._$columnIndexPath))
        If HaruhiTagEditBulk.ShowDialog() = MikuruDialog.ResponseApply Then
            Me._RefreshGridView()
            setData()
        End If
    Endif

End

Public Sub ContextMenu_Add()
    
    Dim yukiPaths As String[]
    
    If Me._GetSelectionCount() > 0 Then
        yukiPaths = Me._GetSelectionText(Me._$columnIndexPath)
        NagatoMusicPlayer.SetUrlAndPlay(yukiPaths[0])
        NagatoMusicQueue.AddFile(yukiPaths)
    Endif    
    
End
