' Gambas class file

Create Static

Property Read Activated As Boolean
Property Read HwAddress As String
Property Read Strength As Integer
Property Read MaxBitrate As Integer
Property Read AccessPointsNames As String[]

Private Const ApplicationName As String = "system://org.freedesktop.NetworkManager"
Private Const ObjectPath As String = "/org/freedesktop/NetworkManager"
Private Const Interface As String = "org.freedesktop.NetworkManager"

Private $proxy As DBusProxy
Private $activeConnections As NagatoNetworkManagerActiveConnections
Private $accessPoints As New NagatoNetworkManagerAccessPoints

Public Sub Test()
    
    Debug "Test Activation"
    
End

Public Sub Refresh()
    
    'setActiveConnections()
    
End

Public Sub _new()
    
    $proxy = DBus[ApplicationName][ObjectPath, Interface]
    $activeConnections = New NagatoNetworkManagerActiveConnections($proxy)
    
End

Private Function HwAddress_Read() As String

    'AccessPointsNames_Read()

    Return $accessPoints.GetHwAddress()

End

Private Function Strength_Read() As Integer

    Return $accessPoints.GetStrength()

End

Private Function MaxBitrate_Read() As Integer

    Return $accessPoints.GetMaxBitrate()

End

Private Function Activated_Read() As Boolean 'Returns NetworkManager is Activated or Not.

    Return DBus.System.Applications.Exist("org.freedesktop.NetworkManager")

End

Private Function AccessPointsNames_Read() As String[]

    Dim yukiCounter As Integer
    Dim yukiNames As New String[]
    
    Debug $accessPoints.Count
    
    For yukiCounter = 0 To $accessPoints.Count - 1
        Debug $accessPoints.GetHwAddress(yukiCounter)
        If $accessPoints.GetHwAddress(yukiCounter) Then
            yukiNames.Add($accessPoints.GetHwAddress(yukiCounter))
        End If 
    Next
    
Finally
    Return yukiNames

End
