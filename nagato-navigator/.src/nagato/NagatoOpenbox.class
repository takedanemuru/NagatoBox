' Gambas class file

Create Static

Private $configFilePath As String
Private $openboxRc As New XmlDocument
Private $bottomMarginElement As XmlElement
Private $originalBottomMargin As Integer = -1

Private Function getDesktopSession() As String
    
    Dim yukiOutput As String
    
    Shell "printenv | grep DESKTOP_SESSION" To yukiOutput
    
    yukiOutput = Replace$(yukiOutput, "\n", "")
    
    Return Replace$(yukiOutput, "DESKTOP_SESSION=", "")
    
Finally
    Return ""
    
End

Private Function isOpenbox() As Boolean
    
    Select Case getDesktopSession()
        Case "NagatoSoftwareCompilation", "NagatoSession", "NAGATO-X"
            Return True
        Case "openbox"
            Return True
        Default
            Return False
    End Select
    
Finally
    Return False
    
End

Private Function getConfigFilePath() As String
    
    Select Case getDesktopSession()
        Case "NagatoSoftwareCompilation", "NagatoSession", "NAGATO-X"
            Return (User.Home &/ ".config/nagato-software-complation/nagato-session-rc.xml")
        Case "openbox"
            Return (User.Home &/ ".config/openbox/rc.xml")
        Default
            Return ""
    End Select
    
Catch
    Return ""
    
End

Private Sub setBottomMargin(argMargin As Integer)
    
    $bottomMarginElement.Value = argMargin
    File.Save($configFilePath, $openboxRc.Content)
    Shell "openbox --restart"
    
End

Private Function parsingConfigFile() As Boolean
    
    $configFilePath = getConfigFilePath()
    
    If $configFilePath = "" Then Return False
    
    $openboxRc.Open($configFilePath)
    Debug $openboxRc.GetElementsByNamespace("margins")[0]
    
    If Not Error Then 
    '     $originalBottomMargin = $bottomMarginElement.Value
         Return True
    Else
         Return False
    End If
    
End

Private Sub initializeConfigXml()
    
    parsingConfigFile()
    
    ' If Not parsingConfigFile() And If $bottomMarginElement.Value <> (3 * MikuruUX.Grid - 2) Then
    '     setBottomMargin(3 * MikuruUX.Grid - 2)
    ' Endif
    
End

Public Sub KillAll()
    
    If Not isOpenbox() Then
        HaruhiBalloon.SetText("Sorry, but I don't know how to log-out here...")
    Else
        Shell "killall openbox"
    End If
    
End

Public Sub RevertBottomMargin()
    
    If $originalBottomMargin = -1 Then Return
    
    If $originalBottomMargin <> $bottomMarginElement.Value Then
        setBottomMargin($originalBottomMargin)
    Endif
    
End

Public Sub Activate()
    
    If Not isOpenbox() Then Return
    
    initializeConfigXml()
    
End
