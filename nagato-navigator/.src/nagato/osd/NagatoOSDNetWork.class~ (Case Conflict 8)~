' Gambas class file

Inherits NagatoOSD

Private $accessPointMenu As Menu
Private $observer As Observer

Private Sub getMainlineText() As String
    
    With NagatoNetworkManager
        Return Subst$("&1 Mbps (&2%)", (.MaxBitrate * (.Strength / 100) / 1000), .Strength)
    End With
    
End

Private Sub drawText()
    
    With Paint
        .Brush = .Color(Color.White)
        .Font.Size = MikuruUX.FontSizeMedium
        .Text(NagatoNetworkManager.HwAddress, Me.OffsetLeft, Me.OffsetTop1st)
        .Font.Size = MikuruUX.FontSizeLarge
        .Text(getMainlineText(), Me.OffsetLeft, Me.OffsetTop2nd)
        .Fill()
    End With

End

Private Function getActivatedPicture() As Picture
    
    Dim yukiBaseImage As Image
    
    NagatoNetworkManager.Refresh()
    
    yukiBaseImage = Me._GetBaseImage(MikuruColor.GetConditionColor(100 - NagatoNetworkManager.Strength))
    
    Paint.Begin(yukiBaseImage)
        drawText()
        Me._DrawIconPicture(MikuruNetworkIcon.GetStrengthIcon(NagatoNetworkManager.Strength))
    Paint.End()
    
    Return yukiBaseImage.Picture
    
End

Private Function getNotActivatedPicture() As Picture
    
    Dim yukiBaseImage As Image = Me._GetBaseImage(Color.Red)
    
    With Paint
        .Begin(yukiBaseImage)
        .Font.Size = MikuruUX.FontSizeLarge
        .Text("NetworkManager is not activated.", Me.OffsetLeft, Me.OffsetTop2nd)
        Me._DrawIconPicture(MikuruNetworkIcon.GetWiredIcon(False))
        .End()
    End With
    
    Return yukiBaseImage.Picture
    
End

Public Sub _AddOtherMenu(argParentMenu As Menu) ' Override.
    
    $accessPointMenu = New Menu(argParentMenu)
    
    With $accessPointMenu
        .Text = ("Access points")
    End With
    
    MikuruMenuSeparator.Set($accessPointMenu) ' as DummyMenu
    $observer = New Observer($accessPointMenu) As "Asakura"
    
End

Public Sub _SetPicture() 'override
    
    If NagatoNetworkManager.Activated Then
        Me._$form.Picture = getActivatedPicture()
    Else
        Me._$form.Picture = getNotActivatedPicture()
    End If 
    
End

Public Sub Asakura_Show()
    
    Dim yukiAccessPoints As New NagatoNetworkManagerAccessPoints
    Dim yukiCounter As Integer
    Dim yukiMenu As Menu
    
    Debug "I came here."
    
    Debug yukiAccessPoints.Max
    
    $accessPointMenu.Children.Clear()
    
    If yukiAccessPoints.Max = -1 Then Return
    
    For yukiCounter = 0 To yukiAccessPoints.Max
        yukiMenu = New Menu($accessPointMenu)
        With yukiMenu
            .Text = yukiAccessPoints.GetHwAddress(yukiCounter)
        End With
    Next
    
End
