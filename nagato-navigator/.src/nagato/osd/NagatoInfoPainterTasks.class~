' Gambas class file

Inherits NagatoInfoPainter

Property Read Span As Integer
Property Read IconSize As Integer

Private $desktopWindowIDs As New Integer[]

Private Function getEachWorkspaceDesktopWindowIDs(argDesktopNumber As Integer) As Integer[]
    
    Dim yukiResult As New Integer[]
    Dim yukiDesktopWindow As DesktopWindow
    
    For Each yukiDesktopWindow In Desktop.Windows
        If yukiDesktopWindow.SkipTaskbar Then Continue
        If yukiDesktopWindow.Desktop <> argDesktopNumber Then Continue
        yukiResult.Add(yukiDesktopWindow.Id)
    Next
    
    Return yukiResult.Sort()
    
End

Private Sub setDesktopWindowIDs()
    
    Dim yukiCount As Integer
    Dim yukiWindowIDs As New Integer[]
    
    For yukiCount = 0 To Desktop.Count - 1
        yukiWindowIDs.Insert(getEachWorkspaceDesktopWindowIDs(yukiCount))
    Next
    
    $desktopWindowIDs = yukiWindowIDs.Copy()
    
End

Private Sub drawClippingRectangle(argPositionX As Integer)
    
    With Paint
        .Save()
        .Brush = .Color(Color.Transparent)
        .Rectangle(argPositionX, 0, Me.Span - 1 * MikuruUX.Grid, 3 * MikuruUX.Grid)
        .Stroke(True)
        .Clip()
    End With
    
End

Public Sub Refresh()
    
    Desktop.Windows.Refresh()
    setDesktopWindowIDs()
    Me._$drawingArea.Refresh()
    
End

Public Sub _InitializeDrawingArea()
    
    With Me._$drawingArea
        .Expand = True
        .Width = Me._$drawingArea.Parent.Width
        .Background = NagatoSettingsInfobar.LabelColor
    End With
    
End

Public Sub DrawingArea_Draw()
    
    Dim yukiCount As Integer
    Dim yukiDesktopWindow As DesktopWindow
    
    Paint.Begin(Me._$drawingArea)
        For yukiCount = 0 To $desktopWindowIDs.Max
            Try yukiDesktopWindow = New DesktopWindow($desktopWindowIDs[yukiCount])
            If Error Then Continue
            drawClippingRectangle(Me.Span * yukiCount)
            Paint.Brush = Paint.Color(Color.White)
            If yukiDesktopWindow.Icon Then
                Paint.DrawImage(yukiDesktopWindow.Icon.Stretch(Me.IconSize, Me.IconSize), 2 + Me.Span * yukiCount, 2)
            End If
            Paint.Text(yukiDesktopWindow.Name, 24 + Me.Span * yukiCount, 0, Me.Span - 24, 24, Align.Left)
            Paint.Fill()
            Paint.Restore()
        Next
    Paint.End()
    
Catch
    Return
    
End

Public Sub DrawingArea_MouseDown()
    
    Dim yukiDesktopWindow As DesktopWindow
    
    If Mouse.Right Then Return
    If $desktopWindowIDs.Count = 0 Then Return
    
    yukiDesktopWindow = New DesktopWindow($desktopWindowIDs[Mouse.X Div Me.Span])
    Desktop.Current = yukiDesktopWindow.Desktop
    yukiDesktopWindow.Activate()
    
Catch
    Return
    
End

Public Sub DrawingArea_Menu()
    
    Dim yukiDesktopWindow As New DesktopWindow($desktopWindowIDs[(Mouse.ScreenX - 36) Div Me.Span])
    Dim yukiMenu As New NagatoInfoIconBoxContextMenu(yukiDesktopWindow)
    
    yukiMenu.PopUp()
    
End

Private Function Span_Read() As Integer

    If $desktopWindowIDs.Count = 0 Then
        Return Me._$drawingArea.Width
    Else
        Return Me._$drawingArea.Width Div $desktopWindowIDs.Count
    End If

End

Private Function IconSize_Read() As Integer

    Return 3 * MikuruUX.Grid - 4

End
