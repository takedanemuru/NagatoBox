' Gambas class file

Private Const ThumbnailSize As Integer = 256

Private $sidePanelSize As Integer
Private $hBox As HBox
Private $sidePanel As SidePanel
Private $treeView As TreeView
Private $iconView As IconView

Event Select(argFullPath As String)

Private Sub addHBox(argParentContainer As Container)
    
    $hBox = New HBox(argParentContainer)
    
    With $hBox
        .Expand = True
    End With
    
End

Private Sub addSidePanel()
    
    $sidePanel = New SidePanel($hBox)
    
    With $sidePanel
        .Expand = False
        .Value = True
        .Arrangement = Arrange.Fill
        .Orientation = Align.Left
        .Width = $sidePanelSize
    End With
    
End

Private Sub addTreeView()
    
    $treeView = New TreeView($sidePanel) As "TreeView"
    
    With $treeView
        .Expand = True
    End With
    
End

Private Sub addIconView()
    
    $iconView = New IconView($hBox) As "IconView"
    
    With $iconView
        .Expand = True
    End With
    
End

Private Sub addDummyIcon(argParentDirectory As String)
    
    If Dir(argParentDirectory, "[^.]*", gb.Directory).Count > 0 Then
        $treeView.Add(argParentDirectory & "dummy", "",, argParentDirectory)
    Endif
    
End

Private Sub addTreeViewItem(argParentDirectory As String)
    
    Dim yukiPath As String
    Dim yukiChildPath As String
    
    With $treeView
        For Each yukiPath In Dir(argParentDirectory, "[^.]*", gb.Directory).Sort()
            yukiChildPath = argParentDirectory &/ yukiPath
            If .Exist(yukiChildPath) Then Continue
            .Add(yukiChildPath, yukiPath, Stock["medium/directory"], argParentDirectory)
            addDummyIcon(yukiChildPath)
        Next
    End With
    
End

Private Sub initializeTreeView()
    
    $treeView.Add(User.Home, ("Home"), Stock["medium/home"])
    addTreeviewItem(User.Home)
    $treeView[User.Home].Expanded = True
    
End

Private Sub refreshThumbnails()
    
    Dim yukiDirectoryPath As String = getCurrentDirectory()
    Dim yukiPath As String
    Dim yukiFullPath As String
    
    $iconView.Clear()
    
    For Each yukiPath In Dir(yukiDirectoryPath, "[^.]*", gb.File)
        yukiFullPath = yukiDirectoryPath &/ yukiPath
        If Not MikuruMimeType.IsImageFile(yukiFullPath) Then Continue
        $iconView.Add(yukiFullPath, yukiPath, NagatoImageThumbnailer.Get(yukiFullPath, ThumbnailSize))
    Next
    
End

Private Function getCurrentDirectory() As String
    
    Return IIf(Len($treeView.Key) > 3, $treeView.Key, User.Home)
    
End

Public Sub _new(argParentContainer As Container, Optional argSidePanelSize As Integer = 160)
    
    $sidePanelSize = argSidePanelSize
    addHBox(argParentContainer)
    addSidePanel()
    addTreeView()
    addIconView()
    initializeTreeView()
    refreshThumbnails()
    
End

Public Sub TreeView_Expand()
    
    If $treeView.Exist($treeView.Key & "dummy") Then
        $treeView.Remove($treeView.Key & "dummy")
        addTreeViewItem($treeView.Key)
    Endif
    
End

Public Sub TreeView_Activate()
    
    refreshThumbnails()
    
End

Public Sub TreeView_Click()
    
    refreshThumbnails()
    
End

Public Sub IconView_Activate()
    
    Raise Select($iconView.Key)
    
End
