' Gambas class file

Private $drawingArea As DrawingArea
Private $tasks As New NagatoTasks
Private $observer As Observer

Private Sub addDrawingArea(argContainer As Container)
    
    $drawingArea = New DrawingArea(argContainer) As "DrawingArea"
    
    With $drawingArea
        .Expand = True
    End With
    
End

Private Sub paintHighlightRectangle(argX As Integer, argWidth As Integer)
    
    Paint.Brush = Paint.Color(Color.Pink)
    Paint.Rectangle(argX, 0, argWidth, $drawingArea.H)
    Paint.Fill()
    
End

Private Sub paintTask(argWindow As DesktopWindow, argWidth As Integer, ByRef refX As Integer)
    
    Dim yukiText As String
    
    If (Desktop.ActiveWindow = argWindow.Id) Then paintHighlightRectangle(refX, argWidth)
    
    Paint.Brush = Paint.Color(Color.White)
    Paint.DrawImage(argWindow.Icon.Stretch(2 * MikuruUx.Grid, 2 * MikuruUx.Grid), refX + 4, 4)
    yukiText = MikuruCollapsedText.Get(argWindow.Name, $drawingArea.Font, argWidth - 3 * MikuruUx.Grid)
    Paint.Text(yukiText, refX + 3 * MikuruUx.Grid, 0, argWidth - 3 * MikuruUx.Grid, $drawingArea.H, Align.Left)
    refX += argWidth
    Paint.Fill()
    
Catch
    Debug "ignore"
    Return
    
End

Public Sub _new(argContainer As Container)
    
    addDrawingArea(argContainer)
    $observer = New Observer(NagatoTimer) As "Asakura"

End

Public Sub Asakura_Timer()
    
    $drawingArea.Refresh()
    
End

Public Sub DrawingArea_Draw()
    
    Dim yukiWidthDesktop As Integer = $drawingArea.W / Desktop.Count
    Dim yukiWidthWindow As Integer
    Dim yukiDesktop As Integer
    Dim yukiX As Integer
    Dim yukiWindow As DesktopWindow
    Dim yukiTasks As DesktopWindow[]
    
    If $tasks.Count = 0 Then Return
    
    Paint.Begin($drawingArea)
        For yukiDesktop = 0 To Desktop.Count - 1
            yukiTasks = $tasks.GetWindowsInDesktop(yukiDesktop)
            yukiX = yukiWidthDesktop * yukiDesktop
            If yukiTasks.Count = 0 Then Continue 
            yukiWidthWindow = yukiWidthDesktop / yukiTasks.Count
            For Each yukiWindow In yukiTasks
                paintTask(yukiWindow, yukiWidthWindow, ByRef yukiX)
            Next
        Next
    Paint.End()
    
Catch
    Return
    
End

Public Sub DrawingArea_MouseDown()
    
    Dim yukiDesktopWidth As Integer = CInt(($drawingArea.W / Desktop.Count))
    Dim yukiDesktop As Integer = CInt(Mouse.X / yukiDesktopWidth)
    Dim yukiWindows As DesktopWindow[]
    Dim yukiTaskIndex As Integer
    
    If yukiDesktop > Desktop.Count - 1 Then yukiDesktop = Desktop.Count - 1
    yukiWindows = $tasks.GetWindowsInDesktop(yukiDesktop) 
    If yukiDesktop <> Desktop.Current Then Desktop.Current = yukiDesktop
    
    If yukiWindows.Count > 0 Then
        yukiTaskIndex = CInt((Mouse.X - (yukiDesktopWidth * yukiDesktop)) / (yukiDesktopWidth / yukiWindows.Count))
        yukiWindows[yukiTaskIndex].Activate()
    Endif
    
Catch
    Return
    
End
