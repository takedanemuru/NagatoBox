' Gambas class file

Private $cache As New Collection

Public Sub SetEssentialData(argXmlElements As XmlElement[])
    
    $cache.Add(argXmlElements[0].Attributes["value"], MikuruWeatherKey.Temperature)
    $cache.Add(argXmlElements[1].Attributes["name"], MikuruWeatherKey.WindDirection)
    $cache.Add(argXmlElements[2].Attributes["mps"], MikuruWeatherKey.WindSpeed)
    $cache.Add(argXmlElements[3].Attributes["value"], MikuruWeatherKey.Humidity)
    $cache.Add(argXmlElements[4].Attributes["value"], MikuruWeatherKey.Pressure)
    $cache.Add(argXmlElements[5].Attributes["percent"], MikuruWeatherKey.Cloudiness)
    $cache.Add(argXmlElements[6].Attributes["percent"], MikuruWeatherKey.Fog)
    $cache.Add(argXmlElements[7].Attributes["percent"], MikuruWeatherKey.LowCloud)
    $cache.Add(argXmlElements[8].Attributes["percent"], MikuruWeatherKey.MediumCloud)
    $cache.Add(argXmlElements[9].Attributes["percent"], MikuruWeatherKey.HighCloud)
    
End

Public Sub SetAdditionalData(argXmlElements As XmlElement[])
    
    If $cache.Exist(MikuruWeatherKey.IconId) Then Return
    
    $cache.Add(argXmlElements[0].Attributes["value"], MikuruWeatherKey.Precipitation)
    $cache.Add(argXmlElements[argXmlElements.Max].Attributes["number"], MikuruWeatherKey.IconId)
    $cache.Add(argXmlElements[argXmlElements.Max].Attributes["id"], MikuruWeatherKey.IconName)
    
End

Public Sub _get(argKey As Integer) As Variant
    
    If argKey = MikuruWeatherKey.HasIcon Then
        Return $cache.Exist(MikuruWeatherKey.IconId)
    Else If argKey = MikuruWeatherKey.IconId Then
        If Not $cache.Exist(MikuruWeatherKey.IconId) Then Return 0
    End If
    
    Return $cache[argKey]
    
End
