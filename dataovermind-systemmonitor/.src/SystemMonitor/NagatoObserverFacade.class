' Gambas class file

Create Static

Property Read CpuUsage As Float
Property Read MemoryUsage As Float
Property Read SwapUsage As Float
Property Read ProcessCount As Integer
Property Read Activated As Boolean
Property Read CpuHistory As Float[]
Property Read MemoryHistory As Float[]
Property Read SwapHistory As Float[]
Property Read NetworkLoadTransmitTotal As Integer
Property Read NetworkLoadTransmitBps As Float
Property Read NetworkLoadReceiveTotal As Integer
Property Read NetworkLoadReceiveBps As Float

Private $timer As NagatoTimer
Private $cpu As New NagatoObserverCpu
Private $memory As New NagatoObserverMemory
Private $swap As New NagatoObserverSwap
Private $process As New NagatoObserverProcess
Private $networkload As New NagatoNetworkLoad

Public Sub Stop()
    
    $timer.Stop()
    
End

Public Sub Start()
    
    $timer = New NagatoTimer As "Asakura"
    
End

Public Sub Asakura_PrepStep()
    
    $cpu.SetPrevData()
    $networkload.Prep()
    
End

Public Sub Asakura_Step()
    
    $cpu.GetStep()
    $memory.GetStep()
    $swap.GetStep()
    $process.GetStep()
    $networkload.Step()
    
End

Private Function CpuUsage_Read() As Float

    Return $cpu.Usage

End

Private Function MemoryUsage_Read() As Float

    Return $memory.Usage
    
End

Private Function SwapUsage_Read() As Float

    Return $swap.Usage

End

Private Function Activated_Read() As Boolean

    Return $timer.Enabled

End

Private Function ProcessCount_Read() As Integer

    Return $process.Usage

End

Private Function CpuHistory_Read() As Float[]

    Return $cpu.History

End

Private Function MemoryHistory_Read() As Float[]

    Return $memory.History

End

Private Function SwapHistory_Read() As Float[]

    Return $swap.History

End

Private Function NetworkLoadTransmitTotal_Read() As Integer

    Return $networkload.ReceiveTotal

End

Private Function NetworkLoadTransmitBps_Read() As Float

    Return $networkload.TransmitBps

End

Private Function NetworkLoadReceiveTotal_Read() As Integer

    Return $networkload.ReceiveTotal

End

Private Function NetworkLoadReceiveBps_Read() As Float

    Return $networkload.ReceiveBps

End
