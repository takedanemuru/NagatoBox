' Gambas class file

Private Const Service As String = "org.gambas.dataovermind-systemmonitor"
Private Const ObjectPath As String = "/org/dataovermind/systemmonitor"
Private Const Interface As String = "org.gambas.dataovermind.systemmonitor.tfei"

Private $proxy As DBusProxy

Private Function getUserInputs(argMessage As String) As String[]
    
    Dim yukiInput As String
    
    Print argMessage
    
    Line Input yukiInput
    
    Return Split(yukiInput, " ", "", True)
    
End

Public Sub EnsureProxy() As Boolean
    
    Dim yukiInput As String[]
    
    If DBus.Session.Applications.Exist(Service) Then 
        $proxy = DBus[Service][ObjectPath, Interface]
        Return True
    End If
    
    yukiInput = getUserInputs(("YUKI.N > do you activate daemon ? [y/n]"))
    If yukiInput[0] = "y" Then 
        $proxy = DBus[Service][ObjectPath, Interface]
        Return True
    End If
    
Finally
    Return False
    
End

Public Sub ShowHardware()
    
    Dim yukiIndex As Integer
    Dim yukiMax As Integer = $proxy.ThermalCount - 1
    
    For yukiIndex = 0 To yukiMax
        Print Subst("Temperature &1 : &2", yukiIndex, $proxy.GetTemperature(yukiIndex) / 1000)
    Next
    
End

Public Sub ShowSystem()
    
    Print Format($proxy.CpuUsage, "CPU : #0.00%")
    Print Format($proxy.MemoryUsage, "Memory : #0.00%")
    Print Format($proxy.SwapUsage, "Swap : #0.00%")
    Print Format($proxy.ProcessCount, "Process : ###0")
    
End

Public Sub ShowNetwork()
    
    Print Format($proxy.NetworkReceiveBps, "Net Receive Speed : ##,###0 bps")
    Print Format($proxy.NetworkTransmitBps, "Net Transmit Speed : ##,###0 bps")
    Print Format($proxy.NetworkReceiveTotal, "Net Receive Total : ###,##0 byte")
    Print Format($proxy.NetworkTransmitTotal, "Net Receive Total : ###,##0 byte")
    
End

Public Sub ShowAll()
    
    Me.ShowSystem()
    Me.ShowNetwork()
    Me.ShowHardware()
    
End
