' Gambas class file

Create Static

Property LoginSoundMode As Integer
Property LoginSoundPath As String

Private $settings As New Settings

Public Sub LoadFormSettings(argForm As Form)
    
    argForm.Height = $settings[Subst$("&1/height", argForm.Name), argForm.Height]
    argForm.Width = $settings[Subst$("&1/width", argForm.Name), argForm.Width]
    argForm.X = $settings[Subst$("&1/x", argForm.Name), argForm.X]
    argForm.Y = $settings[Subst$("&1/y", argForm.Name), argForm.Y]
    
End

Public Sub SaveFormSettings(argForm As Form)
    
    $settings[Subst$("&1/height", argForm.Name)] = argForm.Height
    $settings[Subst$("&1/width", argForm.Name)] = argForm.Width
    $settings[Subst$("&1/x", argForm.Name)] = argForm.X
    $settings[Subst$("&1/y", argForm.Name)] = argForm.Y
    
    $settings.Save()
    
End

Public Sub LoadGridsSettings(argGrids As GridView)
    
    Dim yukiCount As Integer
    
    For yukiCount = 0 To argGrids.Columns.Max
        With argGrids.Columns[yukiCount]
            .Width = $settings[Subst$("&1/column&2width", argGrids.Name, yukiCount), .Width]
        End With
    Next
    
End

Public Sub SaveGridsSettings(argGrids As GridView)
    
    Dim yukiCount As Integer
    
    For yukiCount = 0 To argGrids.Columns.Max
        With argGrids.Columns[yukiCount]
            $settings[Subst$("&1/column&2width", argGrids.Name, yukiCount)] = .Width
        End With
    Next
    
    $settings.Save()
    
End

Private Function LoginSoundMode_Read() As Integer

    Return $settings["login_sound/mode", NagatoLoginSound.Choir]

End

Private Sub LoginSoundMode_Write(Value As Integer)

    $settings["login_sound/mode"] = Value
    $settings.Save()

End

Private Function LoginSoundPath_Read() As String

    Return $settings["login_sound/path", ""]

End

Private Sub LoginSoundPath_Write(Value As String)

    $settings["login_sound/path"] = Value
    $settings.Save()

End
