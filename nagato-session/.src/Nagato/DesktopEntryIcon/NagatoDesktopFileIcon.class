' Gambas class file

Private Const HicolorIcons As String = "/usr/share/icons/hicolor/32x32/apps"
Private Const PixmapIcons As String = "/usr/share/pixmaps"

Private $desktopFile As DesktopFile
Private $path As String

Private Function getIconPath(argDirectory As String) As String
    
    Dim yukiPath As String
    
    For Each yukiPath In RDir(argDirectory).Sort()
        If File.BaseName(yukiPath) <> File.BaseName($desktopFile.Icon) Then Continue
        Return (argDirectory &/ yukiPath)
    Next
    
    Return ""
    
End

Private Function getIconPathFormDesktopFileData(argPath As String) As String
    
    Dim yukiPath As String = PixmapIcons &/ File.BaseName(argPath) & ".png"

    If Exist(yukiPath) Then Return yukiPath
    If Exist(argPath) Then Return argPath
    
    Return ""
    
End

Private Function setPath()
    
    If $desktopFile.Icon Begins "/" Then $path = getIconPathFormDesktopFileData($desktopFile.Icon)
    If Not $path Then $path = getIconPath(HicolorIcons)
    If Not $path Then $path = getIconPath(PixmapIcons)
    
End

Public Function GetIcon(argSize As Integer) As Picture
    
    Dim yukiImage As Image
    
    If Not $path Then Return $desktopFile.GetIcon(argSize).Picture
    
    yukiImage = Image.Load($path)
    
    If Min(yukiImage.H, yukiImage.W) > argSize Then Return yukiImage.Stretch(argSize, argSize).Picture
    
    Return yukiImage.Picture
    
Finally
    Return MikuruIcon.Get("gear")
    
End

Public Sub _new(argDesktopFile As DesktopFile)
    
    $desktopFile = argDesktopFile
    setPath()
    
End
