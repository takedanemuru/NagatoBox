' Gambas class file

Property Read Exec As String
Property Read TryExec As String
Property Read Required As Boolean
Property Read Hide As Boolean
Property Read OnlyShowIn As String[]
Property Read NotShowIn As String[]

Private $exec As String
Private $tryExec As String
Private $onlyShowInList As New String[]
Private $notShowInList As New String[]
Private $hide As Boolean = False

Public Sub _new(argPath As String)
    
    Dim yukiStream As Stream
    Dim yukiLine As String
    
    yukiStream = Open (argPath) For Read
    
    While Not Eof(yukiStream)
        Line Input #yukiStream, yukiLine
        If yukiLine Begins "Exec" Then $exec = Replace$(yukiLine, "Exec=", "")
        If yukiLine Begins "TryExec" Then $tryExec = Replace$(yukiLine, "TryExec=", "")
        If yukiLine Begins "NotShowIn" Then $notShowInList = MikuruList["NotShowIn=", yukiLine]
        If yukiLine Begins "OnlyShowIn" Then $onlyShowInList = MikuruList["OnlyShowIn=", yukiLine]
        If yukiLine Begins "Hidden" Then $hide = (Replace$(yukiLine, "Hidden=", "") Like "true")
    Wend
    
    Close #yukiStream
    
End

Private Function Required_Read() As Boolean

    If $hide Then Return False
    If $onlyShowInList.Count > 0 And If Not $onlyShowInList.Exist(NagatoSettingsSession.TargetDE) Then Return False
    If $notShowInList.Exist(NagatoSettingsSession.TargetDE) Then Return False
    
    Return True

End

Private Function Exec_Read() As String

    Return $exec

End

Private Function TryExec_Read() As String

    Return $tryExec

End

Private Function Hide_Read() As Boolean

    Return $hide

End

Private Function OnlyShowIn_Read() As String[]

    Return $onlyShowInList

End

Private Function NotShowIn_Read() As String[]

    Return $notShowInList

End
