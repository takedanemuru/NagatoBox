' Gambas class file

Property Read All As NagatoAutostartFile[]
Property Read DesktopTypes As String[]

Private $autostartFiles As New NagatoAutostartFile[]
Private $directory As String

Private Sub execute(argAutostartFile As NagatoAutostartFile)
    
    If argAutostartFile.Exec = "" Then Return
    Try Shell argAutostartFile.Exec
    If Error Then Try Shell argAutostartFile.TryExec
    
End

Public Function ExecuteAll() 
    
    Dim yukiAutostartFile As NagatoAutostartFile
    
    For Each yukiAutostartFile In $autostartFiles
        If yukiAutostartFile.Overridden Then Continue
        If Not yukiAutostartFile.Required Then Continue
        execute(yukiAutostartFile)
    Next
    
End

Private Sub reloadData()
    
    Dim yukiPath As String
    
    For Each yukiPath In Dir($directory).Sort(gb.Natural + gb.IgnoreCase)
        $autostartFiles.Add(Object.New("NagatoAutostartFile", [$directory &/ yukiPath]))
    Next
    
End

Public Sub _new(argDirectory As String)
    
    $directory = argDirectory
    reloadData()
    
End

Private Function All_Read() As NagatoAutostartFile[]

    Return $autostartFiles

End

Private Function DesktopTypes_Read() As String[]

    Dim yukiAutostartFile As NagatoAutostartFile
    Dim yukiData As New NagatoUniqueArray
    
    For Each yukiAutostartFile In $autostartFiles
        yukiData.Add(yukiAutostartFile.NotShowIn)
        yukiData.Add(yukiAutostartFile.OnlyShowIn)
    Next
    
    Return yukiData.Data
    
End
