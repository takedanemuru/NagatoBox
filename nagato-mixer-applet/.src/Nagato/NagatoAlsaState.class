' Gambas class file

Create Static

Property Read Channel As String
Property Read Volume As Integer
Property Read Text As String

Private $channel As String
Private $volume As Integer

Event Changed(argVolume As Integer)
Event Changed2

Private Function getAlsaVolume(argChannel As String) As Integer[] ' as percentage
        
        Dim yukiOutput As String
        Dim yukiResult As String[]
        
        Shell Subst$("amixer get &1 | egrep -o &2", argChannel, Quote$("[0-9]+%")) To yukiOutput
        
        yukiResult = Split(Replace$(yukiOutput, "%", ""), "\n", "", True)
        
        Return yukiResult
        
Catch
        Return Null
        
End

Private Sub setChannel()
    
    If getAlsaVolume("Master").Count > 0 Then
        $channel = "Master"
    Else If getAlsaVolume("PCM").Count > 0 Then
        $channel = "PCM"
    Else
        Return
    End If
    
End

Public Sub SetVolume(argVolume As Integer, Optional argShowDialog As Boolean = True)
    
    Dim yukiOutput As String ' NOTE : to avoid redirect to standard output.
    
    Try Shell Subst$("amixer sset &1 &2%", NagatoAlsaState.Channel, argVolume) To yukiOutput
    
    If argShowDialog Then HaruhiVolumeDialog.Show()
    If argShowDialog Then Raise Changed2
    
    $volume = argVolume
    
    Raise Changed($volume)
    
End

Public Sub Activate()
    
    setChannel()
    $volume = getAlsaVolume($channel)[0]
    
End

Private Function Channel_Read() As String

    Return $channel

End

Private Function Volume_Read() As Integer

    $volume = getAlsaVolume($channel)[0]

    Return $volume

End

Private Function Text_Read() As String

    Return Subst$("&1 : &2%", $channel, $volume)

End
