' Gambas class file

Private $fileStore As NagatoFileStore
Private $iconView As NagatoIconView

Private Sub initializeTypeComboBox()
    
    With TypeComboBox
        .List = MikuruArchiveType.List
        .ReadOnly = True
    End With
    
End

Private Sub checkExtension(argPath As String) As String
    
    Debug File.Ext(argPath)
    
    Return argPath
    
End

Public Sub SetPaths(argPaths As String[])
    
    $fileStore.SetPaths(argPaths)
    
End

Public Sub _new()

    initializeTypeComboBox()

    $iconView = New NagatoIconView(FilesIconView) As "IconView"
    $fileStore = New NagatoFileStore As "FileStore"

End

Public Sub Form_Open()

    Me.Center()
    OpenFilesButton.Picture = MikuruIcon["folder"]
    ClearButton.Picture = MikuruIcon["bin"]
    AboutButton.Picture = MikuruIcon["information-balloon"]
    TypeComboBox.Index = 0
    $iconView.SetEmptyView()
    
End

Public Sub OpenFilesButton_Click()

    Dialog.Title = ("Open file")
    Dialog.Path = User.Home

    If Not Dialog.OpenFile(True) Then
        $fileStore.SetPaths(Dialog.Paths)
    Endif

End

Public Sub IconView_Drop(argPaths As String[])

    $fileStore.SetPaths(argPaths)
    
End

Public Sub ClearButton_Click()

    $fileStore.Clear()

End

Public Sub ApplyButton_Click()

    If $iconView.IsEmpty Then Return 
    
    Dialog.Title = ("Set path to create")
    Dialog.Path = MikuruSafePath.Get(User.Home &/ ("new_archive") & MikuruArchiveType[TypeComboBox.Index])
    
    If Not Dialog.SaveFile() Then 
        NagatoPatool.Create($fileStore.PathsInLine, checkExtension(Dialog.Path))
    End If

End

Public Sub FileStore_New(argPaths As String[])
    
    $iconView.Add(argPaths)
    
End

Public Sub FileStore_Remove(argPaths As String[])
    
    $iconView.Remove(argPaths)
    
End

Public Sub FileStore_Clear()
    
    $iconView.SetEmptyView()
    
End

Public Sub AboutButton_Click()

    HaruhiAbout.ShowDialog()

End
