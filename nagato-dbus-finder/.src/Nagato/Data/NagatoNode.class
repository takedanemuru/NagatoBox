' Gambas class file

Private $service As String
Private $key As String
Private $xml As XmlDocument

Private Sub setInterfaces()
    
    Dim yukiElement As XmlElement
    Dim yukiName As String
    Dim yukiInterface As NagatoInterface
    
    For Each yukiElement In $xml.GetElementsByTagName("interface")
        yukiName = yukiElement.Attributes["name"]
        yukiInterface = New NagatoInterface($key, yukiName, yukiElement)
    Next
    
End

Private Sub setNodes()
    
    Dim yukiElement As XmlElement
    Dim yukiName As String
    Dim yukiNode As NagatoNode
    
    For Each yukiElement In $xml.GetElementsByTagName("node")
        If yukiElement = $xml.Root Then Continue
        yukiName = yukiElement.Attributes["name"]
        If yukiName <> "" Then yukiNode = New NagatoNode($service, $key, yukiName)
    Next
    
End

Private Sub addTreeViewItem(argParent As String, argName As String)
    
    If Not $key Then Return
    
    If HaruhiMain.TreeView1.Exist($key) Then Return
    
    HaruhiMain.TreeView1.Add($key, $key, MikuruIcon.Get("folder"))
    
    ' Select Case argParent
    '     Case ""
    '         'do nothing
    '     Case "/"
    '         HaruhiMain.TreeView1.Add($key, argName, MikuruIcon.Get("folder"))
    '     Default
    '         HaruhiMain.TreeView1.Add($key, argName, MikuruIcon.Get("folder"), argParent)
    ' End Select
    
End

Private Function isAccessable() As Boolean
    
    If MikuruGDBus.Mode = MikuruGDBus.ModeSession Then
        If DBus["Session://" & $service]._Introspect($key) = "" Then Return False
    Else
        If DBus["System://" & $service]._Introspect($key) = "" Then Return False
    Endif
    
    Return True
    
End

Public Sub _new(argService As String, argParent As String, argName As String)
    
    $key = argParent &/ argName
    $service = argService
    
    If isAccessable() Then
        HaruhiMain.AddNode($key)
        'addTreeViewItem(argParent, argName)
        $xml = MikuruGDBus.Get(argService, $key)
        setInterfaces()
        setNodes()
    End If
    
End
