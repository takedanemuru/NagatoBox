' Gambas module file

Private Function getTypeText(argTest As String) As String
    
    Dim yukiTypeText As String
    
    If argTest = "a{" Then Return "Dict of ("
    If argTest Begins "{" Then Return ""
    If argTest Begins "}" Then Return IIf(argTest Not Ends "}", "), ", ")")

    yukiTypeText = IIf(argTest Begins "a", Me.Get(argTest), Me.Get(String.Left(argTest, 1)))

    Return IIf(argTest Not Ends "}", yukiTypeText & ", ", yukiTypeText)

End

Private Function getDict(argType As String) As String
    
    Dim yukiDict As String 
    Dim yukiIndex As Integer = 1
    
    Do
        yukiDict &= getTypeText(String.Mid(argType, yukiIndex, 2))
        Inc yukiIndex
    Loop Until yukiIndex = String.Len(argType)
    
    Return yukiDict & ")"
    
End

Private Function sanitizeText(argString As String) As String
    
    argString = Replace$(argString, "(", "{")
    argString = Replace$(argString, ")", "}")
    
    Return argString
    
End

Public Function Get(argType As String) As String
    
    argType = sanitizeText(argType)
    
    If argType Begins "a{" Then Return getDict(argType)
    If argType Begins "{" Then Return "Dict of (" & getDict(argType)
    If argType Begins "a" Then Return MikuruDBusDataTypeDict[Right$(argType)] & "[]"
    
    Return MikuruDBusDataTypeDict[argType]
    
End

