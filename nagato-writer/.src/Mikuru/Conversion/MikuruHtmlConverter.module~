' Gambas module file

Property Read TempFile As String
Property Read TempFileUrl As String
Property Read Source As String
Property Read TempFileRelative As String

Private $workingPath As String
Private $workingPathRelative As String
Private $sourceText As String

Private $workinPathHandler As New NagatoWorkingFile

' Private Sub resetWorkingPath()
'     
'     If Exist($workingPath) Then Kill $workingPath ' kill OLD $workingPath
'     $workingPath = Temp$() & ".html"
'     If Exist(Me.TempFile) Then Kill Me.TempFile
'     
' End
' 
Private Sub resetWorkingPathRelative()
    
    If Exist($workingPathRelative) Then Kill $workingPathRelative ' kill OLD $workingPath
    $workingPathRelative = Temp$() & ".html"
    If Exist($workingPathRelative) Then Kill $workingPathRelative
    
End

Private Sub convert(argSourcePath As String, argTargetPath As String)
    
    Dim yukiCss As String = Subst$("--css=&1", NagatoCss.Get())
    
    Exec ["pandoc", "-f", "markdown_github", "-t", "html5", yukiCss, argSourcePath, "-o", argTargetPath] Wait
    
End

' Private Sub setWorkingFile(argSourceText As String)
'     
'     Dim yukiSourcePath As String = Temp$()
'     
'     $sourceText = argSourceText
' 
'     resetWorkingPath()
'     File.Save(yukiSourcePath, MikuruMacro.Set(argSourceText))
'     convert(yukiSourcePath, $workingPath)
'     
' End

Private Sub setWorkingFileRelative(argSourceText As String)
    
    Dim yukiTempPath As String = Temp$()
    
    $sourceText = argSourceText

    resetWorkingPathRelative()    
    File.Save(yukiTempPath, MikuruMacro.ConvertToRelative(argSourceText))
    convert(yukiTempPath, $workingPathRelative)
    
End

Public Sub ToHtmlDirect(argSourceText As String)

    $sourceText = argSourceText
    $workinPathHandler.Set(argSourceText)

    'setWorkingFile(argSourceText)
    
End

Private Function TempFile_Read() As String

    'Return $workingPath
    
    Return $workinPathHandler.WorkingPath

End

Private Function TempFileUrl_Read() As String

    'Return Media.URL($workingPath)

    Return $workinPathHandler.WorkingUrl

End

Private Function Source_Read() As String

    Return $sourceText

End

Private Function TempFileRelative_Read() As String

    setWorkingFileRelative($sourceText)

    Return $workingPathRelative

End
