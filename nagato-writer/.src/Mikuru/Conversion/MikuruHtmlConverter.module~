' Gambas module file

Property Read TempFile As String
Property Read TempFileUrl As String
Property Read Source As String
Property Read TempFileRelative As String

Private $workingPathRelative As String
Private $sourceText As String

Private $workinPathAbsolute As New NagatoWorkingFile
Private $workinPathRelativeHandler As New NagatoWorkingFileRelative

' Private Sub resetWorkingPathRelative()
'     
'     If Exist($workingPathRelative) Then Kill $workingPathRelative ' kill OLD $workingPath
'     $workingPathRelative = Temp$() & ".html"
'     If Exist($workingPathRelative) Then Kill $workingPathRelative
'     
' End
' 
' Private Sub convert(argSourcePath As String, argTargetPath As String)
'     
'     Dim yukiCss As String = Subst$("--css=&1", NagatoCss.Get())
'     
'     Exec ["pandoc", "-f", "markdown_github", "-t", "html5", yukiCss, argSourcePath, "-o", argTargetPath] Wait
'     
' End
' 
' Private Sub setWorkingFileRelative(argSourceText As String)
'     
'     Dim yukiTempPath As String = Temp$()
'     
'     resetWorkingPathRelative()    
'     File.Save(yukiTempPath, MikuruMacro.ConvertToRelative(argSourceText))
'     convert(yukiTempPath, $workingPathRelative)
'     
' End

Public Sub ToHtmlDirect(argSourceText As String)

    $sourceText = argSourceText
    $workinPathAbsolute.Set(argSourceText)

End

Private Function TempFile_Read() As String

    Return $workinPathAbsolute.WorkingPath

End

Private Function TempFileUrl_Read() As String

    Return $workinPathAbsolute.WorkingUrl

End

Private Function Source_Read() As String

    Return $sourceText

End

Private Function TempFileRelative_Read() As String

    'setWorkingFileRelative($sourceText)
    $workinPathRelativeHandler.Set($sourceText)

    Return $workinPathRelativeHandler.WorkingPath

End
