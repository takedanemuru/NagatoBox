' Gambas class file

Private $menuPanel As NagatoMenuPanel
Private $sourceEditor As NagatoSourceEditor
Private $previewer As NagatoPreviewer

Private Sub appEvent(argEvent As Integer)
    
    Select Case argEvent
        Case MikuruSignal.AppAbout
            HaruhiAbout.ShowDialog()
        Case MikuruSignal.AppQuit
            Me.Close() ' This method calls Form_Close()
    End Select
    
End

Public Sub SetPath(argPath As String)
    
    $sourceEditor.FileEvent(MikuruSignal.FileOpenPath, [argPath])
    
End

Public Sub _new()

    Application.MainWindow = Me

End

Public Sub Form_Open()

    NagatoSettings.LoadFormSettings(Me)

    $menuPanel = New NagatoMenuPanel(MenuPanelContainer) As "TFEI"
    $sourceEditor = New NagatoSourceEditor(MainContainer) As "TFEI"
    $previewer = New NagatoPreviewer(MainContainer) ' has no user control

End

Public Sub Form_Close()
    
    Select Case $sourceEditor.GetSaveStatus()
        Case $sourceEditor.ResponseHasBeenSaved, $sourceEditor.ResponseDiscard
            NagatoSettings.SaveFormSettings(Me)
            Message.Info(("YUKI.N > I as indivisual also desire you to return... "), ("OK"))
        Case $sourceEditor.ResponseSaved
            NagatoSettings.SaveFormSettings(Me)
            Message.Info(("YUKI.N > Document successfully saved."), ("OK"))
        Case $sourceEditor.ResponseCancel
            Stop Event
    End Select
    
End

Public Sub TFEI_Signal(argEvent As Integer, argArgs As Variant[])
    
    Debug argEvent
    
    Select Case argEvent
        Case MikuruSignal.FileNone To MikuruSignal.FileNone + 999
            $sourceEditor.FileEvent(argEvent, argArgs)
        Case MikuruSignal.PublishNone To MikuruSignal.PublishNone + 999
            If argEvent = MikuruSignal.PublishDzslidePreview
                HaruhiSlidePreview.Set($sourceEditor.Text)
                HaruhiSlidePreview.Show()
            Else
                MikuruPublisher($sourceEditor.Text, argEvent, $sourceEditor.Format)
            End If
        Case MikuruSignal.ViewPreview
            $previewer.Refresh($sourceEditor.Text, $sourceEditor.Format)
        Case MikuruSignal.EditNone To MikuruSignal.EditNone + 999
            $sourceEditor.EditEvent(argEvent, argArgs)
        Case MikuruSignal.AppNone To MikuruSignal.AppNone + 999
            appEvent(argEvent)
    End Select
    
End
