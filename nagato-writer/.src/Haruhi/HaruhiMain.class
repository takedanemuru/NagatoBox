' Gambas class file

Private $menuPanel As NagatoMenuPanel
Private $sourceEditor As NagatoSourceEditor
Private $previewer As NagatoPreviewer
Private $publisher As New NagatoPublisherFacade
Private $observer As Observer

Private Sub appEvent(argEvent As Integer)
    
    Select Case argEvent
        Case MikuruSignal.AppAbout
            HaruhiAbout.ShowDialog()
        Case MikuruSignal.AppQuit
            Me.Close() ' This method calls Form_Close()
    End Select
    
End

Public Sub SetPath(argPath As String)
    
    Me.Title = File.Name(argPath)
    $sourceEditor.FileEvent(MikuruSignal.FileOpenPath, [argPath])
    
End

Public Sub _new()

    Application.MainWindow = Me
    $observer = New Observer(NagatoSettingsView) As "Asakura"

End

Public Sub Form_Open()

    $menuPanel = New NagatoMenuPanel(MenuPanelContainer) As "TFEI"
    $sourceEditor = New NagatoSourceEditor(MainContainer) As "TFEI"
    $previewer = New NagatoPreviewer(MainContainer) ' has no user control

End

Public Sub Form_Close()
    
    Select Case $sourceEditor.GetSaveStatus()
        Case NagatoAppClosure.ResponseHasBeenSaved, NagatoAppClosure.ResponseDiscard
            NagatoSettings.SaveFormSettings(Me)
            Message.Info(("YUKI.N > I as indivisual also desire you to return... "), ("OK"))
        Case NagatoAppClosure.ResponseSaved
            NagatoSettings.SaveFormSettings(Me)
            Message.Info(("YUKI.N > Document successfully saved."), ("OK"))
        Case NagatoAppClosure.ResponseCancel
            Stop Event
    End Select
    
End

Public Sub TFEI_Signal(argEvent As Integer, argArgs As Variant[])
    
    Select Case argEvent
        Case MikuruSignal.FileNone To MikuruSignal.FileNone + 999
            $sourceEditor.FileEvent(argEvent, argArgs)
        Case MikuruSignal.PublishNone To MikuruSignal.PublishNone + 999
            $publisher(argEvent, $sourceEditor.Path)
        Case MikuruSignal.ViewPreview
            $previewer.Refresh($sourceEditor.Text)
        Case MikuruSignal.ViewMoveToBottom
            $previewer.MoveToTag(MikuruHtmlConverter.BottomId)
        Case MikuruSignal.ViewMoveTag
            If argArgs[0] >= 0 Then $previewer.MoveToTag(MikuruHtmlConverter.IDs[argArgs[0]])
        Case MikuruSignal.EditNone To MikuruSignal.EditNone + 999
            $sourceEditor.EditEvent(argEvent, argArgs)
        Case MikuruSignal.AppNone To MikuruSignal.AppNone + 999
            appEvent(argEvent)
    End Select
    
End

Public Sub Asakura_RequestReload()
    
    $sourceEditor.FileEvent(MikuruSignal.FileSave, Null)
    
End
