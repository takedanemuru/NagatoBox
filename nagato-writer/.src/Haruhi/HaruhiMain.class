' Gambas class file

Private $menuPanel As NagatoMenuPanel
Private $sourceEditor As NagatoSourceEditor
Private $previewer As NagatoPreviewer
Private $publisher As New NagatoPublisherFacade
Private $observer As Observer

Private Sub reloadPreview(argEvent As Integer, argArgs As Variant[])
    
    If Not HaruhiWebView.Closed Then MainContainer.Layout = [1, 1]
    If Not HaruhiWebView.Closed Then HaruhiWebView.Close()
    $previewer(argEvent, argArgs, $sourceEditor.Text)
    
End

Private Sub reloadStandAlonePreview(argEvent As Integer, argArgs As Variant[])
    
    MainContainer.Layout = [1, 0]
    HaruhiWebView(argEvent, argArgs, $sourceEditor.Text)
    
End

Public Sub SetPath(argPath As String)
    
    Me.Title = File.Name(argPath)
    $sourceEditor.FileEvent(MikuruSignal.FileOpenPath, [argPath])
    
End

Public Sub _new()

    Application.MainWindow = Me

End

Public Sub Form_Open()

    $menuPanel = New NagatoMenuPanel(MenuPanelContainer) As "TFEI"
    $sourceEditor = New NagatoSourceEditor(MainContainer) As "TFEI"
    $previewer = New NagatoPreviewer(MainContainer) ' has no user control
    $observer = New Observer(NagatoSettingsView) As "Asakura"

    If NagatoSettings.UseSeparatePreviewForm Then MainContainer.Layout = [1, 0]

End

Public Sub Form_Close()
    
    Select Case $sourceEditor.GetSaveStatus()
        Case NagatoAppClosure.ResponseHasBeenSaved, NagatoAppClosure.ResponseDiscard
            NagatoSettingsForm.Save(Me)
            Message.Info(("YUKI.N > I as indivisual also desire you to return... "), ("OK"))
        Case NagatoAppClosure.ResponseSaved
            NagatoSettingsForm.Save(Me)
            Message.Info(("YUKI.N > Document successfully saved."), ("OK"))
        Case NagatoAppClosure.ResponseCancel
            Stop Event
    End Select
    
End

Public Sub TFEI_Signal(argEvent As Integer, argArgs As Variant[])
    
    Select Case argEvent
        Case MikuruSignal.FileNone To MikuruSignal.FileNone + 999
            $sourceEditor.FileEvent(argEvent, argArgs)
        Case MikuruSignal.PublishNone To MikuruSignal.PublishNone + 999
            $publisher(argEvent, $sourceEditor.Path)
        Case MikuruSignal.ViewNone To MikuruSignal.ViewNone + 999
            If NagatoSettings.UseSeparatePreviewForm Then reloadStandAlonePreview(argEvent, argArgs)
            If Not NagatoSettings.UseSeparatePreviewForm Then reloadPreview(argEvent, argArgs)
        Case MikuruSignal.EditNone To MikuruSignal.EditNone + 999
            $sourceEditor.EditEvent(argEvent, argArgs)
    End Select
    
End

Public Sub Asakura_SettingsChanged()
    
    $sourceEditor.FileEvent(MikuruSignal.FileSave, Null)
    
End
