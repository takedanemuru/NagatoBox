' Gambas class file

Inherits NagatoWidgetHandler

Private Function getCurrentPositionInUTF8(argQuery As String) As Integer ' read comment about return value.
    
    ' this function should return -1 when there's no matching word.
    
    Dim yukiSearchStartFrom As Integer = String.Len(Left$(Me._$widget.Text, Me._$widget.Pos))
    Dim yukiPosition As Integer = String.InStr(Me._$widget.Text, argQuery, yukiSearchStartFrom + 1, gb.IgnoreCase)

    'retry searching form beginning of the text when String.Instr couldn't find any matching.
    Me._$widget.pos = 1
    If yukiPosition = 0 Then yukiPosition = String.InStr(Me._$widget.Text, argQuery, 0, gb.IgnoreCase)
    
    Return yukiPosition - 1
    
End

Private Function getCurrentPositionInUTF8Back(argQuery As String) As Integer ' read comment about return value.
    
    ' this function should return -1 when there's no matching word.
    
    Dim yukiSearchStartFrom As Integer = String.Len(Left$(Me._$widget.Text, Me._$widget.Pos)) - String.Len(argQuery)
    Dim yukiPosition As Integer = yukiSearchStartFrom 
    
    Do
        If String.Mid(Me._$widget.Text, yukiPosition) Begins argQuery Then Return yukiPosition - 1
        Dec yukiPosition
        If yukiPosition = yukiSearchStartFrom Then Return -1
        If 0 >= yukiPosition Then yukiPosition = String.Len(Me._$widget.Text)
    Loop
    
End

Public Sub SearchText(argText As String)
    
    Dim yukiStartPosition As Integer = getCurrentPositionInUTF8(argText)
    
    If yukiStartPosition = -1 Then Return
    
    Me._$widget.Select(yukiStartPosition, String.Len(argText))
    
End

Public Sub SearchTextBack(argText As String)
    
    Dim yukiStartPosition As Integer = getCurrentPositionInUTF8Back(argText)
    
    If yukiStartPosition = -1 Then Return
    
    Me._$widget.Select(yukiStartPosition, String.Len(argText))
    
End

Public Sub ReplaceOne(argQuery As String, argReplacement As String)
    
    If MikuruText.GetReplacementCount(Me._$widget.Text, argQuery) = 0 Then
        Message.Error(("Query not found"))
        Return
    Endif
    
    If Me._$widget.Selection.Text = argQuery Then
        Me._$widget.Selection.Text = argReplacement
    Else
        Me.SearchText(argQuery)
    Endif
    
End

Public Sub ReplaceAll(argTarget As String, argReplacement As String)
    
    Dim yukiCount As Integer = MikuruText.GetReplacementCount(Me._$widget.Text, argTarget)
    
    If yukiCount = 0 Then
        Message.Error(("Query not found"))
    Else
        If 2 = Message.Question(Subst$(("&1 found, replace them all ?"), yukiCount), ("Cancel"), ("Replace All")) Then
            Me._$widget.Text = Replace$(Me._$widget.Text, argTarget, argReplacement, gb.IgnoreCase)
        Endif
    Endif
    
End
