' Gambas class file

Inherits NagatoUxContainer

Property Text As String

Private $textArea As NagatoTextAreaHandler
Private $keyboardHandler As NagatoTextAreaKeyboard
Private $searchAndReplace As NagatoTextAreaSearchAndReplace
Private $insertListHeaders As NagatoTextAreaInsertListHeaders
Private $insertImagePath As NagatoTextAreaInsertImagePath
Private $observer As Observer

Public Sub _initialize() ' override
    
    $textArea = New NagatoTextAreaHandler(Me._$parentContainer) As "TFEI"
    $insertListHeaders = New NagatoTextAreaInsertListHeaders($textArea.TextArea)
    $keyboardHandler = New NagatoTextAreaKeyboard($textArea.TextArea) As "TFEI"
    $searchAndReplace = New NagatoTextAreaSearchAndReplace($textArea.TextArea) As "TFEI"
    $insertImagePath = New NagatoTextAreaInsertImagePath($textArea.TextArea) 
    $observer = New Observer(HaruhiReplacement) As "Asakura"
    
End

Public Sub InsertBullets()
    
    $insertListHeaders.InsertBullets()
    
End

Public Sub InsertNembers()
    
    $insertListHeaders.InsertNembers()
    
End

Public Sub InsertImagePathRelative(argCurrentPath As String)
    
    $insertImagePath.InsertImagePathRelative(argCurrentPath)
    
End

Public Sub InsertImageAbsolute(argCurrentPath As String)
    
    $insertImagePath.InsertImageAbsolute(argCurrentPath)
    
End

Public Sub InsertUrlTemplate()
    
    $textArea.Insert("[title](http://www.somewhere.com)")
    
End

Public Sub MoveToLine(argLine As Integer)
    
    $textArea.MoveToLine(argLine)
    
End

Public Sub Asakura_SignalStringTag(argTag As String, argValues As Variant[])
    
    Select Case argTag
        Case "Previous"
            $searchAndReplace.SearchTextBack(argValues[0])
        Case "Next"
            $searchAndReplace.SearchText(argValues[0])
        Case "Replace"
            $searchAndReplace.ReplaceOne(argValues[0], argValues[1])
        Case "ReplaceAll"
            $searchAndReplace.ReplaceAll(argValues[0], argValues[1])
    End Select
    
End

Public Sub Asakura_Opened()
    
    HaruhiReplacement.X = $textArea.DialogPosition.X
    HaruhiReplacement.Y = $textArea.DialogPosition.Y
    
End

Private Function Text_Read() As String

    Return $textArea.Text

End

Private Sub Text_Write(Value As String)

    $textArea.SetTextWithNoSignal(Value)

End
