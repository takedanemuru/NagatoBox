' Gambas class file

Create Static

Property TabSize As Integer
Property LivePreview As Boolean
Property Read RecentFiles As String[]

Private Const DefaultTabSize As Integer = 4

Private $settings As New Settings

Public Sub LoadFormSettings(argForm As Form)
    
    With argForm
        .X = $settings[Subst$("&1/x", argForm.Name), Screen.H * 0.125]
        .Y = $settings[Subst$("&1/y", argForm.Name), Screen.W * 0.125]
        .H = $settings[Subst$("&1/h", argForm.Name), Screen.H * 0.75]
        .W = $settings[Subst$("&1/w", argForm.Name), Screen.W * 0.75]
    End With
    
End

Public Sub SaveFormSettings(argForm As Form)
    
    With argForm
        $settings[Subst$("&1/x", argForm.Name)] = .X
        $settings[Subst$("&1/y", argForm.Name)] = .Y
        $settings[Subst$("&1/h", argForm.Name)] = .H
        $settings[Subst$("&1/w", argForm.Name)] = .W
    End With
    
    $settings.Save()
    
End

Public Sub PushRecentPath(argPath As String)
    
    Dim yukiRecentPaths As String[] = MikuruPaths.RemoveInvalid(Me.RecentFiles)
    
    If Not Exist(argPath) Then Return
    
    If Not yukiRecentPaths Then yukiRecentPaths = New String[]
    
    If yukiRecentPaths.Exist(argPath) Then yukiRecentPaths.Remove(yukiRecentPaths.Find(argPath))
    yukiRecentPaths.Add(argPath, 0)
    yukiRecentPaths.Resize(20)
    
    $settings["file/recent"] = yukiRecentPaths
    $settings.Save()
    
End

Private Function TabSize_Read() As Integer

    Return $settings["editor/tab_size", DefaultTabSize]

End

Private Sub TabSize_Write(Value As Integer)

    $settings["editor/tab_size"] = Value
    $settings.Save()

End

Private Function LivePreview_Read() As Boolean

    Return $settings["preview/live", True]

End

Private Sub LivePreview_Write(Value As Boolean)

    $settings["preview/live"] = Value
    $settings.Save()

End

Private Function RecentFiles_Read() As String[]

    Return MikuruPaths.RemoveInvalid($settings["file/recent", Null])

End
