' Gambas module file

Private $currentDirectory As String
Private $paths As String[]
Private $max As Integer

Private Sub delete(argMin As Integer, argMax As Integer)
    
    Dim yukiIndex As Integer
    Dim yukiDelete As New NagatoDelete
    
    For yukiIndex = argMin To argMax
        If yukiIndex > $max Then Break
        yukiDelete.Add($currentDirectory &/ $paths[yukiIndex])
    Next
    
    yukiDelete.Dialog()
    
End

Private Sub deleteSelection()
    
    Dim yukiIndex As Integer
    Dim yukiDelete As New NagatoDelete
    
    For Each yukiIndex In MikuruUserInput.Numbers
        If yukiIndex > $max Then Continue
        yukiDelete.Add($currentDirectory &/ $paths[yukiIndex])
    Next
    
    yukiDelete.Dialog()
    
End

Private Function setVariables(argCurrentDirectory As String, argFileNames As String[]) As Boolean
    
    If argFileNames.Count = 0 Then Return False
    If MikuruUserInput.Numbers.Count = 0 Then Return False
    
    $currentDirectory = argCurrentDirectory
    $paths = argFileNames
    $max = $paths.Max
    
    Return True
    
End

Public Sub _call(argCurrentDirectory As String, argFileNames As String[])
    
    If Not setVariables(argCurrentDirectory, argFileNames) Then Return
    
    With MikuruUserInput
        If .Has("to") And If .Numbers.Count >= 2 Then 
            delete(.NumbersMin, .NumbersMax)
        Else If .Has("until") Then
            delete(0, .NumbersMin - 1)
        Else If .Has("over") Then
            delete(.NumbersMax + 1, $max)
        Else 
            deleteSelection()
        Endif
    End With
    
End
