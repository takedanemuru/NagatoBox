' Gambas class file

Create Static

Private $paths As New NagatoPaths

Private Sub makeDirectory()
    
    If Not MikuruUserInput("YUKI.N > Input directory name.") Then Return
    
    MikuruDirectory.New($paths.CurrentDirectory, MikuruUserInput.All)
    
    MikuruDialog.Show("YUKI.N > New directory created. Press [ENTER] to continue.")
    
End

Private Sub catchCommand(argDirectory As String) As Boolean ' Return True when Break
    
    $paths.ClearFilter()
    
    MikuruUserInput(Subst$("YUKI.N > We are in &1, Where do you want to go ?", $paths.CurrentDirectory))
    
    With MikuruUserInput
        If .Include(["here", "term", "terminal"]) Or If .CompleteMatch(["open", "terminal"]) Then
            NagatoGuake.AddTab($paths.CurrentDirectory)
        Else If .Has("up") Then
            $paths.Up()
        Else If .Include(["break", "back", "escape", "esc"]) Then
            Return True
        Else If .CompleteMatch(["show", "hidden"]) Then
            $paths.ShowHidden = True
        Else If .CompleteMatch(["hide", "hidden"]) Then
            $paths.ShowHidden = False
        Else If .CompleteMatch(["show", "property"]) And If .IsValidIndex($paths.Max) Then
            MikuruFileProperty.Show($paths.CurrentDirectory &/ $paths[.Index])
        Else If .Has("move") Then
            $paths.MoveTo()
        Else If .Include(["find", "match", "matches", "filter"]) And If .Count >= 2 Then
            $paths.SetFilter(MikuruUserInput.All)
        Else If .HasSearchQuery() Then
            
        Else If .CompleteMatch(["make", "dir"]) Or If .CompleteMatch(["make", "directory"]) Or If .Has("mkdir") Then
            makeDirectory()
        Else If .Include(["remove", "delete", "trash"]) Then
            MikuruDelete($paths.CurrentDirectory, $paths.All)
        Else If .IsValidIndex($paths.Max) Then
            $paths.Open(argDirectory &/ $paths[.Index])
        End If
    End With
    
    Return False
    
End

Private Sub endlessEight()
    
    Do
        $paths.Set($paths.CurrentDirectory)
        If catchCommand($paths.CurrentDirectory) Then Break
    Loop
    
End

Public Sub Show(Optional argDirectory As String = User.Home)
    
    $paths.CurrentDirectory = argDirectory

    endlessEight()
        
End
