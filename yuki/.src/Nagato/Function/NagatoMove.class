' Gambas class file

Inherits NagatoFunction

Private $paths As New NagatoPaths

Private Sub catchCommand(argDirectory As String) As Boolean ' Return True when Break
    
    $paths.ClearFilter()
    
    NagatoUserInput.Catch(Subst$("YUKI.N > We are in &1, Where do you want to go ?", $paths.CurrentDirectory))
    
    With NagatoUserInput
        If .Include(["here", "term", "terminal"]) Or If .CompleteMatch(["open", "terminal"]) Then
            Desktop.OpenTerminal($paths.CurrentDirectory)
        Else If .Has("up") Then
            $paths.Up()
        Else If .Include(["break", "back", "escape", "esc"]) Then
            Return True
        Else If .CompleteMatch(["show", "hidden"]) Then
            $paths.ShowHidden = True
        Else If .CompleteMatch(["hide", "hidden"]) Then
            $paths.ShowHidden = False
        Else If .Include(["properties", "property", "prop"]) And If .IsValidIndex($paths.Max) Then
            MikuruFileProperty.Show($paths.CurrentDirectory &/ $paths[.Index])
        Else If .Include(["play", "music", "audio"]) And If .IsValidIndex($paths.Max) Then
            NagatoPlayMusic.Show($paths.CurrentDirectory &/ $paths[.Index])
        Else If .Include(["text"]) And If .IsValidIndex($paths.Max) Then
            MikuruText.Show($paths.CurrentDirectory &/ $paths[.Index])
        Else If .Has("move") Then
            $paths.MoveTo()
        Else If .HasSearchQuery() Then
            $paths.SetFilter(NagatoUserInput.All)
        Else If .CompleteMatch(["make", "dir"]) Or If .CompleteMatch(["make", "directory"]) Or If .Has("mkdir") Then
            MikuruMakeDirectory.Show($paths.CurrentDirectory)
        Else If .Include(["remove", "delete", "trash"]) Then
            MikuruDelete($paths.CurrentDirectory, $paths.All)
        Else If .IsValidIndex($paths.Max) Then
            $paths.Open(argDirectory &/ $paths[.Index])
        End If
    End With
    
    Return False
    
End

Private Sub endlessEight()
    
    Do
        $paths.Set($paths.CurrentDirectory)
        If catchCommand($paths.CurrentDirectory) Then Break
    Loop
    
End

Public Sub Show(Optional argValues As Variant[])
    
    $paths.CurrentDirectory = User.Home
    endlessEight()
    
End
