' Gambas class file

Property Read Count As Integer
Property Read Max As Integer
Property ShowHidden As Boolean

Private $paths As New String[]
Private $filter As New String[]
Private $showHidden As Boolean = False
Private $currentDirectory As String

Private Sub matches(argQuery As String) As Boolean
    
    Dim yukiFilter As String
    
    For Each yukiFilter In $filter
        If argQuery Not Like Subst$("*&1*", Replace$(yukiFilter, "/", "")) Then Return False
    Next
    
    Return True
    
End

Private Function getPattern() As String
    
    Return IIf($showHidden, "*", "[^.]*")
    
End

Private Sub setPaths(argHeader As String, argType As Integer, ByRef refIndex As Integer)
    
    Dim yukiPath As String
    Dim yukiFlag As Boolean = False
    
    Print argHeader
    
    For Each yukiPath In Dir($currentDirectory, getPattern(), argType).Sort(gb.Natural + gb.IgnoreCase)
        If $filter.Count > 0 And If Not matches(yukiPath) Then Continue
        Print Subst$("&1 : &2", refIndex, yukiPath)
        $paths.Add(yukiPath)
        Inc refIndex
        yukiFlag = True
    Next
    
    If Not yukiFlag Then Print "  NOTHING"
    
End

Private Sub showState()
    
    Dim yukiIndex As Integer

    setPaths("[Directories]", gb.Directory, ByRef yukiIndex)
    setPaths("[Files]", gb.File, ByRef yukiIndex)
    
End

Public Sub Set(argDirectory As String)
    
    $currentDirectory = argDirectory
    $paths.Clear()
    showState()
    
End

Public Sub SetFilter(argFilters As String[])
    
    Dim yukiFilter As String
    
    $filter.Clear()
    
    For Each yukiFilter In argFilters
        If yukiFilter = "filter" Then Continue
        $filter.Add(yukiFilter)
    Next
    
End

Public Sub ClearFilter()
    
    $filter.Clear()
    
End

Public Sub _get(argIndex As Integer) As String
    
    Return $paths[argIndex]
    
End

Private Function Count_Read() As Integer

    Return $paths.Count

End

Private Function ShowHidden_Read() As Boolean

    Return $showHidden

End

Private Sub ShowHidden_Write(Value As Boolean)

    $showHidden = Value

End

Private Function Max_Read() As Integer

    Return $paths.Max

End
