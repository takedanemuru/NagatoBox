' Gambas class file

Inherits NagatoObject

Property Read HasNumber As Boolean

Private $function As New NagatoFunctionElement As "TFEI"
Private $num As New NagatoNumberElement As "TFEI"

Private Function getText() As String

    Dim yukiHeader As String = $function.Name & ":"
    Dim yukiSpace As String = getSpace()
    Dim yukiNumberText As String = NagatoNumber2.GetString($num.Number, $num.FloatingPoint)
    
    Return yukiHeader & yukiSpace & $num.Sign & yukiNumberText

End

Private Function getSpace() As String
    
    Dim yukiHeaderLength As Integer = Len($function.Name)
    Dim yukiNumberText As String = NagatoNumber2.GetString($num.Number, $num.FloatingPoint)
    Dim yukiNumberLength As Integer = MikuruNumber.GetValidLength(yukiNumberText) 

    Return String$(NagatoSettings.LCDLength - (yukiHeaderLength + yukiNumberLength), " ")
    
End

Public Function SendEnter() As Boolean ' returns false if rejected.
    
    If Not $num.HasNumber Then Return False
    
    If $function.Type = MikuruFunctionType.Start Then $function.SetFunction(MikuruFunctionType.Plus)
    
    Return True
    
End

Public Sub SwitchSign()
    
    $num.SwitchSign()
    
    Raise Signal(MikuruSignal.CalcBufferChanged, [getText()])
        
End

Public Sub PushNumber(argNumber As Integer)
    
    $num.PushNumber(argNumber)
    
    Raise Signal(MikuruSignal.CalcBufferChanged, [getText()])
    
End

Public Sub Back()
    
    $num.Back()
    
    Raise Signal(MikuruSignal.CalcBufferChanged, [getText()])
    
End

Public Sub PushDot()
    
    If $num.FloatingPoint <> 0 Then Return
    If Not $num.PushDot() Then Return
    
    Raise Signal(MikuruSignal.CalcBufferChanged, [getText()])
    
End

Public Sub SetFunction(argFunctionType As Integer)
    
    $function.SetFunction(argFunctionType)
    
    Raise Signal(MikuruSignal.CalcBufferChanged, [getText()])
    
End

Public Function Execute(argNumber As Float) As Float
    
    Return $function.Execute(argNumber, $num.Number)
    
End

Public Sub _new(argFunctionType As Integer)
    
    $function.SetFunction(argFunctionType)
    
End

Private Function HasNumber_Read() As Boolean
    
    Return $num.HasNumber
    
End
