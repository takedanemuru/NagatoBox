' Gambas class file

Private Const LcdResultLength As Integer = 28
Private Const LcdBufferLength As Integer = 26
 
Private $messageLcd As NagatoLcdInterface
Private $resultLcd As NagatoLcdInterface
Private $bufferLcd As NagatoLcdInterface
Private $greeter As NagatoGreeter
Private $result As Float = 0
Private $currentElement As NagatoCalcElement
Private $history As New NagatoCalcHistory
Private $observer As Observer

Private Sub initializeMessageLcd()
        
        $messageLcd = New NagatoLcdInterface(ResultLCD2)
        $messageLcd.Length = LcdResultLength
        
End

Private Sub initializeResultLcd()
        
        $resultLcd = New NagatoLcdInterface(ResultLCD)
        $resultLcd.Length = LcdResultLength
        
End

Private Sub initializeBufferLcd()
        
        $bufferLcd = New NagatoLcdInterface(BufferLCD)
        $bufferLcd.Length = LcdBufferLength
        
End

Private Sub setHistoryAndExecute()
        
        $history.Add($currentElement)
        $result = $currentElement.Execute($result)
        $resultLcd.ShowResultState($result)
        
End

Private Sub setNewBuffer(argFunctionType As Integer)
        
        $currentElement = New NagatoCalcElement 
        $observer = New Observer($currentElement) As "Asakura"
        $currentElement.SetFunction(argFunctionType)
        
End

Private Sub sendNumber(argNumber As String)
        
        If $currentElement.Lock Then Return
        
        $currentElement.PushNumber(argNumber)
        
End

Private Sub sendFunction(argFunctionType As Integer)
        
        If $currentElement.HasNumber And Not $currentElement.Lock Then
                setHistoryAndExecute()
                setNewBuffer(argFunctionType)
        Else If $currentElement.HasNumber And $currentElement.Lock Then
                setNewBuffer(argFunctionType)
        Else
                $currentElement.SetFunction(argFunctionType)
        Endif
        
End

Public Sub Form_Open()

        NagatoSettings.LoadFormPosition(Me)
        setNewBuffer(MikuruFunctionType.Start)
        initializeMessageLcd()
        initializeResultLcd()
        initializeBufferLcd()
        BackButton.Text = String.Chr$(8594) 'back arrow
        $greeter = New NagatoGreeter($bufferLcd)
        
End

Public Sub Form_Close()
        
        NagatoSettings.SaveFormPosition(Me)
        
End

Public Sub NumberButton_Click()
        
        sendNumber(Last.Tag)
        
End

Public Sub DotButton_Click()
        
        If $currentElement.FloatingPoint <> 0 Then Return
        
        $currentElement.PushDot()
        
End

Public Sub ReverseButton_Click()

        If $currentElement.Lock Then Return

        $currentElement.SwitchSign()

End

Public Sub EnterButton_Click()

        If Not $currentElement.HasNumber Then Return
        
        With $currentElement
                .Lock = True
                If .FunctionType = MikuruFunctionType.Start Then .SetFunction(MikuruFunctionType.Plus)
        End With
        
        setHistoryAndExecute()
        
End

Public Sub FunctionButton_Click()
        
        sendFunction(Last.Tag)

End

Public Sub UndoButton_Click()

        $result = $history.Undo()
        $resultLcd.ShowResultState($result)

End

Public Sub Asakura_Change()
        
        $greeter.Stop()
        $bufferLcd.ShowBufferState($currentElement)
        
Catch
        ' to avoid null greeter object.
        Return
        
End

Public Sub Asakura_DivisionByZero()
        
        ResultLCD2.Visible = True
        $messageLcd.ShowMessage("error division by zero")
        
End

Public Sub ClearButton_Click()

        ResultLCD2.Visible = False
        $history.Clear()
        $result = 0
        setNewBuffer(MikuruFunctionType.Start)
        $resultLcd.ShowMessage("clear all")

End

Public Sub BackButton_Click()

        $currentElement.Back()

End

Public Sub Form_KeyPress()
        
        Select Case Key.Code
                Case Key.Esc
                        ClearButton_Click()
                Case Key.Return
                        EnterButton_Click()
                Case Key.BackSpace
                        UndoButton_Click()
                Case Key.Delete
                        BackButton_Click()
                Case Asc(".")
                        DotButton_Click()
                Case Asc("/")
                        sendFunction(MikuruFunctionType.Devide)
                Case Asc("-")
                        sendFunction(MikuruFunctionType.Minus)
                Case Asc("*")
                        sendFunction(MikuruFunctionType.Multi)
                Case Asc("+")
                        sendFunction(MikuruFunctionType.Plus)
                Case Asc("^")
                        sendFunction(MikuruFunctionType.Power)
                Case Asc("0"), Asc("1"), Asc("2"), Asc("3"), Asc("4"), Asc("5"), Asc("6"), Asc("7"), Asc("8"), Asc("9")
                        sendNumber(CInt(Key.Text))
        End Select
        
End

