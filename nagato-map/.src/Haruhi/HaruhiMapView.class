' Gambas class file

Public Enum OpenStreetMap, GoogleMap

Private $menuBar As NagatoMenuBar
Private $drawMarker As Boolean = False
Private $currentMapPoint As MapPoint

Private Sub setMapTile()
    
    With MikuruOpenStreetMap
        MapView.Map.AddTile(.Name, .Pattern, Null).Copyright = .Copyright
    End With 
    
    MikuruGoogleMap.AddTile(MapView)
    
End

Private Sub setVisibleLayer(argMapType As Integer)
    
    With MapView
        If argMapType = Me.OpenStreetMap Then
            .Map[MikuruOpenStreetMap.Name].Visible = True
            .Map[MikuruGoogleMap.Name].Visible = False
        Else
            .Map[MikuruOpenStreetMap.Name].Visible = False
            .Map[MikuruGoogleMap.Name].Visible = True
        End If
    End With
    
End

Public Sub SetLocation(argLatitude As Float, argLongitude As Float, argZoom As Integer)
    
    $drawMarker = False
    
    With MapView.Map
        .Center.Lat = argLatitude
        .Center.Lon = argLongitude
        .Zoom = argZoom
        .Refresh()
    End With
    
End

Public Sub SetMarker(argLatitude As Float, argLongitude As Float)
    
    $drawMarker = True
    $currentMapPoint = New MapPoint(argLatitude, argLongitude)
    
    With MapView.Map
        .Center.Lat = argLatitude
        .Center.Lon = argLongitude
        .Zoom = 15
        .Refresh()
    End With
    
End

Public Sub Form_Open()

    Application.MainWindow = Me
    $menuBar = New NagatoMenuBar(MenuHBox) As "MenuBar"
    NagatoSettings.LoadFormSettings(Me)
    NagatoLeftPanel.Activate(WeatherWikipediaSidePanel)

    MapView.Map.Zoom = 4
    setMapTile()
    setVisibleLayer(Me.OpenStreetMap)

End

Public Sub Form_Close()
    
    NagatoSettings.SaveFormSettings(Me)
    
End

Public Sub MenuBar_MapSelect(argMapType As Integer)
    
    setVisibleLayer(argMapType)
    MapView.Refresh()
    
End
Private Function getInfomationPixelPoint() As Point
    
    Dim yukiMapPoint As New MapPoint($currentMapPoint.Lat, $currentMapPoint.Lon)
    Dim yukiPixelPoint As Point = Geo.MapPointToPixel(yukiMapPoint, MapView.Map.Zoom)
    Dim yukiResult As New Point
    
    yukiResult.X = yukiPixelPoint.X - MapView.Map.PixelBox.X 
    yukiResult.Y = yukiPixelPoint.Y - MapView.Map.PixelBox.Y 
    
    Return yukiResult
    
End

Private Function getMarkerPolygon(argStartingPoint As Point) As Float[]
    
    Dim yukiRetun As New Float[]
    
    yukiRetun.Add(argStartingPoint.X)
    yukiRetun.Add(argStartingPoint.Y)
    yukiRetun.Add(argStartingPoint.X - 30)
    yukiRetun.Add(argStartingPoint.Y - 20)
    yukiRetun.Add(argStartingPoint.X - 10)
    yukiRetun.Add(argStartingPoint.Y - 20)
    yukiRetun.Add(argStartingPoint.X - 10)
    yukiRetun.Add(argStartingPoint.Y - 60)
    yukiRetun.Add(argStartingPoint.X + 10)
    yukiRetun.Add(argStartingPoint.Y - 60)
    yukiRetun.Add(argStartingPoint.X + 10)
    yukiRetun.Add(argStartingPoint.Y - 20)
    yukiRetun.Add(argStartingPoint.X + 30)
    yukiRetun.Add(argStartingPoint.Y - 20)
    yukiRetun.Add(argStartingPoint.X)
    yukiRetun.Add(argStartingPoint.Y)

    Return yukiRetun

End

Public Sub MapView_Draw()
    
    Dim yukiMapPoint As Point 
    
    If $drawMarker Then
        yukiMapPoint = getInfomationPixelPoint()
        Paint.Begin(Draw.Device)
            Paint.Brush = Paint.Color(Color.Violet + 128 * 16777216)
            Paint.Polygon(getMarkerPolygon(yukiMapPoint))
            Paint.Fill()
        Paint.End()
    Endif
    
    $menuBar.SetLocation(MapView.Map.Center.Lat, MapView.Map.Center.Lon)
    
End

Public Sub MenuBar_MenuEvent(argEvent As Integer)
    
    Debug argEvent
    
    Select Case argEvent
        Case NagatoMenuPipe.MenuInformation
            NagatoLeftPanel.Request(MapView.Map.Center.Lat, MapView.Map.Center.Lon)
        Case NagatoMenuPipe.MenuBookmark
            HaruhiAddBookmark.SetLocation(MapView.Map.Center.Lat, MapView.Map.Center.Lon)
            If HaruhiAddBookmark.ShowDialog() = HaruhiAddBookmark.Added Then
                NagatoLeftPanel.AddBookmark()
            Endif
    End Select
    
End
