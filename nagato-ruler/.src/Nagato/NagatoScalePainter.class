' Gambas class file

Public Const UpScaleRate As Integer = 1000

Public Enum SideUp, SideDown

Public _$height As Integer

Public Function _OnGetScaleHeight(argStep As Integer) As Integer
    
    Return 0 ' dummy 
    
End

Public Function _OnGetStep() As Integer
    
    Return 0
    
End

Public Sub _PaintOnUpside(argX As Integer, argScaleHeight As Integer)
    
    Dim yukiX As Integer = argX + NagatoSettings.Height
    Dim yukiY As Integer = IIf(-45 >= NagatoSettingsScale.Angle, -1 * NagatoSettings.Height, 0)

    Paint.MoveTo(yukiX, 0 + yukiY)
    Paint.LineTo(yukiX, argScaleHeight + yukiY)
    
End

Public Sub _PaintOnDownside(argX As Integer, argScaleHeight As Integer)
    
    Dim yukiX As Integer = argX + NagatoSettings.Height
    Dim yukiY As Integer = IIf(-45 >= NagatoSettingsScale.Angle, -1 * NagatoSettings.Height, 0)
    
    Paint.MoveTo(yukiX, Me._$height + yukiY)
    Paint.LineTo(yukiX, Me._$height - argScaleHeight + yukiY)
    
End

Public Sub _call(argSide As Integer)
    
    Dim yukiDotCount As Integer
    Dim yukiStep As Integer
    Dim yukiStart As Integer = NagatoSettings.Height * Me.UpScaleRate
    Dim yukiEnd As Integer = NagatoSettings.Width * Me.UpScaleRate
    
    Me._$height = NagatoSettings.Height
    
    Paint.Brush = Paint.Color(NagatoSettingsScale.Foreground)
    Paint.LineWidth = 1
    For yukiDotCount = yukiStart To yukiEnd Step Me._OnGetStep()
        If argSide = Me.SideUp Then
            Me._PaintOnUpside(yukiDotCount / Me.UpScaleRate, Me._OnGetScaleHeight(yukiStep))
        Else
            Me._PaintOnDownside(yukiDotCount / Me.UpScaleRate, Me._OnGetScaleHeight(yukiStep))
        End If
        Inc yukiStep
    Next
    Paint.Stroke()
    
End

