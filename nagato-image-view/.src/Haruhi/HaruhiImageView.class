' Gambas class file

Property Read BeforeImage As Image
Property Read AfterImage As Image

Private $menuBar As NagatoMenuBar
Private $twinView As NagatoTwinView
Private $editorPane As NagatoEditorPane

Private Sub openFile()
    
    Dialog.Title = ("Select an image file")
    Dialog.Filter = ["*.png;*.jpg;*.jpeg;*.bmp", "Picture files", "*", "Any files"]
    Dialog.Path = User.Home
    
    If Not Dialog.OpenFile(False) Then
        $twinView.SetPath(Dialog.Path)
    Endif
    
End

Private Sub saveAs()
    
    Dialog.Title = ("Save file as...")
    Dialog.Path = User.Home &/ "image.png"
    
    If Not Dialog.SaveFile() Then
        $twinView.BeforeImage.Save(MikuruSafePath.Get(Dialog.Path))
    Endif
    
End

Public Sub SetImage(argPath As String)
    
    $twinView.SetPath(argPath)
    
End

Public Sub Form_Open()
    
    $menuBar = New NagatoMenuBar(MenuBox) As "MenuBar"
    $twinView = New NagatoTwinView(MainView, MainViewAfter) As "TwinView"
    $editorPane = New NagatoEditorPane(SidePanel1) As "EditorPane"
    
End

Public Sub Form_Close()
    
    NagatoSettings.SaveFormSettings(Me)
    
End

Public Sub MenuBar_MenuEvent(argEvent As Integer)
    
    Select Case argEvent
        Case MikuruEvent.ZoomFit
            $twinView.SetZoomFit()
        Case MikuruEvent.ZoomNormal
            $twinView.SetZoomNormal()
        Case MikuruEvent.ZoomIn
            $twinView.SetZoom(1.2)
        Case MikuruEvent.ZoomOut
            $twinView.SetZoom(0.8)
        Case MikuruEvent.FileOpen
            openFile()
        Case MikuruEvent.FileSaveAs
            saveAs()
        Case MikuruEvent.ViewRotateLeft
            $twinView.Rotate(90)
        Case MikuruEvent.ViewRotateRight
            $twinView.Rotate(-90)
        Case MikuruEvent.StarEdit, MikuruEvent.FileEdit
            $twinView.Toggle()
            SidePanel1.Hidden = Not SidePanel1.Hidden
    End Select
    
End

Public Sub EditorPane_MenuEventWithArgs(argEvent As Integer, argValues As Variant[])
    
    If argEvent = MikuruEffect.Apply Then
        $twinView.ApplyEffect()
    Else
        $twinView.PreviewEffect(argEvent, argValues)
    End If
    
End

Private Function BeforeImage_Read() As Image

    Return $twinView.BeforeImage

End

Private Function AfterImage_Read() As Image

    Return $twinView.AfterImage

End
