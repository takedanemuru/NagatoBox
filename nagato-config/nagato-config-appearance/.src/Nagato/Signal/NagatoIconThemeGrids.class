' Gambas class file

Inherits NagatoGrids

Private Function hasThemeIndex(argPath As String) As Boolean
    
    Dim yukiPath As String
    
    For Each yukiPath In Dir(argPath, "*", gb.File)
        If yukiPath = "index.theme" Then Return True
        If yukiPath = "theme.cache" Then Return True
    Next
    
    Return False
    
End

Private Function hasData(argPath As String) As Boolean
    
    Dim yukiPath As String
    
    For Each yukiPath In Dir(argPath, "*", gb.Directory)
        If yukiPath <> "cursors" Then Return True
    Next
    
    Return False
    
End

Private Sub setData()
    
    Dim yukiIconsDirectory As String = "/usr/share/icons"
    Dim yukiPath As String
    
    For Each yukiPath In Dir(yukiIconsDirectory, "*", gb.Directory).Sort(gb.IgnoreCase)
        If Not hasThemeIndex(yukiIconsDirectory &/ yukiPath) Then Continue
        If Not hasData(yukiIconsDirectory &/ yukiPath) Then Continue
        Inc Me._$grids.Rows.Count
        Me._$grids[Me._$grids.Rows.Max, 1].Text = yukiPath
        If Even(Me._$grids.Rows.Max) Then Me._SetBackground()
        If yukiPath = NagatoConfigFacade.IconTheme Then
            Me._$grids[Me._$grids.Rows.Max, 0].Picture = MikuruIcon["button-check"]
        End If
    Next
    
End

Private Sub setStarButton()
    
    Dim yukiRow As Integer
    
    For yukiRow = 0 To Me._$grids.Rows.Max
        If Me._$grids[yukiRow, 1].Text = NagatoConfigFacade.IconTheme Then
            Me._$grids[yukiRow, 0].Picture = MikuruIcon["button-check"]
        Else If yukiRow = Me._$grids.Row Then
            Me._$grids[yukiRow, 0].Picture = MikuruIcon["auction"]
        Else
            Me._$grids[yukiRow, 0].Picture = Null
        Endif
    Next
    
End

Public Sub _InitializeGrids()
    
    Me._SetGridsFrame(("Icon Theme"))
    setData()
    
End

Public Sub Grids_Activate()
    
    NagatoInterimStatus.IconTheme = Me._$grids[Me._$grids.Row, 1].Text
    
    setStarButton()
    
    Raise Signal(MikuruSignal.PropertyChanged, [Me._$grids[Me._$grids.Row, 1].Text])
    
End
