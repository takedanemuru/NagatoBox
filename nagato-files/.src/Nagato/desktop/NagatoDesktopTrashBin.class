' Gambas class file

Inherits NagatoDesktopSpecialIcon

Private Const FontSize As Integer = 10

Private $iconView As IconView
Private $observer As NagatoDirectoryObserver

Private Function getText() As String
    
    If NagatoTrash.Count = 0 Then
        Return "Empty"
    Else If NagatoTrash.Count = 1 Then
        Return Subst$("1 item<br>&1", NagatoTrash.Size)
    Else
        Return Subst$("&1 items<br>&2", NagatoTrash.Count, NagatoTrash.Size)
    End If
    
End

Private Sub paintLabel()
    
    Dim yukiText As String = getText()
    Dim yukiHeight As Integer = Application.Font.RichTextHeight(yukiText, NagatoSettingsTile.Size - 16)
    
    With NagatoSettingsTile
        Paint.RichText(yukiText, 0, .Size - yukiHeight - 16, .Size, yukiHeight + 16, Align.Center)
    End With
    
End

Private Sub initializeIcon()
    
    Dim yukiImage As Image = MikuruTileBaseImage[Color.DarkGreen, 128]
    
    Paint.Begin(yukiImage)
        Paint.Brush = Paint.Color(Color.White)
        Paint.Font.Size = FontSize
        Paint.Font.Bold = True
        Paint.DrawPicture(Stock["64/trash"], 32, 8)
        paintLabel()
        Paint.Fill()
    Paint.End()
    
    Try $iconView[NagatoDesktop.SpecialKeyTrashBin].Picture = yukiImage.Picture 
    
End

Private Sub initializeObserver()
    
    $observer = New NagatoDirectoryObserver As "DirectoryObserver"

    With $observer
        $observer.Directory = MikuruTrashPath.Files
        $observer.IntervalSecond = 1
    End With
    
End

Public Sub Stop()
    
    Object.Lock($observer)
    
End

Public Sub _new(argIconView As IconView)
    
    $iconView = argIconView
    $iconView.Add(NagatoDesktop.SpecialKeyTrashBin, "")
    
    initializeIcon()
    initializeObserver()
    
End

Public Sub DirectoryObserver_Deleted(argFileName As String)
    
    initializeIcon()
    
End

Public Sub DirectoryObserver_Modefied(argFileName As String)
    
    initializeIcon()
    
End
