' Gambas class file

Property BackgroundColor As Integer

Private Const TextWidth As Integer = 112 ' TileSize - Margin * 2
Private Const TextHeightLimit As Integer = 96
Private Const Margin As Integer = 8

Private $backgroundColor As Integer

Private Sub paintDescriptionShade(argText As String)
    
    Dim yukiHeight As Integer = Paint.Font.RichTextHeight(argText, TextWidth) + Margin * 2
    
    Paint.Brush = Paint.Color($backgroundColor)
    Paint.Rectangle(0, NagatoSettingsTile.Size - yukiHeight, NagatoSettingsTile.Size, yukiHeight)
    Paint.Fill()
    
End

Private Function getLimitedText(argText As String) As String
    
    Dim yukiText As String = argText
    Dim yukiLength As Integer
    
    If TextHeightLimit >= Paint.Font.RichTextHeight(argText, TextWidth) Then Return argText
    
    For yukiLength = String.Len(argText) - 1 DownTo 1 
        yukiText = String.Left(argText, yukiLength) & "..."
        If TextHeightLimit >= Paint.Font.RichTextHeight(yukiText, TextWidth) Then Return yukiText
    Next
    
    Return ""
    
End

Private Sub paintDescription(argText As String)
    
    Dim yukiRect As New Rect
    
    yukiRect.W = TextWidth
    yukiRect.H = Paint.Font.RichTextHeight(argText, TextWidth)
    yukiRect.Y = NagatoSettingsTile.Size - yukiRect.H - Margin
    yukiRect.X = Margin
    
    Paint.Brush = Paint.Color(Color.White)
    Paint.DrawRichText(argText, yukiRect.X, yukiRect.Y, yukiRect.W, yukiRect.H, Align.Center)
    
End

Public Sub Paint(argText As String)
    
    Dim yukiText As String
    
    Paint.Font.Size = Application.Font.Size
    Paint.Font.Bold = True
    yukiText = getLimitedText(argText)
    paintDescriptionShade(yukiText)
    paintDescription(yukiText)
    Paint.Fill()
    
End

Public Sub _new(argBackgroundColor As Integer)
    
    $backgroundColor = argBackgroundColor
    
End

Private Function BackgroundColor_Read() As Integer

    Return $backgroundColor

End

Private Sub BackgroundColor_Write(Value As Integer)

    $backgroundColor = Value

End
