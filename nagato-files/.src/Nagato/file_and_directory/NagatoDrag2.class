' Gambas class file

Create Static

Private Function getConvertedUri(argSource As String) As String
    
    Dim yukiResult As String = URL.Decode(Replace$(argSource, "file://", ""))
    Dim yukiCount As Integer
    
    Do
        If Exist(yukiResult) Then Return yukiResult
        Inc yukiCount
        Debug String.Right(yukiResult)
        Debug Asc(yukiResult)
        yukiResult = String.Left(yukiResult, String.Len(yukiResult) - 1)
        If yukiCount > 5 Then Return argSource
    Loop
    
End

Private Function uriEncode(argSource As String) As String
    
    Dim yukiLine As String
    Dim yukiResult As String
    
    For Each yukiLine In Split(argSource, "/", "", True)
        yukiResult &= ("/" & URL.Encode(yukiLine))
    Next
    
    Return yukiResult
    
End

Public Function GetPaths(argData As String) As String[]
    
    Dim yukiLine As String
    Dim yukiDecodedUrl As String
    Dim yukiResult As New String[]
    
    ' each line of "text/uri-list" ends "\r\n"
    
    For Each yukiLine In Split(argData, "\n", "", True)
        If yukiLine = "" Then Continue
        yukiDecodedUrl = getConvertedUri(yukiLine)
        If Exist(yukiDecodedUrl) Then yukiResult.Add(yukiDecodedUrl)
    Next
    
    Return yukiResult
    
End

Public Function GetUriList(argPaths As String[]) As String
    
    Dim yukiPath As String
    Dim yukiResult As String
    
    For Each yukiPath In argPaths
        If Exist(yukiPath) Then
            yukiPath = Replace(yukiPath, " ", "NagatoSpaceEncodeFlag")
            yukiResult &= ("file://" & uriEncode(yukiPath) & gb.CrLf)
            yukiResult = Replace(yukiResult, "NagatoSpaceEncodeFlag", "%20")
        Endif
    Next
    
    Return yukiResult
    
End
