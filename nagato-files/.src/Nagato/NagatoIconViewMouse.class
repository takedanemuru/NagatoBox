' Gambas class file

Inherits NagatoIconViewHandler

Event MouseDrag
Event MouseDown(argPath As String)

Private Sub dropFile(argPath As String)
    
    Select Case MikuruDrop.GetType(Me._$iconView)
        Case MikuruDrop.TypeVoid ' Move to current directory
            Raise MenuEventWithArg(NagatoMenuPipe.FileMoveToCurrentDir, argPath)
        Case MikuruDrop.TypeFile
            Debug "ignore"
        Case MikuruDrop.TypeDirectory
            Debug "move file(s) to " & Me._$iconView.Item.Key
            Try Move argPath To MikuruPath.GetSafePathName(Me._$iconView.Item.Key &/ File.Name(argPath))
        Case MikuruDrop.TypeApplication
            Debug "Try execute app with: " & argPath
    End Select
    
End

Public Sub MouseDrag(argUriList As String)
    
    Drag.Icon = Me._$iconView.Current.Picture
    Me._$iconView.Drag(argUriList, MikuruMimeType.UriList)
    
End

Public Sub Asakura_MouseDrag()
    
    Raise MouseDrag
    
End

Public Sub Asakura_DragMove()
    
    Dim yukiScrollArea As ScrollArea = Me._$iconView.Children[0]
    
    If Not Me._$iconView.FindAt(Drag.X + yukiScrollArea.ScrollX, Drag.Y) And If IsDir(Me._$iconView.Item.Key) Then
        Me._$iconView.UnselectAll()
        Me._$iconView.Item.Selected = True
    Else
        Me._$iconView.UnselectAll()
    End If
    
End

Public Sub Asakura_Drop()
    
    Dim yukiPath As String
    
    If Drag.Format <> MikuruMimeType.UriList Then Return 
    
    For Each yukiPath In NagatoDrag2.GetPaths(Drag.Data)
        'xdg-user-dirs will be ignored. 
        If NagatoXdg.IsUserDir(yukiPath) Then Continue
        dropFile(yukiPath)
    Next
    
End

Public Sub Asakura_Activate()
    
    If IsDir(Me._$iconView.Key) Then
        'Raise DirectoryClicked(Me._$iconView.Key)
        Raise MenuEventWithArg(NagatoMenuPipe.DirOpen, Me._$iconView.Key)
    Else
        MikuruFile.Exec(Me._$iconView.Key)
    End If
    
End

Public Sub Asakura_MouseDown()
    
    If Me._$iconView.Key = "" Then Return
    
    Raise MouseDown(Me._$iconView.Key)
    
End

Public Sub Asakura_Menu()
    
    Dim yukiPath As String = Me._$iconView.Key
    Dim yukiContextMenu As Object
    
    If yukiPath = "" Then
        Debug "IconViewContextMenu"
    Else If IsDir(yukiPath) Then
        yukiContextMenu = New NagatoContextMenuDirectory(HaruhiMain, yukiPath) As "Menu"
        yukiContextMenu.Popup()
    Else 
        yukiContextMenu = New NagatoContextMenuFile(HaruhiMain, yukiPath) As "Menu"
        yukiContextMenu.Popup()
    End If
    
End
