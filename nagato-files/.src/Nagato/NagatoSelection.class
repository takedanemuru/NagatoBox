' Gambas class file

Inherits NagatoMenuPipe

Property Read LastPath As String
Property Read Paths As String[]
Property Read Count As Integer

Private $paths As New String[]
Private $lastPath As String = ""

Event Changed

Public Function Exist(argPath As String) As Boolean
    
    Return $paths.Exist(argPath)
    
End

Public Sub Toggle(argPath As String)
    
    If Me.Exist(argPath) Then
        Me.RemovePath(argPath)
    Else
        Me.PushPath(argPath)
    Endif
    
    Raise Changed
    
End

Public Sub ClearAll()
    
    $paths.Clear()
    
    Raise Changed
    
End

Public Sub ClearWithoutLastSelection()
    
    Dim yukiPath As String
    
    For Each yukiPath In $paths
        If yukiPath = $lastPath Then Continue
        $paths.Remove($paths.Find(yukiPath))
    Next
    
End

Public Sub PushPath(argPath As String)
    
    If Not $paths.Exist(argPath) Then
        $paths.Add(argPath)
        $lastPath = argPath
    End If
    
    Raise Changed
    
End

Public Sub Push(argPath As String, argLeftClick As Boolean)
    
    If argLeftClick Then
        Me.Toggle(argPath)
    Else
        Me.PushPath(argPath)
    End If
    
End

Public Sub SetPaths(argPaths As String[])
    
    $paths.Clear()
    $paths = argPaths.Copy()
    
    If Not argPaths.Exist($lastPath) Then
        $lastPath = IIf($paths.Count > 0, argPaths[0], "")
    Endif
    
End

Public Sub RemovePath(argPath As String)
    
    Try $paths.Remove($paths.Find(argPath))
    
    Raise Changed
    
End

Private Function Paths_Read() As String[]

    Return $paths

End

Private Function Count_Read() As Integer

    Return $paths.Count

End

Private Function LastPath_Read() As String

    Return $lastPath

End
