' Gambas class file

Inherits NagatoMenuPipe

Property Read Count As Integer
Property Read Paths As String[]
Property Read LastSelected As String

Private $selection As New NagatoSelection As "Selection"
Private $container As NagatoSelectionBarContainer
Private $cancelButton As NagatoSelectionBarCancelButton
Private $label As NagatoSelectionBarLabel
Private $whatList As NagatoSelectionBarWhatList
Private $whereList As NagatoSelectionBarWhereList
Private $doItButton As NagatoSelectionBarDoItButton

Event Cancel

Public Sub _new(argContainer As TabStrip)
    
    $container = New NagatoSelectionBarContainer(argContainer)
    $cancelButton = New NagatoSelectionBarCancelButton($container.HBox)
    $label = New NagatoSelectionBarLabel($container.HBox)
    $whatList = New NagatoSelectionBarWhatList($container.HBox)
    $whereList = New NagatoSelectionBarWhereList($container.HBox)
    $doItButton = New NagatoSelectionBarDoItButton($container.HBox)
    
End

Public Function Exist(argPath As String) As Boolean
    
    Return $selection.Exist(argPath)
    
End

Public Sub ClearAll()
    
    $selection.ClearAll()
    
End

Public Sub ClearWithoutLastSelected()
    
    $selection.ClearWithoutLastSelection()
    
End

Public Sub Remove(argPath As String)
    
    $selection.RemovePath(argPath)
    
End

Public Sub Push(argPath As String, argLeftClick As Boolean)
    
    $selection.Push(argPath, argLeftClick)
    
End

Public Sub CancelButton_Click()
    
    Raise Cancel
    
End

Public Sub Selection_Changed()
    
    $container.Visible = IIf(NagatoSettings.MultipleSelection, ($selection.Count > 0), False)
    $label.SetText($selection.Count)
    
End

Private Function Count_Read() As Integer

    Return $selection.Paths.Count

End

Private Function Paths_Read() As String[]

    Return $selection.Paths

End

Private Function LastSelected_Read() As String

    Return $selection.LastPath

Catch
    Return ""

End
