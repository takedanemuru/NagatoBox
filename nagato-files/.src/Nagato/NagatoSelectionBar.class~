' Gambas class file

Inherits NagatoMenuPipe

Property Read Count As Integer
Property Read Paths As String[]
Property Read LastSelected As String

'Private Enum ButtonAll, ButtonInvert, ButtonArchive, ButtonMoveTo, ButtonCopyTo, ButtonDelete

'Private $container As NagatoPanelContainer
Private $selection As New NagatoSelection As "Selection"
'Private $label As NagatoSelectionBarLabel
Private $widgets As NagatoSelectionBarWidgets

Event Cancel

' Private Sub addButton(argText As String, argTag As Integer)
'     
'     Dim yukiButton As New Button($container.HBox) As "ActionButton"
'     
'     With yukiButton
'         .Text = argText
'         .Tag = argTag
'         .AutoResize = True
'     End With
'     
' End

Public Sub _new(argContainer As TabStrip)
    
    $widgets = New NagatoSelectionBarWidgets(argContainer) As "Widgets"
    
    ' $container = New NagatoPanelContainer(argContainer)
    ' addButton("Unselect All", ButtonAll)
    ' $label = New NagatoSelectionBarLabel($container.HBox)
    ' addButton("Move To...", ButtonMoveTo)
    ' addButton("Copy To...", ButtonCopyTo)
    ' addButton("Remove", ButtonDelete)
    
End

Public Function Exist(argPath As String) As Boolean
    
    Return $selection.Exist(argPath)
    
End

Public Sub ClearAll()
    
    Clipboard.Clear()
    $selection.ClearAll()
    
End

Public Sub ClearWithoutLastSelected()
    
    $selection.ClearWithoutLastSelection()
    
End

Public Sub Remove(argPath As String)
    
    $selection.RemovePath(argPath)
    
End

Public Sub Push(argPath As String, argLeftClick As Boolean)
    
    $selection.Push(argPath, argLeftClick)
    
End

Public Sub SetPaths(argPaths As String[])
    
    $selection.SetPaths(argPaths)
    Me.Selection_Changed()
    
End

' Public Sub ActionButton_Click()
'     
'     Select Case Last.Tag
'         Case ButtonAll
'             Raise Cancel
'         Case ButtonCopyTo
'             MikuruFileManuever.CopyTo($selection.Paths)
'         Case ButtonMoveTo
'             MikuruFileManuever.MoveTo($selection.Paths)
'         Case ButtonDelete
'             NagatoTrash.Delete($selection.Paths)
'     End Select
'     
' End

Public Sub Widgets_ButtonAction(argAction As Integer)
    
    With NagatoSelectionBarWidgets
        Select Case argAction
            Case .ButtonAll
                Raise Cancel
            Case .ButtonCopyTo
                MikuruFileManuever.CopyTo($selection.Paths)
            Case .ButtonMoveTo
                MikuruFileManuever.MoveTo($selection.Paths)
            Case .ButtonDelete
                NagatoTrash.Delete($selection.Paths)
        End Select
    End With
    
End

Public Sub Selection_Changed()
    
    $widgets.SetCount($selection.Count)
    
    ' $container.Visible = ($selection.Count <> 0)
    ' 
    ' If $selection.Count = 0 Then
    '     $label.SetText(0)
    ' Else 
    '     $label.SetText(IIf(NagatoSettings.MultipleSelection, $selection.Count, 1))
    ' Endif

End

Private Function Count_Read() As Integer

    Return $selection.Paths.Count

End

Private Function Paths_Read() As String[]

    Return $selection.Paths

End

Private Function LastSelected_Read() As String

    Return $selection.LastPath

Catch
    Return ""

End
