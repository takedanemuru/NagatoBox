' Gambas class file

Inherits NagatoMenuPipe

Property Read Count As Integer
Property Read Paths As String[]
Property Read LastSelected As String

Private Enum ButtonCancel, ButtonArchive, ButtonMoveTo, ButtonCopyTo, ButtonDelete

Private $container As NagatoPanelContainer
Private $selection As New NagatoSelection As "Selection"
Private $label As NagatoSelectionBarLabel

Event Cancel

Private Sub addButton(argText As String, argTag As Integer)
    
    Dim yukiButton As New Button($container.HBox) As "ActionButton"
    
    With yukiButton
        .Text = argText
        .Tag = argTag
        .AutoResize = True
    End With
    
End

Public Sub _new(argContainer As TabStrip)
    
    $container = New NagatoPanelContainer(argContainer)
    addButton("Unselect All", ButtonCancel)
    $label = New NagatoSelectionBarLabel($container.HBox)
    addButton("Move To...", ButtonMoveTo)
    addButton("Copy To...", ButtonCopyTo)
    addButton("Remove", ButtonDelete)
    
    
End

Public Function Exist(argPath As String) As Boolean
    
    Return $selection.Exist(argPath)
    
End

Public Sub ClearAll()
    
    $selection.ClearAll()
    
End

Public Sub ClearWithoutLastSelected()
    
    $selection.ClearWithoutLastSelection()
    
End

Public Sub Remove(argPath As String)
    
    $selection.RemovePath(argPath)
    
End

Public Sub Push(argPath As String, argLeftClick As Boolean)
    
    $selection.Push(argPath, argLeftClick)
    
End

Public Sub ActionButton_Click()
    
    Select Case Last.Tag
        Case ButtonCancel
            Raise Cancel
        Case ButtonCopyTo
            MikuruFileManuever.CopyTo($selection.Paths)
        Case ButtonMoveTo
            MikuruFileManuever.MoveTo($selection.Paths)
        Case ButtonDelete
            MikuruFile.TrashFiles($selection.Paths)
    End Select
    
End

Public Sub Selection_Changed()
    
    '$container.Visible = IIf(NagatoSettings.MultipleSelection, ($selection.Count > 0), False)
    $container.Visible = ($selection.Count <> 0)
    $label.SetText($selection.Count)
    
End

Private Function Count_Read() As Integer

    Return $selection.Paths.Count

End

Private Function Paths_Read() As String[]

    Return $selection.Paths

End

Private Function LastSelected_Read() As String

    Return $selection.LastPath

Catch
    Return ""

End
