' Gambas class file

Inherits NagatoMenuPipe

Property Read Selection As String[]

Private $iconViewAction As NagatoIconViewAction
Private $iconView As NagatoIconViewSurface
Private $iconViewMouse As NagatoIconViewMouse
Private $iconViewKeyboard As NagatoIconViewKeyboard
Private $selectionBar As NagatoSelectionBar 
Private $currentDirectory As String

Public Sub SetFocus(argPath As String)
    
    $iconViewAction.SetFocus(argPath)
    
End

Public Sub Refresh(argDirectory As String)
    
    $currentDirectory = argDirectory
    $selectionBar.ClearAll()
    $iconView.Refresh(argDirectory, $selectionBar.Paths, $selectionBar.LastSelected)
    
End

Public Sub RefreshWithSearchQuery(argPaths As String[])
    
    $iconView.RefreshWithSearchResult(argPaths, $selectionBar.Paths)
    
End

Public Sub Delete(argPath As String)
    
    If $iconViewAction.Delete(argPath) Then $selectionBar.Remove(argPath)
    
End

Public Sub HasKey(argDirectory As String, argPath As String) As Boolean
    
    Return $iconViewAction.Exist(argDirectory &/ argPath)
    
End

Public Sub _new(argContainer As Container)
    
    Dim yukiIconViewInitializer As New NagatoIconViewInitializer(argContainer)
    
    $iconViewAction = New NagatoIconViewAction(yukiIconViewInitializer.IconView) As "Menu"
    $iconView = New NagatoIconViewSurface(yukiIconViewInitializer.IconView) As "Menu"
    $iconViewMouse = New NagatoIconViewMouse(yukiIconViewInitializer.IconView) As "Menu"
    $iconViewKeyboard = New NagatoIconViewKeyboard(yukiIconViewInitializer.IconView) As "Keyboard"
    $selectionBar = New NagatoSelectionBar(argContainer) As "SelectionBar"
    
End

Public Sub Menu_MouseDrag()
    
    If $selectionBar.Count = 0 Then Return
    
    $iconViewMouse.MouseDrag(NagatoDrag2.GetUriList($selectionBar.Paths))
    ' 
End

Private Sub clearSelection()
    
    Dim yukiSelectedPaths As String[] = $selectionBar.Paths.Copy()
    Dim yukiPath As String
    
    $selectionBar.ClearWithoutLastSelected()
    
    For Each yukiPath In yukiSelectedPaths
        $iconView.ResetIcon(yukiPath, False)
    Next
    
End

Public Sub Menu_MouseDown(argPath As String)
    
     $selectionBar.Push(argPath, Mouse.Left)
    If Not NagatoSettings.MultipleSelection Then clearSelection()
    $iconView.ResetIcon(argPath, $selectionBar.Exist(argPath))
    
    Raise MenuEventWithArg(NagatoMenuPipe.FileShowProperty, $selectionBar.LastSelected)
    
End

Public Sub Keyboard_KeyPressWithControl(argKeyCode As Integer)
    
    Select Case argKeyCode
        Case Key["x"]
            Debug "cut"
            If $selectionBar.Paths.Count = 0 Then Return
            Clipboard.Copy(NagatoDrag2.GetUriListCopy($selectionBar.Paths), "text/uri-list")
        Case Key["c"]
            If $selectionBar.Paths.Count = 0 Then Return
            Clipboard.Copy(NagatoDrag2.GetUriListCopy($selectionBar.Paths), "text/uri-list")
        Case Key["v"]
            Debug Clipboard.Format
            If Clipboard.Format <> "text/uri-list" Then Return
            Debug NagatoDrag2.GetPaths(Clipboard.Paste("text/uri-list")).Count
            MikuruFileManuever.CopyUriList($currentDirectory, Clipboard.Paste("text/uri-list"))
        Case Key["h"]
            Raise MenuEvent(NagatoMenuPipe.ViewShowHidden)
        Case Key["t"]
            Raise MenuEventWithArg(NagatoMenuPipe.DirOpenInNewTab, $currentDirectory)
        Case Key["n"]
            Raise MenuEvent(NagatoMenuPipe.DirCreate)
        Case Key["f"]
            HaruhiMain.SetSearch(False)
    End Select
    
End

Public Sub KeyBoard_KeyPressWithAlt(argKeyCode As Integer)
    
    Select Case argKeyCode
        Case Key["h"]
            Raise MenuEvent(NagatoMenuPipe.MoveHome)
        Case Key["u"]
            Raise MenuEvent(NagatoMenuPipe.MoveUp)
        Case Key["b"]
            Raise MenuEvent(NagatoMenuPipe.MoveBack)
        Case Key["f"]
            Raise MenuEvent(NagatoMenuPipe.MoveForward)
    End Select
    
End

Public Sub KeyBoard_KeyPress(argKeyCode As Integer)
    
    Select Case argKeyCode
        Case Key.Enter, 16777220
            If IsDir($selectionBar.LastSelected) Then Raise MenuEventWithArg(NagatoMenuPipe.DirOpen, $selectionBar.LastSelected)
        Case Key.Esc, 16777216
            Me.Refresh($currentDirectory)
    End Select
    
End

Public Sub SelectionBar_Cancel()
    
    Me.Refresh($currentDirectory)
    
End

Private Function Selection_Read() As String[]

    Return $selectionBar.Paths

End
