' Gambas class file

Inherits NagatoSignal

Private $selection As New NagatoSelection
Private $iconView As IconView

Event Selected(argCount As Integer)

Private Sub initializeIconView(argTabStrip As TabStrip)
    
    $iconView = New IconView(argTabStrip) As "TrashBinIconView"
    
    With $iconView
        .Expand = True
        .ScrollBar = Scroll.Horizontal
        .Orientation = Arrange.Horizontal
        .Picture = Picture.Load("pictures/yukichan_31.jpg")
    End With
    
End

Private Sub setIcons(argType As Integer)
    
    Dim yukiPath As String
    Dim yukiFullPath As String
    
    For Each yukiPath In Dir(NagatoTrash.PathFiles, "*", argType).Sort(gb.IgnoreCase)
        yukiFullPath = NagatoTrash.PathFiles &/ yukiPath
        If Not Exist(yukiFullPath) Then Continue
        $iconView.Add(yukiFullPath, "", MikuruTile(yukiFullPath, $selection.Exist(yukiFullPath)))
    Next
    
End

Private Sub ensureVisible(argPath As String)
    
    If Not $iconView.Exist(argPath) Then Return
    
    $iconView[argPath].EnsureVisible()
    
End

Public Sub Refresh(Optional argLastSelected As String)
    
    $iconView.Clear()
    
    setIcons(gb.Directory)
    setIcons(gb.File)
    NagatoDBThumbnailer.CleanUp(NagatoTrash.PathFiles)
    
    If argLastSelected Then ensureVisible(argLastSelected)
    
    If $iconView.Count = 0 Then $iconView.Add("NOTFOUND", "", MikuruTile.GetNotFoundTile())
    
End

Public Sub Delete()
    
    If $selection.Count = 0 Then Return
    
    NagatoTrash.Delete($selection.Paths)
    
End

Public Sub Restore()
    
    If $selection.Count = 0 Then Return
    
    Debug $selection.Paths.Count
    
    NagatoTrash.Restore($selection.Paths)
    
End

Public Sub UnselectAll()
    
    $selection.ClearAll()
    Me.Refresh()
    
End

Public Sub _new(argTabStrip As TabStrip)
    
    initializeIconView(argTabStrip)
    Me.Refresh()
    
End

Public Sub TrashBinIconView_MouseDown()
    
    Dim yukiLastKey As String = Last.Key
    
    If $iconView.FindAt(Mouse.X, Mouse.Y) Then ' NOTE: Returns True when NOT found.
        $iconView.Current.Selected = False
    Else
        $selection.Toggle(yukiLastKey)
        $iconView[yukiLastKey].Picture = MikuruTile(yukiLastKey, $selection.Exist(yukiLastKey))
        TFEI.SetTrashProperty(yukiLastKey)
        Raise Selected($selection.Count)
    End If
    
End
