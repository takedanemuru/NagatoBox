' Gambas class file

Property BackgroundColor As Integer

Private $backgroundColor As Integer

Private Sub paintDescriptionShade(argText As String)
    
    Dim yukiHeight As Integer 
    
    yukiHeight = Paint.Font.RichTextHeight(argText, MikuruUxTile.TextWidth) + MikuruUxTile.Margin * 2
    
    Paint.Brush = Paint.Color($backgroundColor)
    Paint.Rectangle(0, MikuruUxTile.TileSize - yukiHeight, MikuruUxTile.TileSize, yukiHeight)
    Paint.Fill()
    
End

Public Function _OnGetDescription(argText As String) As String ' virtual
    
    Return ""
    
End

Private Sub paintDescription(argText As String)
    
    Dim yukiRect As New Rect
    
    yukiRect.W = MikuruUxTile.TextWidth
    yukiRect.H = Paint.Font.RichTextHeight(argText, MikuruUxTile.TextWidth)
    yukiRect.Y = MikuruUxTile.TileSize - yukiRect.H - MikuruUxTile.Margin
    yukiRect.X = MikuruUxTile.Margin
    
    Paint.Brush = Paint.Color(Color.White)
    Paint.DrawRichText(argText, yukiRect.X, yukiRect.Y, yukiRect.W, yukiRect.H, Align.Center)
    
End

Public Function _IsLowerThanLimit(argText As String) As Boolean
    
    Dim yukiHeight As Integer = Paint.Font.RichTextHeight(argText, MikuruUxTile.TextWidth)
    
    Return (MikuruUxTile.TextHeight >= yukiHeight)
    
End

Public Sub Paint(argText As String)
    
    Dim yukiText As String
    
    Paint.Font.Size = Application.Font.Size
    Paint.Font.Bold = True
    yukiText = Me._OnGetDescription(argText)
    paintDescriptionShade(yukiText)
    paintDescription(yukiText)
    Paint.Fill()
    
End

Public Sub _new(Optional argBackgroundColor As Integer = Color.Transparent)
    
    $backgroundColor = argBackgroundColor
    
End

Private Function BackgroundColor_Read() As Integer

    Return $backgroundColor

End

Private Sub BackgroundColor_Write(Value As Integer)

    $backgroundColor = Value

End
