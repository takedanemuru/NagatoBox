' Gambas class file

Inherits NagatoPainter

Private $imageSizes As NagatoSubPainterImageSizes
Private $pdfPages As NagatoSubPainterPdfPages
Private $id3Tags As NagatoSubPainterId3Tags
Private $trashInfo As NagatoSubPainterTrashInfo

Private Function getPropertyText(argTemplate As String) As String
    
    Dim yukiStat As Stat = Stat(Me._$currentPath)
    Dim yukiSize As String = MikuruFile.GetFileSizeText(Me._$currentPath)
    Dim yukiPermission As String = MikuruFilePermission.GetText(Me._$currentPath)
    Dim yukiLastAccess As String = MikuruFile.GetTimeDifferenceText(yukiStat.LastAccess)
    Dim yukiLastModefy As String = MikuruFile.GetTimeDifferenceText(yukiStat.LastModified)
    Dim yukiLastChange As String = MikuruFile.GetTimeDifferenceText(yukiStat.LastChange)
    
    Return Subst$(argTemplate, yukiSize, yukiPermission, yukiLastAccess, yukiLastModefy, yukiLastChange)
    
Catch
    Return ""
    
End

Private Function drawProperties(argTopOffset As Integer) As Integer
    
    Dim yukiTemplate As String = "Size:<br>Permission:<br>Access:<br>Modefy:<br>Change:<br>"
    Dim yukiPropertiesTemplate As String = "&1<br>&2<br>&3<br>&4<br>&5<br>"
    Dim yukiProperties As String = getPropertyText(yukiPropertiesTemplate)
    
    Return Me._DrawProperties(argTopOffset, yukiTemplate, yukiProperties)
    
End

Public Sub _InitializeSubPainters() ' override
    
    $imageSizes = New NagatoSubPainterImageSizes(Me._$drawingArea)
    $id3Tags = New NagatoSubPainterId3Tags(Me._$drawingArea)
    $pdfPages = New NagatoSubPainterPdfPages(Me._$drawingArea)
    $trashInfo = New NagatoSubPainterTrashInfo(Me._$drawingArea)
    
End

Public Sub Paint(argY As Integer, argPath As String, argIsTrash As Boolean)
    
    Dim yukiMimeType As String = DesktopMime.FromFile(argPath).Type
    Dim yukiTopOffset As Integer
    
    Me._$currentPath = argPath
    
    yukiTopOffset = drawProperties(argY)
    
    If yukiMimeType Begins "image" Then yukiTopOffset = $imageSizes.Draw(yukiTopOffset, Me._$currentPath)
    If yukiMimeType Begins "audio" Then yukiTopOffset = $id3Tags.Draw(yukiTopOffset, Me._$currentPath)
    If yukiMimeType = "application/pdf" Then $pdfPages.Draw(yukiTopOffset, Me._$currentPath)
    If argIsTrash Then $trashInfo.Draw(yukiTopOffset, Me._$currentPath)
    
End
