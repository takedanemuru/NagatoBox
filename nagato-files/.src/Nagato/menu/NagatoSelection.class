' Gambas class file

Inherits NagatoObject

Property Read LastPath As String
Property Read Paths As String[]
Property Read Count As Integer

Private $lastPath As String = ""
Private $paths As New NagatoPathsHandler

Event Changed

Public Function Exist(argPath As String) As Boolean
    
    Return $paths.Exist(argPath)
    
End

Public Sub ClearAll()
    
    $paths.ClearAll()
    
    Raise Changed
    
End

Public Sub PushPath(argPath As String)
    
    If Not $paths.Exist(argPath) Then
        $paths.Add(argPath)
        $lastPath = argPath
    End If
    
    Raise Changed
    
End

Public Sub RemovePath(argPath As String)
    
    $paths.Remove(argPath)
    
    Raise Changed
    
End

Public Sub Toggle(argPath As String)
    
    If $paths.Exist(argPath) Then
        Me.RemovePath(argPath)
    Else
        Me.PushPath(argPath)
    End If
    
End

Public Sub ClearWithoutLastSelection()
    
    $paths.Clear($lastPath)
    
End

Public Sub Push(argPath As String, argLeftClick As Boolean)
    
    If argLeftClick Then 
        Me.Toggle(argPath)
    Else
        Me.PushPath(argPath)
    End If

End

Public Sub SetPaths(argPaths As String[])
    
    Dim yukiFirstPath As String = $paths.Reset(argPaths)
    
    If argPaths.Exist($lastPath) Then $lastPath = yukiFirstPath
    
End

Public Sub Sanitize()
    
    $paths.Sanitize()
    
End

Private Function Paths_Read() As String[]

    Return $paths.Paths

End

Private Function Count_Read() As Integer

    Return $paths.Count

End

Private Function LastPath_Read() As String

    Return $lastPath

End
