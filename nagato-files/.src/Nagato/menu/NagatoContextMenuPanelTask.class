' Gambas class file

Inherits NagatoContextMenu

Private Enum MenuNone, MenuClose, MenuMinimize, MenuMaximize, MenuAddDesktop, MenuRemoveDesktop

Public _$desktopWindow As DesktopWindow

Private Sub addWindowMenu()
    
    Dim yukiMenu As NagatoSubMenuPanelTaskMoveTo
    
    With Me._$desktopWindow
        Me._AddContextMenu2(("Close"), MenuClose, "button-cross", True)
        Me._AddContextMenu2(("Minimize"), MenuMinimize, "navigation-down", (Not .Minimized))
        Me._AddContextMenu2(("Maximize"), MenuMaximize, "navigation-up", (Not .Maximized))
            Me._AddContextMenu("", MenuNone)
        yukiMenu = New NagatoSubMenuPanelTaskMoveTo(Me._$rootMenu, .Desktop) As "MoveToMenu"
            Me._AddContextMenu("", MenuNone)
    End With
    
End

Public Sub _SetOptionalVariant(argVariant As Variant)
    
    Me._$desktopWindow = argVariant
    
End

Public Sub _AddChildMenus()
    
    If Object.IsValid(Me._$desktopWindow) Then addWindowMenu()
    Me._AddContextMenu(("Add Desktop"), MenuAddDesktop, MikuruIcon.Get("button-add"))
    Me._AddContextMenu(("Remove Desktop"), MenuAddDesktop, MikuruIcon.Get("button-remove"))
    
End

Public Sub ContextMenu_Click()
    
    Select Case Last.Tag
        Case MenuClose
            Me._$desktopWindow.Close()
        Case MenuMinimize
            Me._$desktopWindow.Minimized = True
        Case MenuMaximize
            Me._$desktopWindow.Maximized = True
        Case MenuAddDesktop
            Inc Desktop.Count
        Case MenuRemoveDesktop
            Dec Desktop.Count
    End Select
    
End

Public Sub MoveToMenu_MoveTo(argDesktopIndex As Integer)
    
    Me._$desktopWindow.Desktop = argDesktopIndex
    
End
