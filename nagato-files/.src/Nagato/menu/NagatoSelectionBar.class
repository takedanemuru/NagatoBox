' Gambas class file

Inherits NagatoMenuPipe

Property Read Count As Integer
Property Read Paths As String[]
Property Read LastSelected As String

Private $selection As New NagatoSelection As "Selection"
Private $widgets As NagatoSelectionBarWidgets

Event Cancel

Public Sub _new(argContainer As TabStrip)
    
    $widgets = New NagatoSelectionBarWidgets(argContainer) As "Widgets"
    
End

Public Function Exist(argPath As String) As Boolean
    
    Return $selection.Exist(argPath)
    
End

Public Sub ClearAll()
    
    Clipboard.Clear()
    $selection.ClearAll()
    
End

Public Sub ClearWithoutLastSelected()
    
    $selection.ClearWithoutLastSelection()
    
End

Public Sub Remove(argPath As String)
    
    $selection.RemovePath(argPath)
    
End

Public Sub Push(argPath As String, argLeftClick As Boolean)
    
    $selection.Push(argPath, argLeftClick)
    
End

Public Sub SetPaths(argPaths As String[])
    
    $selection.SetPaths(argPaths)
    Me.Selection_Changed()
    
End

Public Sub Widgets_ButtonAction(argAction As Integer)
    
    Select Case argAction
        Case NagatoSelectionBarWidgets.ButtonAll
            Raise Cancel
        Case NagatoSelectionBarWidgets.ButtonCopyTo
            MikuruFileManuever.CopyTo($selection.Paths)
        Case NagatoSelectionBarWidgets.ButtonMoveTo
            MikuruFileManuever.MoveTo($selection.Paths)
        Case NagatoSelectionBarWidgets.ButtonDelete
            NagatoTrash.Delete($selection.Paths)
    End Select
    
End

Public Sub Selection_Changed()
    
    $widgets.SetCount($selection.Count)
    
End

Private Function Count_Read() As Integer

    Return $selection.Paths.Count

End

Private Function Paths_Read() As String[]

    Return $selection.Paths

End

Private Function LastSelected_Read() As String

    Return $selection.LastPath

Catch
    Return ""

End
