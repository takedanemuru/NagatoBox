' Gambas class file

Private Const IconSize As Integer = 128

Private $drawingArea As DrawingArea
Private $currentPath As String

Private Sub drawHeader(argY As Integer)
    
    Dim yukiTemplate As String = "Size:<br>Permission:<br>Access:<br>Modefy:<br>Change:<br>"
    Dim yukiRect As New Rect(16, argY + 16, IconSize + 32, $drawingArea.Font.RichTextHeight(yukiTemplate))
    
    Paint.Brush = Paint.Color(Color.White)
    Paint.RichText(yukiTemplate, yukiRect.X, yukiRect.Y, yukiRect.W, yukiRect.H, Align.Left)
    Paint.Fill()
    
End

Private Function getPropertyText(argTemplate As String) As String
    
    Dim yukiStat As Stat = Stat($currentPath)
    Dim yukiSize As String = MikuruFile.GetFileSizeText($currentPath)
    Dim yukiPermission As String = MikuruFilePermission.GetText($currentPath)
    Dim yukiLastAccess As String = MikuruFile.GetTimeDifferenceText(yukiStat.LastAccess)
    Dim yukiLastModefy As String = MikuruFile.GetTimeDifferenceText(yukiStat.LastModified)
    Dim yukiLastChange As String = MikuruFile.GetTimeDifferenceText(yukiStat.LastChange)
    
    Return Subst$(argTemplate, yukiSize, yukiPermission, yukiLastAccess, yukiLastModefy, yukiLastChange)
    
Catch
    Return ""
    
End

Private Function drawProperty(argY As Integer) As Integer
    
    Dim yukiTemplate As String = "&1<br>&2<br>&3<br>&4<br>&5<br>"
    Dim yukiRect As New Rect(16, argY + 16, IconSize + 32, $drawingArea.Font.RichTextHeight(yukiTemplate))
    
    Paint.Brush = Paint.Color(Color.White)
    Paint.RichText(getPropertyText(yukiTemplate), yukiRect.X, yukiRect.Y, yukiRect.W, yukiRect.H, Align.Right)
    Paint.Fill()
    
    Return yukiRect.H + yukiRect.Y
    
End

Private Sub drawImageProperties(argTopOffset As Integer)
    
    Dim yukiImage As Image = Image.Load($currentPath)
    Dim yukiTemplate As String = "<br>Height:<br>Width:"
    Dim yukiRect As New Rect(16, argTopOffset, IconSize + 32, $drawingArea.Font.RichTextHeight(yukiTemplate))
    Dim yukiProperties As String = Subst$("<br>&1<br>&2", yukiImage.H, yukiImage.W)
    
    Paint.Brush = Paint.Color(Color.White)
    Paint.RichText(yukiTemplate, yukiRect.X, yukiRect.Y)
    Paint.RichText(yukiProperties, yukiRect.X, yukiRect.Y, yukiRect.W, yukiRect.H, Align.Right)
    Paint.Fill()
    
End

Public Sub Paint(argY As Integer, argPath As String)
    
    Dim yukiIsImage As Boolean = DesktopMime.FromFile(argPath).Type Begins "image"
    Dim yukiTopOffset As Integer
    
    $currentPath = argPath
    
    drawHeader(argY)
    yukiTopOffset = drawProperty(argY)
    
    If yukiIsImage Then drawImageProperties(yukiTopOffset)
    
End

Public Sub _new(argDrawingArea As DrawingArea)
    
    $drawingArea = argDrawingArea
    
End
