' Gambas module file

Private Function getDirectoryWithSymbol(argSymbol As String, argSize As Integer) As Picture
    
    Dim yukiBaseImage As Image = Stock[Subst$("&1/directory", argSize)].Image
    
    Paint.Begin(yukiBaseImage)
        Paint.DrawImage(Me.Get(argSymbol, argSize * 0.66).Image, argSize * 0.33, argSize * 0.33)
    Paint.End()
    
    Return yukiBaseImage.Picture
    
End

Public Function Get(argIconName As String, Optional argSize As Integer = 16) As Picture
    
    Return image.Load(Subst$("pictures/icons/&1.png", argIconName)).Stretch(argSize, argSize).Picture
    
End

Public Function _call(argIconName As String, Optional argSize As Integer = 16) As Picture
    
    Return image.Load(Subst$("pictures/icons/&1.png", argIconName)).Stretch(argSize, argSize).Picture
    
End

Public Function GetDesktopEntryIcon(argPath As String, Optional argSize As Integer = 16) As Picture
    
    Dim yukiDesktopFile As New DesktopFile(argPath)
    Dim yukiIcon As Image
    
    If Exist(yukiDesktopFile.Icon) Then
        yukiIcon = Image.Load(yukiDesktopFile.Icon)
        If argSize > Max(yukiIcon.H, yukiIcon.W) Then
            Return yukiIcon.Picture
        Else
            Return yukiIcon.Stretch(argSize, argSize).Picture
        End If
    Else
        Return yukiDesktopFile.GetIcon(argSize).Picture
    End If
    
End

Public Function GetDirectory(argDirectory As String, Optional argSize As Integer = 16) As Picture
    
    Select Case argDirectory
        Case User.Home
            Return MikuruIcon.Get("home", argSize)
        Case NagatoXdg.UserDirs.Desktop
            Return Stock[Subst$("&1/desktop", argSize)]
        Case NagatoXdg.UserDirs.Download
            Return getDirectoryWithSymbol("hard-drive-download", argSize)
        Case NagatoXdg.UserDirs.Music
            Return getDirectoryWithSymbol("music", argSize)
        Case NagatoXdg.UserDirs.Documents
            Return getDirectoryWithSymbol("document-edit", argSize)
        Case NagatoXdg.UserDirs.Pictures
            Return getDirectoryWithSymbol("image", argSize)
        Case NagatoXdg.UserDirs.Videos
            Return getDirectoryWithSymbol("video", argSize)
        Case NagatoXdg.UserDirs.PublicShare
            Return getDirectoryWithSymbol("users", argSize)
        Case NagatoXdg.UserDirs.Templetes
            Return getDirectoryWithSymbol("ruler", argSize)
        Default
            Return Stock[Subst$("&1/directory", argSize)]
    End Select
    
End

Public Function GetDirectoryMono(argDirectory As String, Optional argSize As Integer = 16) As Picture
    
    Select Case argDirectory
        Case User.Home
            Return Me.Get("home", argSize)
        Case NagatoXdg.UserDirs.Desktop
            Return Me.Get("desktop", argSize)
        Case NagatoXdg.UserDirs.Documents
            Return Me.Get("document", argSize)
        Case NagatoXdg.UserDirs.Music
            Return Me.Get("music", argSize)
        Case NagatoXdg.UserDirs.Download
            Return Me.Get("hard-drive-download", argSize)
        Case NagatoXdg.UserDirs.Pictures
            Return Me.Get("image", argSize)
        Case NagatoXdg.UserDirs.PublicShare
            Return Me.Get("users", argSize)
        Case NagatoXdg.UserDirs.Videos
            Return Me.Get("video", argSize)
        Case NagatoXdg.UserDirs.Templetes
            Return Me.Get("documents", argSize)
        Default
            Return Me.Get("folder", argSize)
    End Select
    
End

