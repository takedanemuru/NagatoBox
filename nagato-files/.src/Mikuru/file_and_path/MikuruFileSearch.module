' Gambas module file

Private Sub setResult(argPath As String, argQuery As String, ByRef refPaths As String[])
    
    If File.Name(argPath) Like "*" & argQuery & "*" Then 
        If Not NagatoSettings.ShowHidden And If File.Name(argPath) Begins "." Then Return
        refPaths.Add(argPath)
    Endif
    
End

Public Function Seach(argDirectory As String, argQuery As String) As String[]
    
    Dim yukiPath As String
    Dim yukiPaths As New String[]
    
    For Each yukiPath In RDir(argDirectory).Sort(gb.IgnoreCase)
        setResult(argDirectory &/ yukiPath, argQuery, ByRef yukiPaths)
        If yukiPaths.Count >= 500 Then Break
    Next
    
    Return yukiPaths
    
End

Public Function SeachNonRecursive(argDirectory As String, argQuery As String) As String[]
    
    Dim yukiPath As String
    Dim yukiPaths As New String[]
    
    For Each yukiPath In Dir(argDirectory).Sort(gb.IgnoreCase)
        setResult(argDirectory &/ yukiPath, argQuery, ByRef yukiPaths)
        If yukiPaths.Count >= 500 Then Break
    Next
    
    Return yukiPaths
    
End

Private Function getTagetPath(argDirectory As String, argRecursive As Boolean) As String[]
    
    If argRecursive Then
        Return RDir(argDirectory).Sort(gb.IgnoreCase)
    Else
        Return Dir(argDirectory).Sort(gb.IgnoreCase)
    Endif
    
End

Public Function SeachQuery(argDirectory As String, argQuery As String, argRecursive As Boolean) As String[]
    
    Dim yukiPath As String
    Dim yukiTarget As String[]
    Dim yukiResult As New String[]
    
    For Each yukiPath In getTagetPath(argDirectory, argRecursive)
        setResult(argDirectory &/ yukiPath, argQuery, ByRef yukiResult)
        If yukiResult.Count >= 500 Then Break
    Next
    
    Return yukiResult
    
End
