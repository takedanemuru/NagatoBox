' Gambas module file

Property Read PathsCollection As Collection 'key as source, value as target
Property Read Mode As Integer

Private Enum ModeNone, ModeCopy, ModeCut, ModeTrash

Private $pathsCollection As New Collection
Private $mode As Integer = ModeNone

Public Sub CopyUriList(argTargetDirectory As String, argUriList As String)
    
    Dim yukiPath As String
    
    For Each yukiPath In NagatoDrag2.GetPaths(argUriList)
        Debug yukiPath
        Try Copy yukiPath To MikuruPath.GetSafePathName(argTargetDirectory &/ File.Name(yukiPath))
    Next
    
End

Private Sub setProperties(argMode As Integer, argPaths As Collection)
    
    $mode = argMode
    $pathsCollection = argPaths.Copy()
    
End

Private Sub copyDir(argTargetDirectory As String, argSourceDirectory As String)
    
    Dim yukiPath As String
    Dim yukiTargetPath As String
    Dim yukiSourcePath As String
    
    Mkdir argTargetDirectory
    
    For Each yukiPath In Dir(argSourceDirectory)
        yukiTargetPath = argTargetDirectory &/ yukiPath
        yukiSourcePath = argSourceDirectory &/ yukiPath
        If IsDir(yukiSourcePath) Then
            copyDir(yukiTargetPath, yukiSourcePath)
        Else
            Copy yukiSourcePath To yukiTargetPath
        Endif
    Next
    
End

Public Sub MoveTo(argPaths As String[])
    
    Dim yukiPath As String
    Dim yukiTargetPath As String
    Dim yukiCollection As New Collection
    
    Dialog.Title = ("Move To ...")
    
    If Not Dialog.SelectDirectory() Then
        For Each yukiPath In argPaths
            yukiTargetPath = MikuruPath.GetSafePathName(Dialog.Path &/ File.Name(yukiPath))
            Try Move yukiPath To yukiTargetPath
            yukiCollection.Add(yukiTargetPath, yukiPath)
        Next
    Endif
    
Finally
        
End

Public Sub CopyTo(argPaths As String[])
    
    Dim yukiPath As String
    Dim yukiTargetPath As String
    Dim yukiCollection As New Collection
    
    Dialog.Title = ("Copy To ...")
    
    If Dialog.SelectDirectory() Then Return

    For Each yukiPath In argPaths
        yukiTargetPath = MikuruPath.GetSafePathName(Dialog.Path &/ File.Name(yukiPath))
        If Not IsDir(yukiPath) Then
            Try Copy yukiPath To yukiTargetPath
        Else
            copyDir(yukiTargetPath, yukiPath)
        End If
        yukiCollection.Add(yukiTargetPath, yukiPath)
    Next
    
Finally
    If Not Error Then setProperties(ModeCopy, yukiCollection)

End

Public Sub Remove(argPaths As String[])
    
    Dim yukiPath As String
    Dim yukiCollection As New Collection
    
    For Each yukiPath In argPaths
        MikuruFile.TrashFile(yukiPath)
        yukiCollection.Add("", yukiPath)
    Next
    
Finally
    If Not Error Then setProperties(ModeTrash, yukiCollection)

End

Private Function PathsCollection_Read() As Collection

    Return $pathsCollection

End

Private Function Mode_Read() As Integer

    Return $mode

End
