' Gambas module file

Public Enum Image, Music, Directory, None

Private Function decodeUrl(argUrl As String) As String
    
    Dim yukiCount As Integer
    Dim yukiPath As String = Replace$(URL.Decode(argUrl), "file://", "")
    
    For yukiCount = 0 To 5
        If Exist(yukiPath) Then Return yukiPath
        yukiPath = Left$(yukiPath, -1 * yukiCount)
    Next
    
    Return ""
    
End

Public Function IsValideMediaFilePath(argPath As String) As Boolean
    
    If Not Exist(argPath) Then
        Return False
    Else If DesktopMime.FromFile(argPath).Type Begins "audio" Then
        Return True
    Else If DesktopMime.FromFile(argPath).Type Begins "video" Then
        Return True
    Else
        Return False
    End If
    
End

Public Function Sanitize(argPaths As String[]) As String[]
    
    Dim yukiPath As String
    Dim yukiResult As New String[] 
    
    For Each yukiPath In argPaths
        If Not Exist(yukiPath) Then
            Continue
        Else If DesktopMime.FromFile(yukiPath).Type Begins "audio" Then
            yukiResult.Add(yukiPath)
        Else If DesktopMime.FromFile(yukiPath).Type Begins "video" Then
            yukiResult.Add(yukiPath)
        End If
    Next
    
    Return yukiResult
    
End

Public Function GetDragDataType(argData As String) As Integer
    
    Dim yukiUrl As String
    Dim yukiPath As String
    
    For Each yukiUrl In Split(argData, gb.CrLf, "", True)
        yukiPath = decodeUrl(yukiUrl)
        Debug DesktopMime.FromFile(yukiPath).Type
        If IsDir(yukiPath) Then Return Me.Directory
        If DesktopMime.FromFile(yukiPath).Type Begins "image" Then Return Me.Image
        If DesktopMime.FromFile(yukiPath).Type Begins "audio" Then Return Me.Music
    Next
    
    Return Me.None
    
End

Public Function GetDirecoryPath(argData As String) As String
    
    Dim yukiUrl As String
    Dim yukiPath As String 
    
    For Each yukiUrl In Split(argData, gb.CrLf, "", True)
        yukiPath = decodeUrl(yukiUrl)
        If Not Exist(yukiPath) Or If Not IsDir(yukiPath) Then
            Continue
        Else
            Return yukiPath
        End If
    Next
    
Catch
    Return ""
    
End

Public Function GetImagePath(argData As String) As String
    
    Dim yukiUrl As String
    Dim yukiPath As String
    
    For Each yukiUrl In Split(argData, gb.CrLf, "", True)
        yukiPath = decodeUrl(yukiUrl)
        If DesktopMime.FromFile(yukiPath).Type Begins "image" Then Return yukiPath
    Next
    
End

Public Function GetMusicPaths(argData As String) As String[]
    
    Dim yukiUrl As String
    Dim yukiPath As String
    Dim yukiPaths As New String[]
    
    For Each yukiUrl In Split(argData, gb.CrLf, "", True)
        yukiPath = decodeUrl(yukiUrl)
        If DesktopMime.FromFile(yukiPath).Type Begins "audio" Then yukiPaths.Add(yukiPath)
    Next
    
    Return yukiPaths
    
End

Public Function GetUrl(argPath As String) As String
    
    Return Media.URL(argPath)
    
End
