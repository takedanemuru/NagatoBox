' Gambas class file

Inherits NagatoGrids

Property Read Selection As Integer[]

Private Enum ColumnIcon, ColumnTitle, ColumnCount, ColumnSpacer

Private Sub refreshData()
    
    Dim yukiResult As Result = NagatoDBMedia.GetAllIdResult()
    
    For Each yukiResult
        Inc Me._$grids.Rows.Count
        Me._$grids[Me._$grids.Rows.Max, ColumnTitle].Text = yukiResult[NagatoDBMedia.ColumnPlaylistName]
        Me._AdjustColumnWidth(ColumnTitle, Me._$grids.Rows.Max)
        Me._$grids[Me._$grids.Rows.Max, ColumnCount].Text = NagatoDBMedia.GetMusicCountInPlaylist(yukiResult[NagatoDBMedia.ColumnId])
        Me._$grids[Me._$grids.Rows.Max, ColumnCount].Alignment = Align.Right
        Me._AdjustColumnWidth(ColumnCount, Me._$grids.Rows.Max)
        If Odd(Me._$grids.Rows.Max) Then Me._SetBackgroundColor(Me._$grids.Rows.Max, MikuruColor.GridBackgroundViolet)
    Next
    
End

Public Sub _InitializeGrids() 'override
    
    With Me._$grids
        .Columns.Count = 4
        .Columns[ColumnIcon].W = MikuruUx.Padding
        .Columns[ColumnTitle].Text = "Name"
        .Columns[ColumnCount].Text = "Musics"
    End With
    
    If NagatoDBMedia.HasPlaylist() Then refreshData()
    
End

Public Sub Refresh()
    
    Me._$grids.Clear()
    Me._InitializeGrids()
    
End

Public Sub Asakura_Activate()
    
    Dim yukiPaths As String[]
    
    If Me._$grids.Rows.Selection.Count > 0 Then
        yukiPaths = NagatoDBMedia.GetMusicPathsInPlaylist(Me._GetSelectionText(ColumnTitle)[0])
        NagatoQueue.AddMusics(yukiPaths)
    Endif
    
End

Private Function Selection_Read() As Integer[]

    Return Me._$grids.Rows.Selection
    
Catch
    Return [-1]

End
