' Gambas class file

Inherits NagatoGrids

Private Enum ColumnIcon, ColumnTitle, ColumnArtist, ColumnAlbum

Private $obserber As Observer

Private Sub setPlayMark(argRow As Integer)
    
    Dim yukiRow As Integer
    
    For yukiRow = 0 To Me._$grids.Rows.Max
        Me._$grids[yukiRow, 0].Picture = IIf(yukiRow = argRow, MikuruIcon.Get("button-play"), Null)
    Next
    
End

Private Sub setPlayingIcon(argRowIndex As Integer)
    
    If argRowIndex <> NagatoQueue.CurrentIndex Then
        Return 
    Else If NagatoQueue.State = Media.Playing Then
        Me._$grids[argRowIndex, ColumnIcon].Picture = MikuruIcon.Get("button-play")
    Else
        Me._$grids[argRowIndex, ColumnIcon].Picture = MikuruIcon.Get("button-pause")
    End If
    
End

Private Sub refreshData()
    
    Dim yukiRowIndex As Integer
    
    If Not Object.IsValid(Me._$grids) Then Return
    
    Me._ClearGrids()
    
    For yukiRowIndex = 0 To NagatoQueue.Count - 1
        Inc Me._$grids.Rows.Count
        setPlayingIcon(yukiRowIndex)
        Me._SetGridData(Me._$grids.Rows.Max, ColumnTitle, NagatoQueue[yukiRowIndex].Title)
        Me._SetGridData(Me._$grids.Rows.Max, ColumnArtist, NagatoQueue[yukiRowIndex].Artist)
        Me._SetGridData(Me._$grids.Rows.Max, ColumnAlbum, NagatoQueue[yukiRowIndex].Album)
        If Odd(yukiRowIndex) Then Me._SetBackgroundColor(yukiRowIndex, MikuruColor.GridBackgroundViolet)
    Next
    
Catch
    Return
    
End

Public Sub _InitializeGrids() 'override
    
    With Me._$grids
        .Columns.Count = 5
        .Columns[ColumnIcon].W = MikuruUx.Padding
        .Columns[ColumnTitle].Text = "Title"
        .Columns[ColumnArtist].Text = "Artist"
        .Columns[ColumnAlbum].Text = "Album"
    End With
    
    refreshData()
    
    $obserber = New Observer(NagatoQueue) As "Asakura"
    
End

Public Sub _ContextMenu() ' override
    
    Dim yukiMenu As New NagatoContectMenuCurrent As "ContextMenu"
    
    yukiMenu.PopUp()
    
End

Public Sub MoveTo(argUrl As String)
    
    Dim yukiRow As Integer
    
    Me._ClearIcon(ColumnIcon)
    
    For yukiRow = 0 To Me._$grids.Rows.Max
        If NagatoQueue[yukiRow].Path = argUrl Then
            Me._$grids[yukiRow, 0].EnsureVisible()
            setPlayingIcon(yukiRow)
        Endif
    Next
    
End

Public Sub SetMark(argRow As Integer)
    
    setPlayMark(argRow)
    
End

Public Sub Refresh()
    
    refreshData()
    
End

Public Sub ContextMenu_Delete()
    
    Dim yukiRow As Integer
    
    For Each yukiRow In Me._$grids.Rows.Selection
        NagatoQueue.DeleteMusic(NagatoQueue[yukiRow].Path)
    Next
    
End

Public Sub _Activate() 'override
    
   NagatoQueue.SetPathAndPlay(NagatoQueue[Me._$grids.Row].Path)
   Me.SetMark(Me._$grids.Row)
    
End

Public Sub _ColumnClick(argIndex As Integer) 'override
    
    Me._$sortAscend = Not Me._$sortAscend
    
    If argIndex = 0 Then Return
    
    NagatoQueue.Sort(argIndex, Me._$sortAscend)
    
End

Public Sub Asakura_State()
    
    Dim yukiRowIndex As Integer
    
    Debug NagatoQueue.State
    
    For yukiRowIndex = 0 To NagatoQueue.Count - 1
        setPlayingIcon(yukiRowIndex)
    Next
    
End
