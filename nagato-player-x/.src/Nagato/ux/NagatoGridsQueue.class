' Gambas class file

Inherits NagatoGrids

Private Enum ColumnIcon, ColumnTitle, ColumnArtist, ColumnAlbum, ColumnNull, ColumnTime

Private $playMark As NagatoGridsPlayMark
Private $handlerUserInput As NagatoGridViewHandlerUserInputQueue

Private Sub insertRow(argRow As Integer)
    
    Dim yukiElement As NagatoMusicElement = NagatoQueue[argRow]
    
    Me._SetGridData2(argRow, ColumnTitle, yukiElement.Title, Align.Left)
    Me._SetGridData2(argRow, ColumnArtist, yukiElement.Artist, Align.Left)
    Me._SetGridData2(argRow, ColumnAlbum, yukiElement.Album, Align.Left)
    Me._SetGridData2(argRow, ColumnTime, yukiElement.DurationReadable, Align.Right)

End

Private Sub resizeColumns()
    
    Dim yukiSize As Integer = HaruhiPlayList.W * 0.28
    
    Me._ResizeColumns(MikuruUx.Padding, yukiSize, yukiSize, yukiSize, MikuruUx.Padding)
    
End

Private Sub insertRows() 
    
    Dim yukiRow As Integer

    For yukiRow = 0 To NagatoQueue.ChannelList.Max
        insertRow(yukiRow)
    Next
    
End

Public Sub Refresh()
    
    Me._$grids.Clear()
    Me._$grids.Rows.Count = NagatoQueue.ChannelList.Max + 1
    insertRows()
    $playMark.Set(NagatoQueue.ChannelCurrent.Index) 
    Me._SetBackgroundStripe(MikuruColor.GridBackgroundViolet)
    
End

Public Sub _InitializeGrids() 'override
    
    Me._SetColumns("", ("Title"), ("Artist"), ("Album"), "", ("Duration"))
    $playMark = New NagatoGridsPlayMark(Me._$grids)
    $handlerUserInput = New NagatoGridViewHandlerUserInputQueue(Me._$grids) As "UserInput"
    Me.Refresh()
    
End

Public Sub RefreshRows(argRows As Integer[])
    
    Dim yukiRow As Integer
    
    For Each yukiRow In argRows
        insertRow(yukiRow)
    Next
    
End

Public Sub RefreshSelection(argIndexes As Integer[])
    
    Dim yukiIndex As Integer
    
    For Each yukiIndex In argIndexes
        Try Me._$grids.Rows[yukiIndex].Selected = True
    Next
    
End

Public Sub RefreshPlaymark()
    
    $playMark.Refresh(NagatoQueue.ChannelCurrent.Index)
    
End

Public Sub UserInput_Signal(argSignal As Integer, argValues As Variant[])
    
    Select Case argSignal
        Case MikuruSignal.UserInputColumnClick
            Me._$sortAscend = Not Me._$sortAscend
            If argValues[0] > 0 Then NagatoQueue.Sort(argValues[0], Me._$sortAscend)
        Case MikuruSignal.UserInputResize
            resizeColumns()
    End Select
    
End
