' Gambas class file

Event RequestRefresh

Public Sub Drop(argData As Variant)
    
    Select Case MikuruPath.GetDragDataType(argData)
        Case MikuruPath.Image
            NagatoSettingsForm.SaveBackgroundPath(MikuruPath.GetImagePath(argData))
            Raise RequestRefresh
        Case MikuruPath.Music
            NagatoQueue(MikuruSignal.ListAddMusic, MikuruPath.GetMusicPaths(argData))
        Case MikuruPath.Directory
            NagatoQueue(MikuruSignal.ListAddDirectory, [MikuruPath.GetDirecoryPath(argData)])
    End Select
    
End

Public Sub MouseDown(argMouseX As Integer, argMouseY As Integer)

    If MikuruUx.Button.Play.Contains(argMouseX, argMouseY) Then
        NagatoQueue(MikuruSignal.QueuePlay, Null)
    Else If MikuruUx.Button.Pause.Contains(argMouseX, argMouseY) Then
        NagatoQueue(MikuruSignal.QueuePause, Null)
    Else If MikuruUx.Button.Next.Contains(argMouseX, argMouseY) Then
        NagatoQueue(MikuruSignal.QueueNext, Null)
    Else If MikuruUx.Button.Back.Contains(argMouseX, argMouseY) Then
        NagatoQueue(MikuruSignal.QueueBack, Null)
    Else If MikuruUx.Button.Shuffle.Contains(argMouseX, argMouseY) Then
        NagatoSettingsMusic.Shuffle = Not NagatoSettingsMusic.Shuffle
    Else If MikuruUx.Button.Repeat.Contains(argMouseX, argMouseY) Then
        NagatoSettingsMusic.Repeat = Not NagatoSettingsMusic.Repeat
    Else If MikuruUx.Button.Playlist.Contains(argMouseX, argMouseY) Then
        HaruhiPlayList.EnsureVisible()
    Else If MikuruUx.Button.Volume.Contains(argMouseX, argMouseY) Then
        NagatoQueue(MikuruSignal.QueueSetVolume, [MikuruMouseRate(MikuruUx.Button.Volume.Rect, argMouseX)])
    Else If MikuruUx.InfoBox.Contains(argMouseX, argMouseY) Then
        MikuruDialogPortalTagEdit.EditCurrentIndex()
    Else If MikuruUx.ProgressBar.Contains(argMouseX, argMouseY) Then
        NagatoQueue(MikuruSignal.QueueSeek, [MikuruMouseRate(MikuruUx.ProgressBar, argMouseX)])
    Endif

End
