' Gambas class file

Inherits NagatoDB

Create Static

Public _$uniqueName As String = "Media"

Private $tableLibrary As NagatoTableLibrary
Private $tablePlaylistNames As NagatoTablePlaylistNames
Private $tablePlaylistData As NagatoTablePlaylistData

Public Sub EnsureLibrary(argPath As String) ' MUST be fullpath.
    
    $tableLibrary.EnsureLibrary(argPath)
    
End

Public Function FetchDuration(argPath As String, argDuration As Float) As Boolean
    
    If Me.HasLibrary(argPath) Then Return $tableLibrary.FetchDuration(argPath, argDuration)
    
    Return False
    
End

Public Sub AddTagsByNagatoTags(argPath As String, argNagatoTags As NagatoTags)
    
    $tableLibrary.AddTagsByNagatoTags(argPath, argNagatoTags)
    
End

Public Function HasLibrary(argPath As String) As Boolean
    
    Return (Me._$connection.Find(Me.Table.Library, "path = &1", argPath).Count > 0)
    
End

Public Function GetMusicResultByPath(argPath As String) As Result
    
    Me.EnsureLibrary(argPath)
    
    Return Me._$connection.Find(Me.Table.Library, "path = &1", argPath)
    
End

Public Function GetMusicCountInPlaylist(argPlaylistId As Integer) As Integer
    
    Return Me._$connection.Find(Me.Table.PlaylistData, "playlist_name_id = &1", argPlaylistId).Count
    
End

Public Function GetMusicPathsInPlaylist(argPlaylistName As String) As String[]
    
    Dim yukiResultForId As Result = Me._$connection.Find(Me.Table.PlaylistNames, "playlist_name = &1", argPlaylistName)
    Dim yukiResult As Result = Me._$connection.Find(Me.Table.PlaylistData, "playlist_name_id = &1", yukiResultForId[Me.Column.Id])
    Dim yukiPaths As New String[]
    
    For Each yukiResult
        yukiPaths.Add(yukiResult[Me.Column.Path])
    Next
    
    Return yukiPaths
    
End

Public Sub SaveAsPlaylist(argPlaylistName As String, argPaths As String[])
    
    $tablePlaylistNames.EnsurePlaylistName(argPlaylistName)
    $tablePlaylistData.OverwritePlaylist($tablePlaylistNames.GetPlaylistNameId(argPlaylistName), argPaths)
    
End

Public Sub HasPlaylist() As Boolean
    
    Return $tablePlaylistNames.HasResult()
    
End

Public Sub GetAllIdResult() As Result
    
    Return $tablePlaylistNames.GetAllResult()
    
End

Public Sub _new()
    
    Me._SetConnection()
    
    $tableLibrary = New NagatoTableLibrary(Me._$connection)
    $tablePlaylistNames = New NagatoTablePlaylistNames(Me._$connection)
    $tablePlaylistData = New NagatoTablePlaylistData(Me._$connection)
    
End
