' Gambas class file

Inherits NagatoTable

Public Sub _EnsureTable() 'override
    
    Dim yukiTable As Table
    
    With NagatoDBMedia
        If Not Me._$connection.Tables.Exist(.TableLibrary) Then
            yukiTable = Me._$connection.Tables.Add(.TableLibrary)
            yukiTable.Fields.Add(.Column.Id, db.Serial)
            yukiTable.Fields.Add(.Column.Title, db.String)
            yukiTable.Fields.Add(.Column.Artist, db.String)
            yukiTable.Fields.Add(.Column.Album, db.String)
            yukiTable.Fields.Add(.Column.Path, gb.String)
            yukiTable.Fields.Add(.Column.PlayTimes, gb.Integer)
            yukiTable.Fields.Add(.Column.Stars, gb.Integer)
            yukiTable.Fields.Add(.Column.Duration, gb.Float)
            yukiTable.PrimaryKey = [.Column.Id]
            yukiTable.Update()
        Endif
    End With
    
End

Public Sub AddTags(argPath As String, argTags As Variant[])
    
    Dim yukiResult As Result
    
    With NagatoDBMedia
        Me._$connection.Begin()
            yukiResult = Me._$connection.Create(.TableLibrary)
            yukiResult[.Column.Path] = argPath
            yukiResult[.Column.Title] = argTags[0]
            yukiResult[.Column.Artist] = argTags[1]
            yukiResult[.Column.Album] = argTags[2]
            If argTags.Max = 4 Then yukiResult[.Column.Duration] = argTags[3]
            yukiResult.Update()
        Me._$connection.Commit()
    End With
    
Catch
    Debug Error.Text
    Me._$connection.Rollback()
    
End

Public Function FetchTags(argPath As String, argTags As Variant[]) As Boolean 'return true when something changed
    
    Dim yukiResult As Result
    Dim yukiFlag As Boolean = False
    
    With NagatoDBMedia
        Me._$connection.Begin()
            yukiResult = Me._$connection.Edit(.TableLibrary, "path = &1", argPath)
            If yukiResult[.Column.Title] <> argTags[0] Then 
                yukiResult[.Column.Title] = argTags[0]
                yukiFlag = True
            End If
            If yukiResult[.Column.Artist] <> argTags[1] Then
                yukiResult[.Column.Artist] = argTags[1]
                yukiFlag = True
            End If
            If yukiResult[.Column.Album] <> argTags[2] Then 
                yukiResult[.Column.Album] = argTags[2]
                yukiFlag = True
            End If
            yukiResult.Update()
        Me._$connection.Commit()
    End With
    
    Return yukiFlag
    
Catch
    Debug Error.Text
    Me._$connection.Rollback()
    Return False
    
End

Public Function FetchDuration(argPath As String, argDuration As Float) As Boolean
    
    Dim yukiResult As Result
    Dim yukiFlag As Boolean = False
    
    With NagatoDBMedia
        Me._$connection.Begin()
            yukiResult = Me._$connection.Edit(.TableLibrary, "path = &1", argPath)
            yukiResult[.Column.Duration] = argDuration
            yukiResult.Update()
        Me._$connection.Commit()
        yukiFlag = True
    End With
    
    Return yukiFlag
    
Catch
    Debug Error.Text
    Me._$connection.Rollback()
    Return False
    
End

Public Sub EnsureLibrary(argPath As String) ' MUST be fullpath.
    
    Dim yukiResult As Result
    
    If Me._$connection.Find(NagatoDBMedia.TableLibrary, "path = &1", argPath).Count > 0 Then Return
    
    Me._$connection.Begin()
        yukiResult = Me._$connection.Create(NagatoDBMedia.TableLibrary)
        yukiResult[NagatoDBMedia.Column.Title] = MikuruId3TagInfo.GetTitle(argPath)
        yukiResult[NagatoDBMedia.Column.Artist] = MikuruId3TagInfo.GetArtist(argPath)
        yukiResult[NagatoDBMedia.Column.Album] = MikuruId3TagInfo.GetAlbum(argPath)
        yukiResult[NagatoDBMedia.Column.Duration] = MikuruDuration.GetDuration(argPath)
        yukiResult[NagatoDBMedia.Column.Path] = argPath
        yukiResult.Update()
    Me._$connection.Commit()
    
Catch
    Debug Error.Text
    Me._$connection.Rollback()
    
End
