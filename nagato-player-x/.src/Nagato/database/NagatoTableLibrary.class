' Gambas class file

Inherits NagatoTable

Public Sub _EnsureTable() 'override
    
    Dim yukiTable As Table
    
    Me._$connection.Open()
    
    If Not Me._$connection.Tables.Exist(NagatoDBMedia.Table.Library) Then
        yukiTable = Me._$connection.Tables.Add(NagatoDBMedia.Table.Library)
        yukiTable.Fields.Add(NagatoDBMedia.Column.Id, db.Serial)
        yukiTable.Fields.Add(NagatoDBMedia.Column.Title, db.String)
        yukiTable.Fields.Add(NagatoDBMedia.Column.Artist, db.String)
        yukiTable.Fields.Add(NagatoDBMedia.Column.Album, db.String)
        yukiTable.Fields.Add(NagatoDBMedia.Column.Path, gb.String)
        yukiTable.Fields.Add(NagatoDBMedia.Column.Duration, gb.Float)
        yukiTable.PrimaryKey = [NagatoDBMedia.Column.Id]
        yukiTable.Update()
    Endif
    
End

Public Sub AddTags(argPath As String, argTags As MediaTagList)
    
    Dim yukiResult As Result
    
    Me._$connection.Begin()
        yukiResult = Me._$connection.Create(NagatoDBMedia.Table.Library)
        yukiResult[NagatoDBMedia.Column.Path] = argPath
        yukiResult[NagatoDBMedia.Column.Title] = argTags["title"]
        yukiResult[NagatoDBMedia.Column.Artist] = argTags["artist"]
        yukiResult[NagatoDBMedia.Column.Album] = argTags["album"]
        yukiResult.Update()
    Me._$connection.Commit()
    
Catch
    Me._$connection.Rollback()
    
End

Private Function isChanged(argResult As Result, argTags As MediaTagList) As Boolean
    
    If argResult[NagatoDBMedia.Column.Title] <> argTags["title"] Then Return True
    If argResult[NagatoDBMedia.Column.Artist] <> argTags["artist"] Then Return True
    If argResult[NagatoDBMedia.Column.Album] <> argTags["album"] Then Return True
    
    Return False
    
End

Public Function FetchTags(argPath As String, argTags As MediaTagList) As Boolean 'return true when something changed
    
    Dim yukiResult As Result
    Dim yukiChanged As Boolean 
    
    Me._$connection.Begin()
        yukiResult = Me._$connection.Edit(NagatoDBMedia.Table.Library, "path = &1", argPath)
        yukiChanged = isChanged(yukiResult, argTags)
        yukiResult[NagatoDBMedia.Column.Title] = argTags["title"]
        yukiResult[NagatoDBMedia.Column.Artist] = argTags["artist"]
        yukiResult[NagatoDBMedia.Column.Album] = argTags["album"]
        yukiResult.Update()
    Me._$connection.Commit()
    
    Return yukiChanged
    
Catch
    Me._$connection.Rollback()
    Return False
    
End

Public Function FetchDuration(argPath As String, argDuration As Float) As Boolean
    
    Dim yukiResult As Result
    Dim yukiFlag As Boolean = False
    
    Me._$connection.Begin()
        yukiResult = Me._$connection.Edit(NagatoDBMedia.Table.Library, "path = &1", argPath)
        yukiFlag = (yukiResult[NagatoDBMedia.Column.Duration] = argDuration)
        If Not yukiFlag Then yukiResult[NagatoDBMedia.Column.Duration] = argDuration
        yukiResult.Update()
    Me._$connection.Commit()
    
    Return yukiFlag
    
Catch
    Me._$connection.Rollback()
    Return False
    
End

Public Sub EnsureLibrary(argPath As String) ' MUST be fullpath.
    
    Dim yukiResult As Result
    
    If Me._$connection.Find(NagatoDBMedia.Table.Library, "path = &1", argPath).Count > 0 Then Return
    
    Me._$connection.Begin()
        yukiResult = Me._$connection.Create(NagatoDBMedia.Table.Library)
        yukiResult[NagatoDBMedia.Column.Title] = MikuruId3TagInfo.GetTitle(argPath)
        yukiResult[NagatoDBMedia.Column.Artist] = MikuruId3TagInfo.GetArtist(argPath)
        yukiResult[NagatoDBMedia.Column.Album] = MikuruId3TagInfo.GetAlbum(argPath)
        yukiResult[NagatoDBMedia.Column.Duration] = MikuruDuration.GetDuration(argPath)
        yukiResult[NagatoDBMedia.Column.Path] = argPath
        yukiResult.Update()
    Me._$connection.Commit()
    
Catch
    Me._$connection.Rollback()
    
End
