' Gambas class file

Inherits DBusObject

Create Static

Property Read Title As String
Property Read Artist As String
Property Read Album As String
Property Read ProgressInText As String
Property Read Shuffle As Boolean
Property Read Repeat As Boolean

Public Sub AddMusics(argPaths As String[])
    
    NagatoQueue(MikuruSignal.ListAddMusic, argPaths)
    
End

Public Sub Play() 
    
    NagatoQueue(MikuruSignal.QueuePlay, Null)
    
End

Public Sub Pause() 
    
    NagatoQueue(MikuruSignal.QueuePause, Null)
    
End

Public Sub Back() 
    
    NagatoQueue(MikuruSignal.QueueBack, Null)
    
End

Public Sub Next() 
    
    NagatoQueue(MikuruSignal.QueueNext, Null)
    
End

Public Sub ToggleShuffle() 
    
    NagatoSettingsMusic.Shuffle = Not NagatoSettingsMusic.Shuffle
    
End

Public Sub ToggleRepeat()
    
    NagatoSettingsMusic.Repeat = Not NagatoSettingsMusic.Repeat
    
End

Public Sub PlayIndex(argIndex As Integer)
    
    NagatoQueue(MikuruSignal.QueSetIndexAndPlay, [argIndex])
    
End

Public Sub MoveToCurrentDesktop() 
    
    HaruhiPlayer.MoveToCurrentDesktop()
    
End

Public Function GetTitles(argMaxIndex As Integer) As String[]

    Dim yukiIndex As Integer
    Dim yukiTitles As New String[]
    
    For yukiIndex = 0 To argMaxIndex
        yukiTitles.Add(NagatoQueue[yukiIndex].Title)
    Next

    Return yukiTitles

End

Private Function ProgressInText_Read() As String

    Return NagatoQueue.GetProperty(MikuruProperty.CurrentDurationText)

End

Private Function Title_Read() As String

    Return NagatoQueue.GetProperty(MikuruProperty.CurrentTitle)

End

Private Function Artist_Read() As String

    Return NagatoQueue.GetProperty(MikuruProperty.CurrentArtist)

End

Private Function Album_Read() As String

    Return NagatoQueue.GetProperty(MikuruProperty.CurrentAlbum)

End

Private Function Shuffle_Read() As Boolean

    Return NagatoSettingsMusic.Shuffle

End

Private Function Repeat_Read() As Boolean

    Return NagatoSettingsMusic.Repeat

End
