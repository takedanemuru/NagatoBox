' Gambas class file

Inherits NagatoPainter

Private Function getRate() As Float
    
    Dim yukiRate As Float
    
    With MikuruUx
        yukiRate = (MikuruMousePosition.X - .ProgressBar.X) / (.ProgressBar.W - .ProgressBar.X)
    End With
    
    Return yukiRate
    
End

Private Sub paintProgressBarOnMouse()
    
    Dim yukiRate As Float = getRate()
    Dim yukiBarRectangle As Rect = Me._GetBarRectangle(MikuruUx.ProgressBar, yukiRate)
    
    Me._PaintClipRectangle(MikuruUx.ProgressBar, 2 * MikuruUx.Grid)
    Me._PaintRectangle(MikuruUx.ProgressBar, MikuruColor.WidgetOnMouseLight) 'frame
    Me._PaintRectangle(yukiBarRectangle, MikuruColor.WidgetOnMouse, 2 * MikuruUx.Grid) 'bar
    Me._PaintRichText(MikuruUx.ProgressBar, Subst$("<b>&1</b>", NagatoQueue.GetProgressTextByRate(yukiRate)))
    Paint.Restore() 'restore clip rectangle
    
End

Private Sub paintProgressBarNormal()
    
    Dim yukiBarRectangle As Rect = Me._GetBarRectangle(MikuruUx.ProgressBar, NagatoQueue.ProgressRate)
    
    Me._PaintClipRectangle(MikuruUx.ProgressBar, 2 * MikuruUx.Grid)
    Me._PaintRectangle(MikuruUx.ProgressBar, MikuruColor.WidgetLight) 'frame
    Me._PaintRectangle(yukiBarRectangle, MikuruColor.Widget, 2 * MikuruUx.Grid) 'bar
    Me._PaintRichText(MikuruUx.ProgressBar, Subst$("<b>&1</b>", NagatoQueue.ProgressText))
    Paint.Restore() 'restore clip rectangle
    
End

Public Sub Draw()
    
    If MikuruUx.ProgressBar.Contains(MikuruMousePosition.X, MikuruMousePosition.Y) Then
        paintProgressBarOnMouse()
    Else
        paintProgressBarNormal()
    Endif
    
End

Public Sub _new(Optional argDrawingArea As DrawingArea)
    
    
    
End