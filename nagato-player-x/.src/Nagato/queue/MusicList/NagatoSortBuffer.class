' Gambas class file

Property Read Count As Integer
Property Read Elements As NagatoMusicElement[]
Property Read Current As Integer
Property Read PreviousPath As String

Private $sortedElements As New NagatoMusicElement[]
Private $type As Integer
Private $ascend As Boolean
Private $currenPath As String

Public Function getData(argElement As NagatoMusicElement) As String
    
    Return Choose($type, argElement.Title, argElement.Artist, argElement.Album)
    
End

Private Function isLesser(argTarget As NagatoMusicElement, argTest As NagatoMusicElement) As Boolean
    
    Dim yukiFlag As Boolean = (getData(argTarget) > getData(argTest))
    
    Return IIf($ascend, yukiFlag, Not yukiFlag)
    
End

Public Sub Set(argElement As NagatoMusicElement, argCurrent As Boolean)
    
    Dim yukiCount As Integer
    
    If argCurrent Then $currenPath = argElement.Path
    
    For yukiCount = 0 To $sortedElements.Max
        If Not isLesser(argElement, $sortedElements[yukiCount]) Then Continue
        $sortedElements.Add(argElement, yukiCount)
        Return
    Next
    
    $sortedElements.Add(argElement)

End

Public Sub _new(argType As Integer, argAscend As Boolean)
    
    $type = argType
    $ascend = argAscend
    
End

Private Function Count_Read() As Integer

    Return $sortedElements.Count

End

Private Function Elements_Read() As NagatoMusicElement[]

    Return $sortedElements

End

Private Function Current_Read() As Integer

    Dim yukiCount As Integer

    For yukiCount = 0 To $sortedElements.Max
        If $sortedElements[yukiCount].Path = $currenPath Then Return yukiCount
    Next

    Return 0

End

Private Function PreviousPath_Read() As String

    Return $currenPath

End
