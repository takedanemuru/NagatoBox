' Gambas class file

Inherits NagatoMusicListAssistant

Public Sub Sort(argType As Integer, argSortAscend As Boolean)
    
    Dim yukiBuffer As New NagatoSortBuffer(argType, argSortAscend)
    Dim yukiIndex As Integer
    
    If Me._$musicElements.Count = 0 Then Return
    
    For yukiIndex = 0 To Me._$musicElements.Count - 1
        yukiBuffer.Set(Me._$musicElements[yukiIndex], (yukiIndex = Me._$position.Current))
    Next
    
    Me._$musicElements.Set(yukiBuffer.Elements)
    Me._$position.ResetOnSort(yukiBuffer.Current, Me._$musicElements.Count)
    NagatoBroadCast(NagatoBroadCast.SignalChanged)
    
End

Public Sub Up(argSelection As Integer[]) 
    
    Dim yukiBuffer As New NagatoMoveBufferUp(argSelection, Me._$position.Current)
    Dim yukiIndex As Integer
    
    For yukiIndex = 0 To Me._$musicElements.Count - 1
        If argSelection.Exist(yukiIndex) Then yukiBuffer.AddSelected(yukiIndex, Me._$musicElements[yukiIndex])
        If Not argSelection.Exist(yukiIndex) Then yukiBuffer.AddUnselected(yukiIndex, Me._$musicElements[yukiIndex])
    Next
    
    Me._$musicElements.Set(yukiBuffer.Buffer)
    Me._$position.Current = yukiBuffer.NewPosition
    NagatoBroadCast(NagatoBroadCast.SignalSelectionMoved, yukiBuffer.NewSelection)
    
End

Public Sub Down(argSelection As Integer[]) 
    
    Dim yukiBuffer As New NagatoMoveBufferDown(Me._$musicElements, Me._$position.Current, argSelection)
    
    Me._$musicElements.Set(yukiBuffer.Buffer)
    Me._$position.Current = yukiBuffer.NewPosition
    NagatoBroadCast(NagatoBroadCast.SignalSelectionMoved, yukiBuffer.NewSelection)
    
End
