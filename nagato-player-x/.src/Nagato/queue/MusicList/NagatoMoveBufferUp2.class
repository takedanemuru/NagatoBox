' Gambas class file

Inherits NagatoObject

Private $musicElements As NagatoMusicElements 
Private $position As NagatoMusicPosition 

Private $newPosition As Integer
Private $newBuffer As New NagatoMusicElement[]
Private $newSelection As New Integer[]

Private Sub resetBuffers()
    
    $newBuffer.Clear()
    $newSelection.Clear()
    
End

Private Sub refresh(argSelection As Integer[])
    
    Dim yukIndex As Integer
    Dim yukiInsertPosition As Integer = Max(0, argSelection[0] - 1)
    
    For yukIndex = 0 To $musicElements.Count - 1
        If argSelection.Exist(yukIndex) Then 
            $newBuffer.Add($musicElements[yukIndex], yukiInsertPosition)
            $newSelection.Add(yukiInsertPosition)
            Inc yukiInsertPosition
        Else
            $newBuffer.Add($musicElements[yukIndex])
        End If
    Next
    
End

Private Sub refreshIndex() As Integer
    
    Dim yukiIndex As Integer
    Dim yukiCurrentIndex As Integer = NagatoQueue.GetProperty(MikuruProperty.CurrentIndex)
    Dim yukiUniqueIndex As Integer = $musicElements[yukiCurrentIndex].UniqueIndex
    
    For yukiIndex = 0 To $newBuffer.Max
        If $newBuffer[yukiIndex].UniqueIndex = yukiUniqueIndex Then Return yukiIndex
    Next
    
    Return 0
    
End

Public Sub Move(argSelection As Integer[])
    
    resetBuffers()
    refresh(argSelection)
    $newPosition = refreshIndex()
    
    $musicElements.Set($newBuffer)
    $position.SetIndex($newPosition)
    Raise Signal(MikuruSignal.BroadcastSelectionChanged, $newSelection)

End

Public Sub _new(argElements As NagatoMusicElements, argPosition As NagatoMusicPosition)
    
    $musicElements = argElements
    $position = argPosition
    
End
