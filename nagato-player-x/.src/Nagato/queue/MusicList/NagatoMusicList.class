' Gambas class file

Property Read ChannelMove As NagatoMusicListAssistantMove
Property Read ChannelQueue As NagatoMusicListAssistantQueue
Property Read ChannelCurrent As NagatoMusicListAssistantCurrent
Property Read ChannelTags As NagatoMusicListAssistantTags
Property Read ChannelIndex As NagatoMusicListAssistantIndex

Private $assistantMove As NagatoMusicListAssistantMove
Private $assistantQueue As NagatoMusicListAssistantQueue
Private $assistantCurrent As NagatoMusicListAssistantCurrent
Private $assistantTags As NagatoMusicListAssistantTags
Private $assistantIndex As NagatoMusicListAssistantIndex

Private $musicElements As New NagatoMusicElements
Private $position As New NagatoMusicPosition As "MusicPosition"

Private Sub initializeChannels()
    
    $assistantMove = New NagatoMusicListAssistantMove($musicElements, $position)
    $assistantQueue = New NagatoMusicListAssistantQueue($musicElements, $position)
    $assistantCurrent = New NagatoMusicListAssistantCurrent($musicElements, $position)
    $assistantTags = New NagatoMusicListAssistantTags($musicElements, $position)
    $assistantIndex = New NagatoMusicListAssistantIndex($musicElements, $position)
    
End

Private Function isDuplicate(argPath As String, argIndex As Integer) As Boolean
    
    Dim yukiIndex As Integer
    
    For yukiIndex = (argIndex - 1) DownTo 0
        If argPath = $musicElements[yukiIndex].Path Then Return True
    Next
    
    Return False
    
End

Public Sub RemoveDuplicateMusic()
    
    Dim yukiIndex As Integer
    Dim yukiIndexes As New Integer[]
    
    For yukiIndex = $musicElements.ChannelPaths.Max DownTo 1
        If isDuplicate($musicElements[yukiIndex].Path, yukiIndex) Then yukiIndexes.Add(yukiIndex)
    Next
    
    If yukiIndexes.Count > 0 Then $musicElements.ChannelQueue.DequeuByIndexes(yukiIndexes)
    NagatoBroadCast(NagatoBroadCast.SignalChanged)
    NagatoSettingsMusic.SavePaths($musicElements.ChannelPaths.All)
    
End

Public Sub _new(argPaths As String[])
    
    $musicElements.ChannelQueue.Initialize(argPaths)
    initializeChannels()
    If $musicElements.ChannelPaths.Count = 0 Then Return  
    $position.Refresh($musicElements.ChannelPaths.Count)
    If NagatoSettingsMusic.Shuffle Then $assistantIndex.Next()
    NagatoSettingsMusic.SavePaths($musicElements.ChannelPaths.All)
    NagatoBroadCast(NagatoBroadCast.SignalChanged)
    
End

Public Sub _get(argIndex As Integer) As NagatoMusicElement
    
    Return $musicElements[argIndex]
    
End

Private Function ChannelMove_Read() As NagatoMusicListAssistantMove

    Return $assistantMove

End

Private Function ChannelQueue_Read() As NagatoMusicListAssistantQueue

    Return $assistantQueue

End

Private Function ChannelCurrent_Read() As NagatoMusicListAssistantCurrent

    Return $assistantCurrent

End

Private Function ChannelTags_Read() As NagatoMusicListAssistantTags

    Return $assistantTags

End

Private Function ChannelIndex_Read() As NagatoMusicListAssistantIndex

    Return $assistantIndex

End
