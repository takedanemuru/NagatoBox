' Gambas class file

Inherits NagatoObject

Property Read HasElement As Boolean
Property Read CurrentPath As String

Private $musicElements As New NagatoMusicElements 
Private $position As New NagatoMusicPosition As "TFEI"

Private $handlerSorting As NagatoMusicListHandlerSorting
Private $handlerEnqueue As NagatoMusicListHandlerEnqueue

Public Function SetIndex(argIndex As Integer) As Boolean
    
    Return $position.SetIndex(argIndex, $musicElements.Count)
    
End

Public Function GetProerty(argProperty As Integer) As Variant
    
    Select argProperty
        Case MikuruProperty.ListCount
            Return $musicElements.Count
        Case MikuruProperty.ListMax
            Return $musicElements.Count - 1
        Case MikuruProperty.CurrentIndex
            Return $position.Current
        Default
            Return $musicElements.GetProperty(argProperty, $position.Current)
    End Select
    
End

Public Sub _new(argPaths As String[])
    
    $handlerSorting = New NagatoMusicListHandlerSorting($musicElements, $position) As "TFEI"
    $handlerEnqueue = New NagatoMusicListHandlerEnqueue($musicElements, $position) As "TFEI"

    $musicElements.Initialize(argPaths)
    If $musicElements.Count = 0 Then Return  
    $position.Refresh($musicElements.Count)
    If NagatoSettingsMusic.Shuffle Then $position.Next($musicElements.Count)
    
End

Public Sub _call(argSignal As Integer, argValues As Variant[])
    
    With MikuruSignal
        Select argSignal
            Case MikuruSignal.ListSaveAs
                $musicElements.SaveAsPlayList(argValues[0], argValues[1])
            Case MikuruSignal.QueueNext
                $position.Next($musicElements.Count)
            Case MikuruSignal.QueueBack
                $position.Back($musicElements.Count)
            Case MikuruSignal.ListSort, MikuruSignal.ListDown, MikuruSignal.ListUp
                $handlerSorting(argSignal, argValues)
            Case .ListAddMusic, .ListClear, .ListDelete, .ListDeleteDuplicateMusic
                $handlerEnqueue(argSignal, argValues)
        End Select
    End With
    
End

Public Sub _get(argIndex As Integer) As NagatoMusicElement
    
    Return $musicElements[argIndex]
    
End

Private Function HasElement_Read() As Boolean

    Return ($musicElements.Count > 0)

End

Private Function CurrentPath_Read() As String

    Return $musicElements[$position.Current].Path

Catch
    Return ""

End
