' Gambas class file

Inherits NagatoObject

Property Current As Integer

Private $randomOrder As New NagatoRandomizedOrder
Private $index As New NagatoMusicPositionIndex

Private Function checkCount(argCount As Integer) As Boolean
    
    If 1 >= argCount Then Return False

    If $index.Reset(argCount - 1) Then $randomOrder.Refresh(argCount - 1)
    Return True
    
End

Public Sub Next(argCount As Integer)
    
    If Not checkCount(argCount) Then Return

    $index.Next()
    If NagatoSettingsMusic.Shuffle Then $index.Current = $randomOrder.Next()
    Raise Signal(MikuruSignal.BroadcastIndexMoved, Null)
    
End

Public Sub Back(argCount As Integer)
    
    If Not checkCount(argCount) Then Return

    $index.Back()
    If NagatoSettingsMusic.Shuffle Then $index.Current = $randomOrder.Back()
    Raise Signal(MikuruSignal.BroadcastIndexMoved, Null)
    
End

Public Sub Refresh(argCount As Integer)  
    
    checkCount(argCount)
    
End

Public Sub ResetOnSort(argIndex As Integer, argCount As Integer)
    
    $randomOrder.RefreshOnSort(argIndex, argCount - 1)
    $index.Current = argIndex
    
End

Public Sub ResetOnDelete(argDeleteIndex As Integer)
    
    $index.Reset($index.Max - 1)
    $index.Current = 0
    
End

Public Sub ResetOnAdd(argCount As Integer)
    
    $index.Reset($index.Max + argCount)
    $index.Current = 0
    
End

Public Sub SetPositionOnShuffle(argIndex As Integer)
    
    $index.Current = $randomOrder.FindIndex(argIndex)
    
End

Private Function Current_Read() As Integer

    Return $index.Current

End

Private Sub Current_Write(Value As Integer)

    $index.Current = Value

End
