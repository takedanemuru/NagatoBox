' Gambas class file

Property Title As String
Property Artist As String
Property Album As String
Property Read Duration As Float

Private $title As String = ""
Private $artist As String = ""
Private $album As String = ""
Private $duration As Float

Private Sub setTitle(argPath As String)
    
    Dim yukiTitle As String = MikuruId3TagInfo.GetTitle(argPath)
    
    If yukiTitle = "" Then
        $title = File.BaseName(argPath)
    Else
        $title = yukiTitle
    End If
    
Catch
    $title = ("UNKNOWN")
    
End

Private Sub setArtist(argPath As String)
    
    $artist = MikuruId3TagInfo.GetArtist(argPath)
    
Catch
    $artist = ""
    
End

Private Sub setAlbum(argPath As String)
    
    $album = MikuruId3TagInfo.GetAlbum(argPath)
    
Catch
    $album = ""
    
End

Private Sub setTagFromDatabase(argPath As String)
    
    Dim yukiResult As Result = NagatoDBMedia.GetMusicResultByPath(argPath)
    
    With NagatoDBMedia
        $title = yukiResult[.ColumnTitle]
        $artist = yukiResult[.ColumnArtist]
        $album = yukiResult[.ColumnAlbum]
        $duration = yukiResult[.ColumnDuration]
    End With
    
End

Public Sub SetTag(argPath As String)
    
    If NagatoDBMedia.HasLibrary(argPath) Then
        setTagFromDatabase(argPath)
    Else
        setTitle(argPath)
        setArtist(argPath)
        setAlbum(argPath)
        $duration = MikuruDuration.GetDuration(argPath)
    End If
    
End

Private Function Title_Read() As String

    Return $title

End

Private Sub Title_Write(Value As String)

    $title = Value

End

Private Function Artist_Read() As String

    Return $artist 

End

Public Sub TagParser_MediaTagList(argTagList As String[])
    
    MikuruArrayTest(argTagList)
    
End

Private Sub Artist_Write(Value As String)

   $artist = Value 

End

Private Function Album_Read() As String

    Return $album

End

Private Sub Album_Write(Value As String)

    $album = Value

End

Private Function Duration_Read() As Float

    Return $duration

End
