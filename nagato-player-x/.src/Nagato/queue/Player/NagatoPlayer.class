' Gambas class file

Property Read State As Integer
Property SoftwareVolume As Float

Private $player As New MediaPlayer As "Player"

Event MusicEnd

Public Sub SetByRate(argRate As Float) 
    
    $player.Position = $player.Duration * Min(argRate, 1)
    
End

Public Sub SetIndexAndPlay(argIndex As Integer) As Boolean
    
    If Not NagatoQueue.ChannelList.SetIndex(argIndex) Then Return False
    Try $player.Stop
    $player.URL = NagatoQueue.ChannelCurrent.Url
    $player.Play()
    
    Return True
    
Catch
    Return False
    
End

Public Sub Play(Optional argPosition As Float)
    
    If $player.State <> Media.Paused Then
        Try $player.Stop
        Try $player.URL = NagatoQueue.ChannelCurrent.Url
    End If
    
    $player.Play()
    If argPosition Then $player.Position = argPosition
    
Catch
    Return
    
End

Public Sub ResetUrl()
    
    Try $player.Stop()
    $player.URL = NagatoQueue.ChannelCurrent.Url
    $player.Position = 0
    
End

Public Sub Pause()
    
    Try $player.Pause()
   
End

Public Sub Stop()
    
    Try $player.Stop()
    
End

Public Function GetDurationData() As NagatoDurationData
    
    Return Object.New("NagatoDurationData", [$player.Position, $player.Duration])
    
End

Public Sub Player_End()
    
    Raise MusicEnd
    
End

Private Function State_Read() As Integer

    Return $player.State

End

Private Function SoftwareVolume_Read() As Float

    Return $player.Audio.Volume

End

Private Sub SoftwareVolume_Write(Value As Float)

    Try $player.Audio.Volume = Min(Value, 1)

End

