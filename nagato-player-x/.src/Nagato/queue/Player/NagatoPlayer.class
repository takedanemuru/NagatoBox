' Gambas class file

Inherits NagatoObject

Property Read State As Integer
Property SoftwareVolume As Float

Private $player As MediaPlayer

Event MusicEnds

Public Sub SetByRate(argRate As Float) 
    
    $player.Position = $player.Duration * Min(argRate, 1)
    
End

Public Sub TryPlay()
    
    $player.Play()
    
Catch
    Me.ResetUrl(True)
    
End

Public Sub ResetUrl(Optional argPlay As Boolean = True)
    
    Try $player.URL = NagatoQueue.GetProperty(MikuruProperty.CurrentUrl)
    If argPlay Then $player.Play()
    
End

Public Sub Pause()
    
    Try $player.Pause()
   
End

Public Sub Stop(Optional argClearUrl As Boolean = False)
    
    Object.Lock($player) ' to avoid raising _AboutToFinish
    Try $player.Stop()
    If argClearUrl Then $player.URL = ""
    Object.Unlock($player)
    
End

Public Function GetDurationData() As NagatoDurationData
    
    Return Object.New("NagatoDurationData", [$player.Position, $player.Duration])
    
End

Public Sub _new()
    
    $player = New MediaPlayer As "Player"
    $player.Pause()
    
End

Public Sub Player_AboutToFinish()
    
    Raise MusicEnds
    
End

Public Sub Player_State()
    
    If $player.State <> Media.Playing Or If $player.Duration > 0 Then Return
    $player = New MediaPlayer As "Player"
    $player.Stop()
    Raise MusicEnds

End

Private Function State_Read() As Integer

    Return $player.State

End

Private Function SoftwareVolume_Read() As Float

    Return $player.Audio.Volume

End

Private Sub SoftwareVolume_Write(Value As Float)

    Try $player.Audio.Volume = Min(Value, 1)

End
