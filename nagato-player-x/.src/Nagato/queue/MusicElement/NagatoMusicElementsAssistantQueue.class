' Gambas class file

Private $musicElements As NagatoMusicElement[]

Private Sub addElement(argPath As String)
    
    Dim yukiElement As NagatoMusicElement
    
    NagatoDBMedia.EnsureLibrary(argPath)
    yukiElement = New NagatoMusicElement(argPath)
    $musicElements.Add(yukiElement)
    
End

Public Function FindIndex(argPath As String) As Integer
    
    Dim yukiCount As Integer
    
    For yukiCount = 0 To $musicElements.Max
        If $musicElements[yukiCount].Path = argPath Then Return yukiCount
    Next
    
    Return -1
    
End

Public Function EnqueueByPaths(argPaths As String[]) As Integer
    
    Dim yukiPath As String
    Dim yukiCount As Integer = 0
    
    For Each yukiPath In MikuruPath.Sanitize(argPaths)
        If Not MikuruMusicFormat.IsPlayable(yukiPath) Then Continue
        addElement(yukiPath)
        Inc yukiCount
    Next
    
    Return yukiCount
    
End 

Public Function DequeuByIndexes(argIndexes As Integer[]) As Boolean
    
    Dim yukiIndex As Integer
    Dim yukiFlag As Boolean = False
    
    For Each yukiIndex In argIndexes.Sort(gb.Descent)
        If yukiIndex > $musicElements.Max Then Continue
        $musicElements.Remove(yukiIndex)
        yukiFlag = True
    Next
    
    Return yukiFlag
    
End

Public Sub Clear()
    
    $musicElements.Clear()
    
End

Public Sub Initialize(argPaths As String[])
    
    Dim yukiPath As String
    
    For Each yukiPath In MikuruPath.Sanitize(argPaths.Insert(NagatoSettingsMusic.LoadPaths()))
        addElement(yukiPath)
    Next
    
End

Public Sub _new(argElements As NagatoMusicElement[])
    
    $musicElements = argElements
    
End
