' Gambas class file

Inherits NagatoObject

Property Read Count As Integer

Private $musicElements As New NagatoMusicElement[]

Private Function getAllPaths() As String[]
    
    Dim yukiPaths As New String[]
    Dim yukiIndex As Integer
    
    For yukiIndex = 0 To $musicElements.Max 
        yukiPaths.Add($musicElements[yukiIndex].Path)
    Next

    Return yukiPaths
    
End

Private Function addPaths(argPaths As String[]) As Integer
    
    Dim yukiPath As String
    Dim yukiCount As Integer = 0
    
    For Each yukiPath In MikuruPath.Sanitize(argPaths)
        If Not MikuruMusicFormat.IsPlayable(yukiPath) Then Continue
        $musicElements.Add(Object.New("NagatoMusicElement", [yukiPath]))
        Inc yukiCount
    Next
    
    Raise Signal(MikuruSignal.BroadcastQueueChanged, Null)
    
    Return yukiCount
    
End

Private Function isDuplicate(argPath As String, argIndex As Integer) As Boolean
    
    Dim yukiIndex As Integer
    
    For yukiIndex = (argIndex - 1) DownTo 0
        If argPath = $musicElements[yukiIndex].Path Then Return True
    Next
    
    Return False
    
End

Public Sub RemoveDuplicateMusic()
   
    Dim yukiIndex As Integer
    Dim yukiIndexes As New Integer[]
    
    For yukiIndex = $musicElements.Max DownTo 1
        If isDuplicate($musicElements[yukiIndex].Path, yukiIndex) Then yukiIndexes.Add(yukiIndex)
    Next
    
    If yukiIndexes.Count = 0 Then Return
    
    Me.DequeueByIndexes(yukiIndexes)
    Raise Signal(MikuruSignal.BroadcastQueueChanged, Null)
    
End

Public Sub SaveQueue()
    
    NagatoSettingsMusic.SavePaths(getAllPaths())
    
End

Public Function EnqueueByPaths(argPaths As String[]) As Integer
    
    Return addPaths(argPaths)
    
End 

Public Function DequeueByIndexes(argIndexes As Integer[]) As Boolean
    
    Dim yukiIndex As Integer
    Dim yukiFlag As Boolean = False
    
    For Each yukiIndex In argIndexes.Sort(gb.Descent)
        If yukiIndex > $musicElements.Max Then Continue
        $musicElements.Remove(yukiIndex)
        yukiFlag = True
    Next
    
    Return yukiFlag
    
End

Public Sub Clear()
    
    $musicElements.Clear()
    NagatoSettingsMusic.SavePaths([""])
    
End

Public Sub Initialize(argPaths As String[])
    
    addPaths(NagatoSettingsMusic.LoadPaths())
    addPaths(argPaths)
    
End

Public Sub _get(argIndex As Integer) As NagatoMusicElement
    
    Return $musicElements[argIndex]
    
End

Public Sub SaveAsPlaylist(argPlaylistName As String)
    
    If $musicElements.Count = 0 Then Return
    
    NagatoDBPlaylists.SaveAsPlaylist(argPlaylistName, getAllPaths())
    
End

Public Sub Set(argMusicElements As NagatoMusicElement[])
    
    $musicElements = argMusicElements
    
End

Private Function Count_Read() As Integer

    Return $musicElements.Count

End
