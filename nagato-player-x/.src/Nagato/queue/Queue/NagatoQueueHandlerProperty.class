' Gambas class file

Inherits NagatoQueueHandler

Private $coverArt As Picture
Private $path As String

Private Function getDurationData() As NagatoDurationData
    
    Dim yukiDurationData As NagatoDurationData = Me._$player.GetDurationData()
    Dim yukiIndex As Integer = Me._$musicList.GetProerty(MikuruProperty.CurrentIndex)

    If yukiDurationData.Override(Me._$musicList[yukiIndex]) Then 
        Raise Signal(MikuruSignal.BroadcastId3TagChanged, [yukiIndex])
    End If

    Return yukiDurationData
    
End

Public Sub Reload()
    
    $coverArt = Null
    $path = MikuruEyeD3.GetPicturePath(Me._$musicList.CurrentPath)
    If $path Then $coverArt = MikuruCroppedImage($path, MikuruUx.CoverArt.Size)
    If Not Me._$musicList.HasElement Then Me._$player.Stop(True)
    
Catch
    Return
    
End

Public Sub _OptionalOnInitialize()
    
    Me.Reload()
    
End

Public Sub GetProperty(argProperty As Integer) As Variant
    
    Select Case argProperty
        Case MikuruProperty.PlayState
            Return Me._$player.State
        Case MikuruProperty.SoftwareVolume
            Return Me._$player.SoftwareVolume
        Case MikuruProperty.CoverArt
            Return $coverArt
        Case MikuruProperty.CoverArtPath
            Return $path
        Case MikuruProperty.CurrentDurationData
            If Me._$musicList.CurrentPath = "" Then Return Object.New("NagatoDurationDataNull", Null)
            Return getDurationData()
        Case MikuruProperty.CurrentDurationText
            If Me._$musicList.CurrentPath = "" Then Return ""
            Return getDurationData().Text
        Default
            Return Me._$musicList.GetProerty(argProperty)
    End Select
    
End
