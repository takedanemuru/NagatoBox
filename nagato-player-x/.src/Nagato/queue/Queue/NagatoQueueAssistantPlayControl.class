' Gambas class file

Inherits NagatoQueueAssistant

Private $observer As Observer

Public Sub Play()
    
    If Me._$musicList.ChannelQueue.Count = 0 Then Return
    If Not Me._$player.IsPlaying Then Me._$player.Play()
    
End

Public Sub Pause()
    
    Me._$player.Pause()
    
End

Public Sub Next()
    
    If Me._$musicList.ChannelQueue.Count = 0 Then Return
    
    Me._$musicList.ChannelIndex.Next()
    If Me._$player.IsPlaying Then 
        Try Me._$player.Play(0)
    Else
        Me._$player.ResetUrl()
    End If
    
End

Public Sub Back()
    
    If Me._$musicList.ChannelQueue.Count = 0 Then Return
    
    If Me._$player.IsPlaying And If Me._$player.ChannelProgress.Rate > 0.05 Then
        Me._$player.ChannelProgress.SetByRate(0)
    Else If Me._$player.IsPlaying Then
        Me._$musicList.ChannelIndex.Back()
        Me._$player.Play(0)
    Else ' when Me._$player is stopped/paused
        Me._$musicList.ChannelIndex.Back()
        Me._$player.ResetUrl()
    End If
    
End

Public Sub SetPathAndPlay(argPath As String)
    
    
    Me._$player.SetPathAndPlay(argPath)
    NagatoBroadCast(NagatoBroadCast.SignalTagChanged)
    
End

Public Sub _OptionalOnInitialize()
    
    $observer = New Observer(Me._$player) As "Asakura"
    
End

Public Sub Asakura_MusicEnd()
    
    If NagatoSettingsMusic.Repeat Then Me.Back()
    If Not NagatoSettingsMusic.Repeat Then Me.Next()
    
End
