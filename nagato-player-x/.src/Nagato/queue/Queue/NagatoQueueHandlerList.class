' Gambas class file

Inherits NagatoQueueHandler

Public Sub SaveCurrentQueue()
    
    Dim yukiPaths As New String[]
    Dim yukiIndex As Integer
    
    For yukiIndex = 0 To Me._$musicList.GetProerty(MikuruProperty.ListMax)
        yukiPaths.Add(Me._$musicList[yukiIndex].Path)
    Next
    
    NagatoSettingsMusic.SavePaths(yukiPaths)
    
End

Private Sub addDirectory(argPath As String)
    
    Dim yukiPaths As String[] = MikuruMusicFiles.GetFromDirectory(argPath)
    
    If yukiPaths.Count > 0 Then Me._$musicList.EnqueuePaths(yukiPaths)
    
End

Private Sub dequeueByIndexes(argIndexes As Integer[])
    
    Me._$player.Stop()
    Me._$musicList.DequeueIndexes(argIndexes)
    Me._$player.TryPlay()
    
End

Private Sub editTagsByTagIndexes(argIndexes As Integer[], argTags As NagatoId3TagInfo)
    
    Dim yukiIndex As Integer
    
    For Each yukiIndex In argIndexes
        Me._$musicList[yukiIndex].EditTags(argTags)
    Next
    
    Raise Signal(MikuruSignal.BroadcastId3TagChanged, argIndexes)
    
End

Public Sub _call(argSignal As Integer, argValues As Variant[])
    
    Select Case argSignal
        Case MikuruSignal.ListEdit
            editTagsByTagIndexes(argValues[0], argValues[1])
        Case MikuruSignal.ListAddDirectory
            addDirectory(argValues[0])
        Case MikuruSignal.ListDelete
            dequeueByIndexes(argValues)
        Default
            Me._$musicList(argSignal, argValues)
    End Select
    
End
