' Gambas class file

Create Static

Property Read ChannelPlayControl As NagatoQueueAssistantPlayControl
Property Read ChannelPlayState As NagatoQueueAssistantPlayState
Property Read ChannelList As NagatoQueueAssistantList
Property Read ChannelCurrent As NagatoQueueAssistantCurrent

Private $player As New NagatoPlayer
Private $musicList As NagatoMusicList 
Private $assistantPlayControl As NagatoQueueAssistantPlayControl
Private $assistantPlayState As NagatoQueueAssistantPlayState
Private $assistantList As NagatoQueueAssistantList
Private $assistantCurrent As NagatoQueueAssistantCurrent

Public Sub AddMusics(argPaths As String[])
    
    $musicList.ChannelQueue.EnqueuePaths(argPaths)

End

Public Sub DeleteIndexes(argIndexes As Integer[])
    
    $player.Stop()
    If $musicList.ChannelQueue.DequeueIndexes(argIndexes) Then $player.Play()
    
End

Public Sub Sort(argType As Integer, argAscend As Boolean)
    
    $musicList.ChannelMove.Sort(argType, argAscend)
    
End

Public Sub ClearAll()
    
    $player.Stop()
    $musicList.ChannelQueue.ClearAll()
    
End

Public Sub RemoveDuplicateMusic()
    
    $musicList.RemoveDuplicateMusic()
    
End

Public Sub EditByIndexes(argIndexes As Integer[])
    
    With MikuruDialogPortalTagEdit
        If argIndexes.Count = 1 Then .SetTag($musicList[argIndexes[0]].Path)
        If argIndexes.Count > 0 Then .SetTagBulk($musicList.ChannelQueue.GetPathsByIndexes(argIndexes))
    End With
    
End

Public Sub Activate(Optional argPaths As String[] = [""])
    
    $musicList = New NagatoMusicList(argPaths) 
    $assistantList = New NagatoQueueAssistantList($player, $musicList)
    $assistantPlayControl = New NagatoQueueAssistantPlayControl($player, $musicList)
    $assistantPlayState = New NagatoQueueAssistantPlayState($player, $musicList)
    $assistantCurrent = New NagatoQueueAssistantCurrent($player, $musicList)
    
End

Public Sub _get(argIndex As Integer) As NagatoMusicElement
    
    Return $musicList[argIndex]
    
End

Private Function ChannelPlayControl_Read() As NagatoQueueAssistantPlayControl

    Return $assistantPlayControl

End

Private Function ChannelPlayState_Read() As NagatoQueueAssistantPlayState

    Return $assistantPlayState

End

Private Function ChannelList_Read() As NagatoQueueAssistantList

    Return $assistantList

End

Private Function ChannelCurrent_Read() As NagatoQueueAssistantCurrent

    Return $assistantCurrent

End
