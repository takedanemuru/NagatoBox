' Gambas class file

Create Static

Property Read ChannelPlayer As NagatoQueueAssistantPlayer
Property Read ChannelList As NagatoQueueAssistantList
Property Read ChannelCurrent As NagatoQueueAssistantCurrent

Private $player As New NagatoPlayer
Private $musicList As NagatoMusicList 
Private $assistantPlayer As NagatoQueueAssistantPlayer
Private $assistantList As NagatoQueueAssistantList
Private $assistantCurrent As NagatoQueueAssistantCurrent

Private $enumIndex As Integer = -1

Public Sub AddMusics(argPaths As String[])
    
    $musicList.EnqueuePaths(argPaths)
    $assistantCurrent.Reload()
    NagatoSettingsMusic.SavePaths($musicList.Paths)

End

Public Sub DeleteIndexes(argIndexes As Integer[])
    
    $player.Stop()
    If $musicList.DequeueIndexes(argIndexes) Then $player.Play()
    
End

Public Sub Sort(argType As Integer, argAscend As Boolean)
    
    $musicList.Sort(argType, argAscend)
    
End

Public Sub ClearAll()
    
    $player.Stop()
    $musicList.ClearAll()
    $assistantCurrent.Reload()
    
End

Public Sub SaveAsPlaylist()
    
    If $assistantList.Count = 0 Then Return
    
    NagatoDBPlaylists.SaveAsPlaylist(MikuruDialog.PlaylistName, $assistantList.Paths)
    
End

Public Sub RemoveDuplicateMusic()
    
    $musicList.RemoveDuplicateMusic()
    
End

Public Sub EditByIndexes(argIndexes As Integer[])
    
    With MikuruDialogPortalTagEdit
        If argIndexes.Count = 1 Then .SetTag($musicList[argIndexes[0]].Path)
        If argIndexes.Count > 0 Then .SetTagBulk($musicList.GetPathsByIndexes(argIndexes))
    End With
    
End

Public Sub Activate(Optional argPaths As String[] = [""])
    
    $musicList = New NagatoMusicList(argPaths) 
    $assistantList = New NagatoQueueAssistantList($player, $musicList)
    $assistantPlayer = New NagatoQueueAssistantPlayer($player, $musicList)
    $assistantCurrent = New NagatoQueueAssistantCurrent($player, $musicList)
    
End

Public Sub _next() As NagatoMusicElement
    
    Inc $enumIndex

    Return $musicList[$enumIndex]
    
Catch
    $enumIndex = -1
    Enum.Stop()
    
End

Private Function ChannelList_Read() As NagatoQueueAssistantList

    Return $assistantList

End

Private Function ChannelCurrent_Read() As NagatoQueueAssistantCurrent

    Return $assistantCurrent

End

Private Function ChannelPlayer_Read() As NagatoQueueAssistantPlayer

    Return $assistantPlayer

End
