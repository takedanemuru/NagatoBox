' Gambas class file

Create Static

Public Enum Unknown, LinePower, Battery, Ups, Monitor, Mouse, KeyBoard, Pda, Phone

Private Const ApplicationName As String = "system://org.freedesktop.UPower"
Private Const ObjectPath As String = "/org/freedesktop/UPower"
Private Const Interface As String = "org.freedesktop.UPower"

Property Read TotalBatteryPercentage As Float
Property Read HasBattery As Boolean

Private $uPower As DBusProxy

Private Function getDeviceProxies(argFilter As Integer) As DBusProxy[]
    
    Dim yukiDeviceName As String
    Dim yukiDevices As New DBusProxy[]
    
    For Each yukiDeviceName In $uPower.EnumerateDevices()
        If DBus[ApplicationName][yukiDeviceName].Type = argFilter Then
            yukiDevices.Add(DBus[ApplicationName][yukiDeviceName])
        Endif
    Next
    
    Return yukiDevices
    
End

Public Sub EnsureActivation()
    
    If Not DBus.System.Applications.Exist("org.freedesktop.UPower") Then
        ' 0 means nothing. secondary argument currently not used.
        DBus["System://org.freedesktop.DBus"]["/", "org.freedesktop.DBus"].StartServiceByName("org.freedesktop.UPower", 0)
    End If
    
    $uPower = DBus[ApplicationName][ObjectPath, Interface]
    
End

Private Function TotalBatteryPercentage_Read() As Float

    Dim yukiProxy As DBusProxy
    Dim yukiTotalFull As Float = 0
    Dim yukiTotalRest As Float = 0

    For Each yukiProxy In getDeviceProxies(Me.Battery)
        yukiTotalFull += yukiProxy.EnergyFullDesign
        yukiTotalRest += (yukiProxy.EnergyFullDesign * yukiProxy.Percentage / 100)
    Next

    Return yukiTotalRest / yukiTotalFull * 100

End

Private Function HasBattery_Read() As Boolean

    If getDeviceProxies(Me.Battery).Count > 0 Then
        Return True
    Else
        Return False
    Endif

End
