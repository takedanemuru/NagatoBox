' Gambas class file

Inherits NagatoIcon

Private $textHeight As Integer

Private Function getHeaderText() As String
    
    Dim yukiReturn As String = "" 
    
    yukiReturn &= Subst$(("CPU: &1<br>"), "")
    yukiReturn &= Subst$(("Memory: &1<br>"), "")
    yukiReturn &= Subst$(("Swap: &1<br>"), "")
    yukiReturn &= Subst$(("Processes: &1<br>"), "")
    
    Return yukiReturn
    
End

Private Function getStatusText() As String
    
    Dim yukiReturn As String = ""
    
    yukiReturn &= Subst$(("&1<br>"), Format$(NagatoSystemObserver.CpuUsage, "##0.00%"))
    yukiReturn &= Subst$(("&1<br>"), Format$(NagatoSystemObserver.MemoryUsage, "##0.00%"))
    yukiReturn &= Subst$(("&1<br>"), Format$(NagatoSystemObserver.SwapUsage, "##0.00%"))
    yukiReturn &= Subst$(("&1<br>"), NagatoSystemObserver.ProcessCount)
    
    Return yukiReturn
    
End

Private Sub setFormPicture(Optional argBackground As Integer = Color.DarkBlue)
    
    Dim yukiBaseImage As New Image(128, Me._$form.Height, 10140862)
    'Dim yukiBaseImage As New Image(128, Me._$form.Height, argBackground)
    
    Paint.Begin(yukiBaseImage)
        Paint.Brush = Paint.Color(Color.White)
        Paint.Font.Bold = True
        Paint.DrawImage(NagatoSystemGraph.Get(112), 8, 8)
        Paint.DrawRichText(getHeaderText(), 8, 128, 112, $textHeight, Align.Left)
        Paint.DrawRichText(getStatusText(), 8, 128, 112, $textHeight, Align.Right)
    Paint.End()
    
    Me._$form.Picture = yukiBaseImage.Picture
    
End

Public Sub Refresh()
    
    setFormPicture()
    
End

Public Sub _new()
    
    Me._InitializeForm(192)
    Me._$form.Show
    
    $textHeight = Me._$form.Font.RichTextHeight(String$(4, "<br>"))
    Me._$form.Height = 128 + $textHeight
    
End
