' Gambas class file

Property Read Count As Integer
Property Read Data As Variant[]

Private $sort As New NagatoSort
Private $gridData As New Variant[]

Private Function ensureFirstRow(argRowData As Collection) As Boolean
    
    If $gridData.Count = 0 Or If $sort.TargetColumn = -1 Then
       $gridData.Add(argRowData)
       Return True
    Endif
    
    Return False

End

Private Function getGridData(argRowIndex As Integer) As Variant
    
    Dim yukiRowData As Collection = $gridData[argRowIndex]
    
    Return yukiRowData[MikuruColumn[$sort.TargetColumn]]
    
End

Private Function getRowData(argRowData As Collection) As Variant
    
    Return argRowData[MikuruColumn[$sort.TargetColumn]]
    
End

Private Function setRowData(argRowData As Collection) As Boolean
    
    Dim yukiIndex As Integer
    
    For yukiIndex = 0 To $gridData.Max
        If Not $sort.IsLesser(getGridData(yukiIndex), getRowData(argRowData)) Then Continue
        $gridData.Add(argRowData, yukiIndex)
        Return True
    Next
    
    Return False
    
End

Public Sub AddToGridData(argType As String, argPath As String)
    
    Dim yukiRowData As New NagatoDataRow(argType, argPath)
    
    If ensureFirstRow(yukiRowData.Collection) Then Return
    If setRowData(yukiRowData.Collection) Then Return
    $gridData.Add(yukiRowData.Collection)
    
End

Public Sub Clear()
    
    $gridData.Clear()
    
End

Public Sub Reset()
    
    $sort.Reset()
    
End

Public Sub SetTargetIndex(argIndex As Integer)
    
    $sort.SetTargetIndex(argIndex)
    
End

Private Function Count_Read() As Integer

    Return $gridData.Count

End

Private Function Data_Read() As Variant[]

    Return $gridData

End
