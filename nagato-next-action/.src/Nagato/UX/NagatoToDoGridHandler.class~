' Gambas class file

Inherits NagatoGrid

Public _$headers As String[] = [("Id"), ("Status"), ("Parent project"), ("What to do"), ("Memo"), ("Dead line")] 'override

Public Sub _RefreshData()
    
    Dim yukiResult As Result = NagatoDBToDo.GetAll()
    
    Me._$grid.Clear()
    Me._$grid.Rows.Count = 0
    
    For Each yukiResult
        Inc Me._$grid.Rows.Count
        Me._$grid[Me._$grid.Rows.Max, 0].Text = yukiResult[NagatoDBToDo.ColumnId]
        Me._$grid[Me._$grid.Rows.Max, 1].Text = MikuruStatus.List[yukiResult[NagatoDBToDo.ColumnStatus]]
        If Me._$grid[Me._$grid.Rows.Max, 1].Text <> "" Then
            Me._$grid[Me._$grid.Rows.Max, 1].Picture = MikuruStatus.GetIcon(yukiResult[NagatoDBToDo.ColumnStatus])
        End If
        Me._$grid[Me._$grid.Rows.Max, 2].Text = yukiResult[NagatoDBToDo.ColumnProject]
        Me._$grid[Me._$grid.Rows.Max, 3].Text = yukiResult[NagatoDBToDo.ColumnName]
        Me._$grid[Me._$grid.Rows.Max, 4].Text = yukiResult[NagatoDBToDo.ColumnMemo]
        Me._$grid[Me._$grid.Rows.Max, 5].Text = yukiResult[NagatoDBToDo.ColumnDateDeadline]
        If Even(Me._$grid.Rows.Max) Then Me._SetGridBackground(Me._$grid.Rows.Max, MikuruUX.GridBackgroundStripe)
        Me._AdjustColumnSize(Me._$grid.Rows.Max, [1, 3])
    Next
    
End

' Public Sub _new(argGridView As GridView)
'     
'     Me._$grid = argGridView
'     Me._InitializeHeader()
'     Me._RefreshData()
'     
' End
