' Gambas class file

Create Private

Public _$grid As GridView
Public _$headers As String[]

Public Sub _InitializeHeader()
    
    Dim yukiCount As Integer
    
    With Me._$grid
        .AutoResize = True
        .Columns.Count = Me._$headers.Count
        For yukiCount = 0 To Me._$headers.Max
            .Columns[yukiCount].Text = Me._$headers[yukiCount]
        Next
    End With
    
End

Public Sub _SetGridBackground(argRowIndex As Integer, argColor As Integer)
    
    Dim yukiColumnIndex As Integer
    
    For yukiColumnIndex = 0 To Me._$grid.Columns.Max
        Me._$grid[argRowIndex, yukiColumnIndex].Background = argColor
    Next
    
End

Public Sub _AdjustColumnSize(argRowIndex As Integer, argColumnIndexes As Integer[], Optional argIconIndexes As Integer[] = [])
    
    Dim yukiColumnIndex As Integer
    Dim yukiMargin As Integer
    Dim yukiColumnWidth As Integer
    
    For Each yukiColumnIndex In argColumnIndexes
        yukiMargin = IIf(argColumnIndexes.Exist(yukiColumnIndex), 4 * MikuruUX.Grid, 2 * MikuruUX.Grid)
        yukiColumnWidth = Me._$grid.Font.TextWidth(Me._$grid[argRowIndex, yukiColumnIndex].Text) + yukiMargin
        If yukiColumnWidth > Me._$grid.Columns[yukiColumnIndex].W Then
            Me._$grid.Columns[yukiColumnIndex].W = yukiColumnWidth
        Endif
    Next
    
End

Public Sub _RefreshData() ' This method is virtual, MUST be overridden
    
    
    
End

Public Sub Refresh()
    
    Me._RefreshData()
    
End
