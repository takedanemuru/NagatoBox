' Gambas class file

Inherits NagatoGrid

Public _$headers As String[] = ["Id", "Status", "Project"]

Private Function isFltered(argStatus As Integer) As Boolean
    
    If Not NagatoSettings.FilterSelectProject Then
        Return False
    Else If argStatus = MikuruStatus.Project Then 
        Return False
    End If
    
Finally
    Return True
    
End

Public Sub _RefreshData()
    
    Dim yukiResult As Result = NagatoDBToDo.GetAll()
    Dim yukiStatus As Integer
    
    Me._$grid.Clear()
    Me._$grid.Rows.Count = 0
    
    For Each yukiResult
        With yukiResult
            Try yukiStatus = .[NagatoDBToDo.ColumnStatus]
            If Error Then 
                Continue
            Else If isFltered(yukiStatus) Then
                Continue
            End If
            Inc Me._$grid.Rows.Count
            Me._$grid[Me._$grid.Rows.Max, 0].Text = .[NagatoDBToDo.ColumnId]
            Try Me._$grid[Me._$grid.Rows.Max, 1].Text = MikuruStatus.List[.[NagatoDBToDo.ColumnStatus]]
            Try Me._$grid[Me._$grid.Rows.Max, 1].Picture = MikuruStatus.GetIcon(.[NagatoDBToDo.ColumnStatus])
            Me._$grid[Me._$grid.Rows.Max, 2].Text = .[NagatoDBToDo.ColumnName]
            If Even(Me._$grid.Rows.Max) Then Me._SetGridBackground(Me._$grid.Rows.Max, MikuruUX.GridBackgroundPink)
            Me._AdjustColumnSize(Me._$grid.Rows.Max, [1, 2])
        End With
    Next
    
End

Public Sub _new(argGridView As GridView)
    
    Me._$grid = argGridView
    Me._InitializeHeader()
    Me._RefreshData()
    
End
