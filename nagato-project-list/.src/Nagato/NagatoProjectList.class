' Gambas class file

Create Static

Property Read All As NagatoProject[]
Property Read Label As String

Private $projects As New NagatoProject[]
Private $oldCours As Integer
Private $unmaintained As Integer

Private Sub readDirectory(argDirectory As String)
    
    Dim yukiPath As String
    Dim yukiProject As NagatoProject
    
    For Each yukiPath In Dir(argDirectory, "*", gb.Directory).Sort()
        If Not Dir(argDirectory &/ yukiPath).Exist(".project") Then Continue
        yukiProject = New NagatoProject(argDirectory &/ yukiPath &/ ".project")
        $projects.Add(yukiProject)
        If yukiProject.Status = MikuruDate.OldCours Then Inc $oldCours
        If yukiProject.Status = MikuruDate.Unmaintained Then Inc $unmaintained
    Next
    
End

Public Sub Refresh()
    
    $projects.Clear()
    
    readDirectory(User.Home &/ "NagatoBox")
    readDirectory(User.Home &/ "MiscProject")
    
End

Private Function All_Read() As NagatoProject[]

    Return $projects

End

Private Function Label_Read() As String

    Dim yukiText As String = Subst("YUKI.N > &1 projects found.", $projects.Count)

    If $oldCours > 0 Then yukiText &= Subst(" &1 projects aren't modefied in this cours.", $oldCours)
    If $unmaintained > 0 Then yukiText &= Subst(" &1 projects are unmaintained.", $unmaintained)

    Return yukiText

End
