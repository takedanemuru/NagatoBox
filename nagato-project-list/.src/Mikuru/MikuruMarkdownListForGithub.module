' Gambas module file

Private Function getMarkdownDocument(argDirectory As String) As String
    
    Dim yukiMarkdown As String = "# Applications List\n\n"
    Dim yukiProject As NagatoProjectForGithub
    Dim yukiList As New NagatoProjectListForGithub(argDirectory)
    
    For Each yukiProject In yukiList.All
        yukiMarkdown &= Subst("## &1 (v&2)\n\n", yukiProject.TitleHeader, yukiProject.Version)
        yukiMarkdown &= Subst("+ Description : &1\n", UnQuote(yukiProject.Description))
        yukiMarkdown &= Subst("+ Last Modefied : &1\n\n", Format(yukiProject.LastModified, "yyyy-mm-dd"))
        If yukiProject.ScreenshotsCount > 0 Then yukiMarkdown &= yukiProject.GetScreenShot(0)
        yukiMarkdown &= yukiProject.Document
    Next
    
    Return yukiMarkdown
    
End

Private Sub saveDocument(argDirectory As String)
    
    Dim yukiMarkdown As String = getMarkdownDocument(argDirectory)
    
    If Not Exist(argDirectory &/ "readme_extra") Then Mkdir argDirectory &/ "readme_extra"
    Try Kill argDirectory &/ "readme_extra/applications_list.md"
    File.Save(argDirectory &/ "/readme_extra/applications_list.md", yukiMarkdown)
    
End

Public Sub _call()
    
    Dim yukiPath As String
    
    Dialog.Path = User.Home
    Dialog.Title = "Select git directory"
    If Dialog.SelectDirectory() Then Return
    
    For Each yukiPath In Dir(Dialog.Path)
        If yukiPath = ".git" Then saveDocument(Dialog.Path)
    Next
    
End
